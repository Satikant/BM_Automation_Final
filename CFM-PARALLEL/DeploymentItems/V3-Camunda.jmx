<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Camunda-CFM-Test" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">D:\CFM-RunTimeFiles\sqljdbc41.jar,D:\CFM-RunTimeFiles\sqljdbc42.jar</stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">acehardware.v5qa.brandmuscle.local</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">dc.services.visualstudio.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">qa01asp02bmi.qa01aspe01.p.azurewebsites.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">formio01.kube01.qa01.brandmuscle.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_5" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_5</stringProp>
            <stringProp name="Argument.value">cfmaccrual01.kube01.qa01.brandmuscle.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
      </CookieManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:22.0) Gecko/20100101 Firefox/22.0</stringProp>
          </elementProp>
          <elementProp name="Connection" elementType="Header">
            <stringProp name="Header.name">Connection</stringProp>
            <stringProp name="Header.value">keep-alive</stringProp>
          </elementProp>
          <elementProp name="Accept-Language" elementType="Header">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">fr,en;q=0.8,fr-fr;q=0.5,en-us;q=0.3</stringProp>
          </elementProp>
          <elementProp name="Accept-Encoding" elementType="Header">
            <stringProp name="Header.name">Accept-Encoding</stringProp>
            <stringProp name="Header.value">gzip, deflate</stringProp>
          </elementProp>
          <elementProp name="Accept" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Token-Admin" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.ChromeDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig" testname="jp@gc - Chrome Driver Config" enabled="true">
          <stringProp name="WebDriverConfig.proxy_type">SYSTEM</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host"></stringProp>
          <intProp name="WebDriverConfig.http_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">true</boolProp>
          <stringProp name="WebDriverConfig.https_host"></stringProp>
          <intProp name="WebDriverConfig.https_port">8080</intProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">8080</intProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">8080</intProp>
          <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
          <boolProp name="WebDriverConfig.maximize_browser">true</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">false</boolProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <stringProp name="ChromeDriverConfig.chromedriver_path">D:\CFM-RunTimeFiles\chromedriver.exe</stringProp>
          <boolProp name="ChromeDriverConfig.android_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.headless_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.insecurecerts_enabled">false</boolProp>
        </com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="jp@gc - WebDriver Sampler" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium);
var support_ui = JavaImporter(org.openqa.selenium.support.ui.WebDriverWait);
var wait = new support_ui.WebDriverWait(WDS.browser, 5000);
var props = org.apache.jmeter.util.JMeterUtils.getJMeterProperties()
var select=JavaImporter(org.openqa.selenium.support.ui.Select);

WDS.sampleResult.sampleStart()
java.lang.Thread.sleep(7000)
WDS.browser.get(&apos;https://acehardware.v5qa.brandmuscle.net/Login/Login.aspx&apos;)
var titlep=WDS.browser.getTitle()
WDS.log.info(&quot;titlep====&gt;&quot;+WDS.browser.getTitle());

var username=WDS.browser.findElement(pkg.By.id(&apos;UserName&apos;));
username.sendKeys(&apos;UAT_Admin&apos;);
var password=WDS.browser.findElement(pkg.By.id(&apos;Password&apos;));
password.sendKeys(&apos;welcome&apos;);
var lgnbtn=WDS.browser.findElement(pkg.By.id(&apos;LoginButton&apos;));
lgnbtn.click();
java.lang.Thread.sleep(7000)

var element = WDS.browser.findElement(org.openqa.selenium.By.name(&apos;ctl00$MainContent$ddlBusinessUnit&apos;))
var select = new org.openqa.selenium.support.ui.Select(element)
select.selectByVisibleText(&apos;ACE Hardware&apos;)

var element = WDS.browser.findElement(org.openqa.selenium.By.xpath(&apos;//span[text()=&quot;Manage Co-op&quot;]&apos;))
element.click();
java.lang.Thread.sleep(25000)

var tokenvalue = WDS.browser.executeScript(&quot;return window.sessionStorage.getItem(&apos;token&apos;);&quot;) 
WDS.log.info(&quot;token====&gt;&quot;+tokenvalue);
props.put(&quot;TOKEN&quot;,tokenvalue);
WDS.sampleResult.sampleEnd()
</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">var props = org.apache.jmeter.util.JMeterUtils.getJMeterProperties();
var it = props.get(&quot;TOKEN&quot;);
log.info(&quot;BSFTOKEN==&gt;&quot;+it);
bsh.shared.token=it;
log.info(&quot;shared variable&quot;+bsh.shared.token);</stringProp>
        </BeanShellPostProcessor>
        <hashTree/>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="49586">200</stringProp>
          </collectionProp>
          <stringProp name="Assertion.custom_message"></stringProp>
          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
          <boolProp name="Assertion.assume_success">true</boolProp>
          <intProp name="Assertion.test_type">2</intProp>
        </ResponseAssertion>
        <hashTree/>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="2524">OK</stringProp>
          </collectionProp>
          <stringProp name="Assertion.custom_message"></stringProp>
          <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">2</intProp>
        </ResponseAssertion>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Programs-POST(+)" enabled="true">
        <stringProp name="TestPlan.comments">api/ChannelBuilder/v1/Programs?tenantId=acehardware</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1520852692000</longProp>
        <longProp name="ThreadGroup.end_time">1520852692000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PROGRAMS-POST(+)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ClaimDecisionId&quot;: &quot;24&quot;,&#xd;
  &quot;FundDistributionHierarchy&quot;: &quot;org&quot;,&#xd;
  &quot;HierarchyLevel&quot;: &quot;6,7&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;10098817156706.pdf&quot;,&#xd;
      &quot;size&quot;: 50406&#xd;
    }&#xd;
  ],&#xd;
  &quot;ProgramName&quot;: &quot;CamundaAPItest&quot;,&#xd;
  &quot;Description&quot;: &quot;CamundaAPItest&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;StartDate&quot;: &quot;2018-02-12T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-05-22T18:30:00.000Z&quot;,&#xd;
  &quot;ClaimWorkflowId&quot;: 23,&#xd;
  &quot;AllowOverdraft&quot;: &quot;No&quot;,&#xd;
  &quot;BrandingRequired&quot;: &quot;Yes&quot;,&#xd;
  &quot;AllowECom&quot;: &quot;no&quot;,&#xd;
  &quot;AccrualType&quot;: &quot;Flat&quot;,&#xd;
  &quot;FlatAccrualPeriod&quot;: &quot;Annual&quot;,&#xd;
  &quot;RollingAccrualPeriod&quot;: &quot;&quot;,&#xd;
  &quot;LastTransactionDate&quot;: &quot;2018-05-24T18:30:00.000Z&quot;,&#xd;
  &quot;ExpirationDate&quot;: &quot;2018-06-05T18:30:00.000Z&quot;,&#xd;
  &quot;Activities&quot;: [&#xd;
    {&#xd;
      &quot;DirectMailName&quot;: &quot;Direct Mail&quot;,&#xd;
      &quot;DirectMailDescription&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
      &quot;FleetgraphicsDescription&quot;: &quot;1. Image of the creative.&lt;/n&gt; 2. Invoice.&quot;,&#xd;
      &quot;FleetgraphicsName&quot;: &quot;Fleet graphics&quot;,&#xd;
      &quot;ROPName&quot;: &quot;ROP&quot;,&#xd;
      &quot;ROPDescription&quot;: &quot;1. Image of the creative.&lt;/n&gt; 2. Invoice.&lt;/n&gt; 3. One (1) original full-page tear sheet. (A tear heet is a page from the publication that serves as verification that the advertisement was published).&quot;,&#xd;
      &quot;DigitalandSocialMediaName&quot;: &quot;Digital and Social Media&quot;,&#xd;
      &quot;DigitalandSocialMediaDescription&quot;: &quot;1. Image of the Creative (Screenshot of the ad from the system or mobile).&lt;/n&gt; 2. Invoice.&quot;,&#xd;
      &quot;OutofHomeName&quot;: &quot;Out of Home&quot;,&#xd;
      &quot;OutofHomeDescription&quot;: &quot;1. Image of the Billboard.&lt;/n&gt; 2. Invoice.&quot;,&#xd;
      &quot;SponsorshipName&quot;: &quot;Sponsorship&quot;,&#xd;
      &quot;PrePrintName&quot;: &quot;Pre Print&quot;,&#xd;
      &quot;TVName&quot;: &quot;TV&quot;,&#xd;
      &quot;TVDescription&quot;: &quot;1. Invoice.&lt;/n&gt; 2. Notarized script with approved ANA/RAB or ANA TVB certification and net cost of spots.&quot;,&#xd;
      &quot;ReceiptAdvertisingName&quot;: &quot;Receipt Advertising&quot;,&#xd;
      &quot;BlueCMNBucketName&quot;: &quot;Blue CMN Bucket&quot;,&#xd;
      &quot;RadioName&quot;: &quot;Radio&quot;,&#xd;
      &quot;RadioDescription&quot;: &quot;1. Invoice.&lt;/n&gt; 2. Notarized script with approved ANA/RAB or ANA TVB certification and net cost of spots.&quot;,&#xd;
      &quot;ReimbursementType&quot;: &quot;Fixed&quot;,&#xd;
      &quot;FixedReimbursement&quot;: 12,&#xd;
      &quot;AllowCapping&quot;: &quot;no&quot;,&#xd;
      &quot;DirectMail&quot;: true,&#xd;
      &quot;Fleetgraphics&quot;: false,&#xd;
      &quot;ROP&quot;: false,&#xd;
      &quot;DigitalandSocialMedia&quot;: false,&#xd;
      &quot;OutofHome&quot;: false,&#xd;
      &quot;Sponsorship&quot;: false,&#xd;
      &quot;SponsorshipDescription&quot;: &quot;&quot;,&#xd;
      &quot;PrePrint&quot;: true,&#xd;
      &quot;PrePrintDescription&quot;: &quot;&quot;,&#xd;
      &quot;TV&quot;: true,&#xd;
      &quot;ReceiptAdvertising&quot;: false,&#xd;
      &quot;ReceiptAdvertisingDescription&quot;: &quot;&quot;,&#xd;
      &quot;BlueCMNBucket&quot;: false,&#xd;
      &quot;BlueCMNBucketDescription&quot;: &quot;&quot;,&#xd;
      &quot;Radio&quot;: true,&#xd;
      &quot;ActivitiesTableTextField&quot;: &quot;&quot;,&#xd;
      &quot;DirectMailRP&quot;: null,&#xd;
      &quot;DirectMailCapRP&quot;: null,&#xd;
      &quot;FleetgraphicsRP&quot;: null,&#xd;
      &quot;FleetgraphicsCapRP&quot;: null,&#xd;
      &quot;ROPRP&quot;: null,&#xd;
      &quot;ROPCapRP&quot;: null,&#xd;
      &quot;DigitalandSocialMediaRP&quot;: null,&#xd;
      &quot;DigitalandSocialMediaCapRP&quot;: null,&#xd;
      &quot;OutofHomeRP&quot;: null,&#xd;
      &quot;OutofHomeCapRP&quot;: null,&#xd;
      &quot;SponsorshipRP&quot;: null,&#xd;
      &quot;SponsorshipCapRP&quot;: null,&#xd;
      &quot;PrePrintRP&quot;: null,&#xd;
      &quot;PrePrintCapRP&quot;: null,&#xd;
      &quot;TVRP&quot;: null,&#xd;
      &quot;TVCapRP&quot;: null,&#xd;
      &quot;ReceiptAdvertisingRP&quot;: null,&#xd;
      &quot;ReceiptAdvertisingCapRP&quot;: null,&#xd;
      &quot;BlueCMNBucketRP&quot;: null,&#xd;
      &quot;BlueCMNBucketCapRP&quot;: null,&#xd;
      &quot;RadioRP&quot;: null,&#xd;
      &quot;RadioCapRP&quot;: null&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;programsace&quot;,&#xd;
  &quot;ProgramStatusName&quot;: &quot;Active&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-program/v2/Programs?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">http://azweb02u:11071/api/ChannelBuilder/v1/Programs?tenantId=acehardware</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">${__BeanShell(bsh.shared.token)}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/cfm/cfm.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1002898"> 200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Programs/GetProgramsForDashboard-GET(+)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1520859587000</longProp>
        <longProp name="ThreadGroup.end_time">1520859587000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="GET_All_Program_Ids" enabled="true"/>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DashboardPrograms-GET(+)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-program/v2/Programs/GetProgramsForDashboard?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">http://azweb02u:11071/api/ChannelBuilder/v1/Programs/GetProgramsForDashboard?tenantId=acehardware</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.token)}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/cfm/cfm.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">programid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..ProgramId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${programid_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${programid_1}&quot;);
String[] nprgid = vars.get(&quot;programid_ALL&quot;).split(&quot;,&quot;); 
int len = nprgid.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList numProgramid = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	numProgramid.add(nprgid[i]);
}
bsh.shared.numProgramid=numProgramid;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..$oid</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="Scope.variable">ok</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor programid" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${id_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${id_1}&quot;);
String[] prgid = vars.get(&quot;id_ALL&quot;).split(&quot;,&quot;); 
int len = prgid.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList Programid = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	Programid.add(prgid[i]);
}
bsh.shared.Programid=Programid;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/GetMarketingFundAccounts_POST(+)" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/GetMarketingFundAccounts?tenantId=acehardware</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1517906995000</longProp>
        <longProp name="ThreadGroup.end_time">1517906995000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">0</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">a</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">true</boolProp>
        </CounterConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST_MarketingFundAccount/GetMarketingFundAccounts" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
{&quot;StoreNo&quot;: &quot;00020&quot;,&quot;ProgramId&quot;: &quot;${__BeanShell(bsh.shared.Programid.get(${a}),)} &quot;}&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/GetMarketingFundAccounts?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.token)}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/cfm/cfm.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">lmeid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..LMEId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${lmeid_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${lmeid_1}&quot;);
String[] lmeids = vars.get(&quot;lmeid_ALL&quot;).split(&quot;,&quot;); 
int len = lmeids.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList almeids = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	almeids.add(lmeids[i]);
}
bsh.shared.almeids=almeids;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">lmename</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..LMEName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${lmename_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${lmename_1}&quot;);
String[] slmename = vars.get(&quot;lmename_ALL&quot;).split(&quot;,&quot;); 
int len = slmename.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList Mlmename = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	Mlmename.add(slmename[i]);
}
bsh.shared.Mlmename=Mlmename;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">marketingFundAccountId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..MarketingFundAccountId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">//byte [] samplerdata = ctx.getPreviousResult().getResponseData();
//String marketingFundAccountId = new String(samplerdata);
//log.info(marketingFundAccountId);
//bsh.shared.marketingFundAccountId=marketingFundAccountId;
//log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + bsh.shared.marketingFundAccountId);
//String ID = vars.get(&quot;MarketingFundAccountId&quot;);
//log.info(&quot;MarketingFundAccountId:&quot;,ID);
//log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${MarketingFundAccountId_1}&quot;);
//if (marketingFundAccountId.contains(&quot;MarketingFundAccountId&quot;)) 
//{
//	String ID = vars.get(&quot;MarketingFundAccountId&quot;);
//	log.info(&quot;MarketingFundAccountId:&quot;, ID);
//   log.info(&quot;----&gt;&gt;&gt;&gt;&gt;== &quot;+bsh.shared.MarketingFundAccountId); 
//} 

log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${marketingFundAccountId_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${marketingFundAccountId_1}&quot;);
String[] MarketId = vars.get(&quot;marketingFundAccountId_ALL&quot;).split(&quot;,&quot;); 
int len = MarketId.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList MarketfundId = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	MarketfundId.add(MarketId[i]);
}
bsh.shared.MarketfundId=MarketfundId;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Transaction/Transaction-POST(+)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1520859433000</longProp>
        <longProp name="ThreadGroup.end_time">1520859433000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">0</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">m</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Transaction/Transaction-POST(+)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
{&#xd;
  &quot;MarketingFundAccountTransactionId&quot;: 0,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;${__BeanShell(bsh.shared.MarketfundId.get(${m}),)}&quot;,&#xd;
  &quot;MarketingFundAccountTransactionType&quot;: &quot;PositiveAccrual&quot;,&#xd;
  &quot;TransactionAmount&quot;: 40000,&#xd;
  &quot;TransactionPeriod&quot;: &quot;04/2018&quot;,&#xd;
  &quot;Comments&quot;: &quot;400 dollars accrued&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;3512177&quot;,&#xd;
  &quot;CreatedDate&quot;: &quot;2018-05-04T06:10:05.438Z&quot;,&#xd;
  &quot;ModifiedByUserId&quot;: &quot;3512177&quot;,&#xd;
  &quot;ModifiedDate&quot;: &quot;2018-05-04T06:10:05.438Z&quot;,&#xd;
  &quot;MarketingFundAccountTransactionSourceName&quot;: &quot;System&quot;&#xd;
}&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/Transaction/Transaction?tenantId=acehardware </stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">http://azweb02u:11071/api/ChannelBuilder/v1/Transaction/Transaction</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.token)}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/cfm/cfm.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="ProgramNames_GET(+)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1512994500000</longProp>
        <longProp name="ThreadGroup.end_time">1512994500000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="CFM_GET_All_Programnames_List" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ProgramsNames-GET(+)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Programs/GetProgramList?tenantId=acehardware</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://azweb02u:11071/api/ChannelBuilder/v1/Programs?period=30&amp;startDate=null&amp;endDate=null&amp;limit=-1&amp;tenantId=acehardware</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
                </elementProp>
                <elementProp name="token" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.token)}</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/cfm/cfm.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">programname</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..ProgramName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor programname" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${programname_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${programname_1}&quot;);
String[] prgnames = vars.get(&quot;programname_ALL&quot;).split(&quot;,&quot;); 
int prglength = prgnames.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + prglength);
ArrayList programnames = new ArrayList();
for(int i=0;i&lt;prglength;i++)
{
	programnames.add(prgnames[i]);
}
bsh.shared.programnames=programnames;</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2524">OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/branding/Save?tenantId=acehardware(+)" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/branding/Save?tenantId=acehardware</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1521182466000</longProp>
        <longProp name="ThreadGroup.end_time">1521182466000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">0</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">lme</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/branding/Save?tenantId=acehardware" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;LMEId&quot;: &quot;${__BeanShell(bsh.shared.almeids.get(${lme}),)}&quot;,&#xd;
  &quot;BrandingReference&quot;:&quot;BPA&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;StartDate&quot;: &quot;2018-05-26T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-07-22T18:30:00.000Z&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedBrandingWorkflow_acehardware&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;1.jpg&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;brandingapprovalacehw&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating BPA&quot;,&#xd;
  &quot;BrandingRequestStatusName&quot;: &quot;Review&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/ClaimManagement/v1/branding/Save?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/branding/Save?tenantId=acehardware</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.token)}</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/cfm/cfm.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">brandingrequestid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..*</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">brandingid</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">//log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${brandingid_ALL}&quot;);
//log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${brandingid_1}&quot;);
//String[] brandingids = vars.get(&quot;brandingid_ALL&quot;).split(&quot;,&quot;); 
//int len = brandingids.length;
//log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
//ArrayList abrandingids = new ArrayList();
//for(int i=0;i&lt;len;i++)
//{
//	abrandingids.add(brandingids[i]);
//}
//bsh.shared.abrandingids=abrandingids;


byte [] samplerdata = ctx.getPreviousResult().getResponseData();
String brandingrequestid = new String(samplerdata);
log.info(&quot;=======&gt;&quot;+brandingrequestid);
String newbrandingid= brandingrequestid.replaceAll(&quot;^\&quot;|\&quot;$&quot;, &quot;&quot;);
//int i = Integer.parseInt(claimid);
log.info(&quot;newbrandingid========&gt;&quot;+newbrandingid);
bsh.shared.newbrandingid=newbrandingid;
log.info(&quot;=======&gt;&quot;+bsh.shared.newbrandingid);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/branding/GetBrandingRequestDetailsById-GET(+)" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/branding/GetBrandingRequestDetailsById?brandingRequestid=xixno&amp;tenantId=xnxnlzxmooa</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522134673000</longProp>
        <longProp name="ThreadGroup.end_time">1522134673000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">0</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">brandingid</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/branding/GetBrandingRequestDetailsById-GET(+)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v2/branding/GetBrandingRequestDetailsById?brandingRequestid=${__BeanShell(bsh.shared.newbrandingid)}&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.token)}</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/cfm/cfm.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Bprocessinstanceid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..ProcessInstanceId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">bprocessinstanceid</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${Bprocessinstanceid_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${Bprocessinstanceid_1}&quot;);
String[] bprocessid = vars.get(&quot;Bprocessinstanceid_ALL&quot;).split(&quot;,&quot;); 
int len = bprocessid.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList bprocessinstid = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	bprocessinstid.add(bprocessid[i]);
}
bsh.shared.bprocessinstid=bprocessinstid;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">brandingrequestid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..BrandingRequestId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="JSONPostProcessor.defaultValues">nbrandingrequestid</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${brandingrequestid_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${brandingrequestid_1}&quot;);
String[] sbrandingrequestid = vars.get(&quot;brandingrequestid_ALL&quot;).split(&quot;,&quot;); 
int len = sbrandingrequestid.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList abrandingrequestid = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	abrandingrequestid.add(sbrandingrequestid[i]);
}
bsh.shared.abrandingrequestid=abrandingrequestid;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/saveAndProcessClaim_POST(+)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1521182732000</longProp>
        <longProp name="ThreadGroup.end_time">1521182732000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">0</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">a</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
          <stringProp name="maximumValue">999</stringProp>
          <stringProp name="minimumValue">100</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">false</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">Invgeneratoroice</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/claims/saveAndProcessClaim(+)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;${__BeanShell(bsh.shared.Programid.get(${a}),)}&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;${__BeanShell(bsh.shared.almeids.get(${a}),)}&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;${__BeanShell(bsh.shared.MarketfundId.get(${a}),)}&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;${__BeanShell(bsh.shared.programnames.get(${a}),)}&quot;,&#xd;
  &quot;LMEName&quot;: &quot;(HQ) John W Weiss Ace Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Digital and Social Media&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Digital and Social Media&quot;,&#xd;
    &quot;RmbPercentage&quot;: 10,&#xd;
    &quot;Description&quot;: &quot;1. Image of the Creative (Screenshot of the ad from the system or mobile).&lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 55,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-03-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-13T18:30:00.000Z&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200000000&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;10 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;20000&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;20&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_${__BeanShell(bsh.shared.Programid.get(${a}),)}&quot;,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;Newinvoice 123&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/saveAndProcessClaim?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.token)}</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/cfm/cfm.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">claimid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..*</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="Sample.scope">variable</stringProp>
            <stringProp name="Scope.variable"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">c</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">
byte [] samplerdata = ctx.getPreviousResult().getResponseData();
String claimid = new String(samplerdata);
log.info(&quot;=======&gt;&quot;+claimid);
String newclaimid= claimid.replaceAll(&quot;^\&quot;|\&quot;$&quot;, &quot;&quot;);
//int i = Integer.parseInt(claimid);
log.info(&quot;newclaimid========&gt;&quot;+newclaimid);
bsh.shared.newclaimid=newclaimid;
log.info(&quot;=======&gt;&quot;+bsh.shared.newclaimid);
//${__setProperty(claimid,${claimid},)}
//log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + bsh.shared.marketingFundAccountId);
//String ID = vars.get(&quot;MarketingFundAccountId&quot;);
//log.info(&quot;MarketingFundAccountId:&quot;,ID);
//log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${MarketingFundAccountId_1}&quot;);
//if (marketingFundAccountId.contains(&quot;MarketingFundAccountId&quot;)) 
//{
//	String ID = vars.get(&quot;MarketingFundAccountId&quot;);
//	log.info(&quot;MarketingFundAccountId:&quot;, ID);
//   log.info(&quot;----&gt;&gt;&gt;&gt;&gt;== &quot;+bsh.shared.MarketingFundAccountId); 
//} 

//log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${claimid_ALL}&quot;);
//log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${claimid_1}&quot;);
//String[] claimId = vars.get(&quot;claimid_ALL&quot;).split(&quot;,&quot;); 
//int len = claimId.length;
//log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
//ArrayList CLaimId = new ArrayList();
//for(int i=0;i&lt;len;i++)
//{
//	CLaimId.add(claimId[i]);
//}
//bsh.shared.CLaimId=CLaimId;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/GetClaimDetailById_GET(+)Forcorporate" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/GetClaimDetailById?claimId=&amp;tenantId=</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1518176490000</longProp>
        <longProp name="ThreadGroup.end_time">1518176490000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="GET_claimdetailsbyId" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">0</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">g</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="claims/GetClaimDetailById_GET(+)FOR Corporate" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/GetClaimDetailById?claimId=${__BeanShell(bsh.shared.newclaimid)}&amp;isEditClaim=true&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.token)}</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/cfm/cfm.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">claimId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..ClaimId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <stringProp name="Scope.variable"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">
//bsh.shared.brandingRequestId=brandingRequestId;
//log.info(bsh.shared.brandingRequestId);
////log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${brandingRequestId_ALL}&quot;);
////log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${brandingRequestId_1}&quot;);
////String[] brandid = vars.get(&quot;brandingRequestId_ALL&quot;).split(&quot;,&quot;); 
////int len = brandid.length;
////log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
////ArrayList BRandid = new ArrayList();
////for(int i=0;i&lt;len;i++)
////{
////	BRandid.add(brandid[i]);
////}
////bsh.shared.BRandid=BRandid;
////log.info(&quot;Brandid===&gt;&quot;+bsh.shared.BRandid);

log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${claimId_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${claimId_1}&quot;);
String[] nclaimid = vars.get(&quot;claimId_ALL&quot;).split(&quot;,&quot;); 
int nclaimilength = nclaimi.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + nclaimilength);
ArrayList CLandId = new ArrayList();
for(int i=0;i&lt;nclaimilength;i++)
{
	CLandId.add(nclaimid[i]);
}
bsh.shared.CLandId=CLandId;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Cprocessinstanceidc</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..ProcessInstanceId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${Cprocessinstanceidc_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${Cprocessinstanceidc_1}&quot;);
String[] cprocessid = vars.get(&quot;Cprocessinstanceidc_ALL&quot;).split(&quot;,&quot;); 
int len = cprocessid.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList cprocessinstid = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	cprocessinstid.add(cprocessid[i]);
}
bsh.shared.cprocessinstid=cprocessinstid;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">CClaimDecisionId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..ClaimDecisionId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${CClaimDecisionId_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${CClaimDecisionId_1}&quot;);
String[] cclaimdesid = vars.get(&quot;CClaimDecisionId_ALL&quot;).split(&quot;,&quot;); 
int len = cclaimdesid.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList aCClaimDecisionId = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	aCClaimDecisionId.add(cclaimdesid[i]);
}
bsh.shared.aCClaimDecisionId=aCClaimDecisionId;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/save_POST(+)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1518074589000</longProp>
        <longProp name="ThreadGroup.end_time">1518074589000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">0</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">a</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/disbursements/save(+)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;Claims&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;${__BeanShell(bsh.shared.newclaimid)}&quot;,&#xd;
      &quot;PaidAmount&quot;: 20&#xd;
    }&#xd;
  ],&#xd;
  &quot;TotalApprovedAmount&quot;: 20,&#xd;
  &quot;TotalRequestedAmount&quot;: 20,&#xd;
  &quot;TotalPaidAmount&quot;: 20,&#xd;
  &quot;TotalClaims&quot;: 1,&#xd;
  &quot;DisbursementStatusName&quot;: &quot;Approved&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb02u</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/disbursements/save?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.token)}</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/cfm/cfm.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">disbursementId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..DisbursementId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="JSONPostProcessor.defaultValues">dis</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${disbursementId_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${disbursementId_1}&quot;);
String[] disId = vars.get(&quot;disbursementId_ALL&quot;).split(&quot;,&quot;); 
int len = disId.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList disbursementId = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	disbursementId.add(disId[i]);
}
bsh.shared.disbursementId=disbursementId;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">disbursementrefId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..DisbursementReferenceId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="JSONPostProcessor.defaultValues">disref</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${disbursementrefId_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${disbursementrefId_1}&quot;);
String[] disrefId = vars.get(&quot;disbursementrefId_ALL&quot;).split(&quot;,&quot;); 
int len = disrefId.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList disbursementrefId = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	disbursementrefId.add(disrefId[i]);
}
bsh.shared.disbursementrefId=disbursementrefId;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Workflow/start/Disbursement-POST(+)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1521390130000</longProp>
        <longProp name="ThreadGroup.end_time">1521390130000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">0</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">a</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/CamundaWorkflowSystem/v1/Workflow/start-POST(+)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;DisbursementId&quot;: &quot;${__BeanShell(bsh.shared.disbursementId.get(${a}),)}&quot;,&#xd;
  &quot;LMEId&quot;: &quot;${__BeanShell(bsh.shared.almeids.get(${a}),)}&quot;,&#xd;
  &quot;DisbursementReferenceId&quot;: &quot;${__BeanShell(bsh.shared.disbursementrefId.get(${a}),)}&quot;,&#xd;
  &quot;DisbursementStatusName&quot;: null,&#xd;
  &quot;DisbursementTypeId&quot;: null,&#xd;
  &quot;DisbursementTypeName&quot;: null,&#xd;
  &quot;TotalClaims&quot;: null,&#xd;
  &quot;ClaimId&quot;: &quot;${__BeanShell(bsh.shared.newclaimid)}&quot;,&#xd;
  &quot;TotalApprovedAmount&quot;: null,&#xd;
  &quot;TotalRequestedAmount&quot;: null,&#xd;
  &quot;DisbursementTime&quot;: null,&#xd;
  &quot;CreatedByUserId&quot;: null,&#xd;
  &quot;CreatedBy&quot;: null,&#xd;
  &quot;CreatedDate&quot;: null,&#xd;
  &quot;PrelimTime&quot;: null,&#xd;
  &quot;StartDocId&quot;: null,&#xd;
  &quot;EndDocId&quot;: null,&#xd;
  &quot;QcBy&quot;: null,&#xd;
  &quot;QcTime&quot;: null,&#xd;
  &quot;StartEventId&quot;: &quot;DisbursementWorkflow_acehardware&quot;,&#xd;
  &quot;ProcessInstanceId&quot;: null,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;WorkFlowFileName&quot;: null,&#xd;
  &quot;DisbursementComments&quot;: null,&#xd;
  &quot;BorderColorPallete&quot;: null,&#xd;
  &quot;TextColorPallete&quot;: null,&#xd;
  &quot;ApproverId&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/CamundaWorkflowSystem/v1/Workflow/start?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.token)}</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/cfm/cfm.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/workflow/start-POST(+)" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11074/api/CamundaWorkflowSystem/v1/Workflow/start</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1521546813000</longProp>
        <longProp name="ThreadGroup.end_time">1521546813000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
          <stringProp name="CounterConfig.start">0</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">d</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Workflow/start-BrandingApproval(+)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;_id&quot;: {&#xd;
    &quot;$oid&quot;: &quot;${__BeanShell(bsh.shared.newbrandingid)}&quot;&#xd;
  },&#xd;
  &quot;LMEId&quot;: &quot;${__BeanShell(bsh.shared.almeids.get(${d}),)}&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;StartDate&quot;: &quot;2018-03-26T18:30:00Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-22T18:30:00Z&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedBrandingWorkflow_acehardware&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;1.jpg&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;brandingapprovalacehw&quot;,&#xd;
  &quot;Comment&quot;: &quot;test&quot;,&#xd;
  &quot;ModifiedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;ModifiedByUserName&quot;: &quot;Apete1&quot;,&#xd;
  &quot;CreatedByUserName&quot;: &quot;Apete1&quot;,&#xd;
  &quot;ModifiedDate&quot;: {&#xd;
    &quot;$date&quot;: 1522136158115&#xd;
  },&#xd;
  &quot;CreatedDate&quot;: {&#xd;
    &quot;$date&quot;: 1522136158115&#xd;
  },&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;BrandingRequestId&quot;: &quot;${__BeanShell(bsh.shared.abrandingrequestid.get(${d}),)}&quot;,&#xd;
  &quot;ApproverId&quot;: &quot;3512177&quot;,&#xd;
  &quot;ApproverName&quot;: &quot;Test1&quot;,&#xd;
  &quot;ProcessInstanceId&quot;: &quot;${__BeanShell(bsh.shared.bprocessinstid.get(${d}),)}&quot;,&#xd;
  &quot;ReviewedDate&quot;: {&#xd;
    &quot;$date&quot;:&quot;${__time()}&quot;&#xd;
  },&#xd;
  &quot;LMEName&quot;: &quot;${__BeanShell(bsh.shared.Mlmename.get(${d}),)}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-camunda-workflow/v2/Workflow/Submitreview?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.token)}</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/cfm/cfm.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Workflow/start-Claim(+)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;_id&quot;: {&#xd;
    &quot;$oid&quot;: &quot;${__BeanShell(bsh.shared.newclaimid)}&quot;&#xd;
  },&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;${__BeanShell(bsh.shared.Programid.get(${d}),)}&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;${__BeanShell(bsh.shared.CLandId.get(${d}),)}&quot;,&#xd;
  &quot;LMEId&quot;: &quot;${__BeanShell(bsh.shared.almeids.get(${d}),)}&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;${__BeanShell(bsh.shared.MarketfundId.get(${d}),)}&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;${__BeanShell(bsh.shared.programnames.get(${d}),)}&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 12,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 0,&#xd;
    &quot;ErrorCode&quot;: 0&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-03-19T18:30:00Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-03-21T18:30:00Z&quot;,&#xd;
  &quot;TotalActivityCost&quot;: 2,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;10 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;20000&quot;,&#xd;
  &quot;RequestedAmount&quot;: 20,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_${__BeanShell(bsh.shared.Programid.get(${d}),)}&quot;,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;test&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;12345&quot;&#xd;
  ],&#xd;
  &quot;ModifiedByUserId&quot;: &quot;3512177&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;3512177&quot;,&#xd;
  &quot;ModifiedDate&quot;: {&#xd;
    &quot;$date&quot;: 1522219304553&#xd;
  },&#xd;
  &quot;CreatedDate&quot;: {&#xd;
    &quot;$date&quot;: 1522219304553&#xd;
  },&#xd;
  &quot;UnprocessedAmount&quot;: 0,&#xd;
  &quot;ApproverId&quot;: &quot;3512177&quot;,&#xd;
  &quot;ProcessInstanceId&quot;: &quot;${__BeanShell(bsh.shared.cprocessinstid.get(${d}),)}&quot;,&#xd;
  &quot;ReviewedDate&quot;: {&#xd;
    &quot;$date&quot;: 1522219323308&#xd;
  },&#xd;
  &quot;PaidAmount&quot;: 20,&#xd;
  &quot;ApprovedAmount&quot;: 20,&#xd;
  &quot;SelectedBrandingProgram&quot;: {&#xd;
    &quot;_id&quot;: {&#xd;
      &quot;$oid&quot;: &quot;${__BeanShell(bsh.shared.Programid.get(${d}),)}&quot;&#xd;
    },&#xd;
    &quot;ClaimDecisionId&quot;: &quot;${__BeanShell(bsh.shared.aCClaimDecisionId.get(${d}),)}&quot;,&#xd;
    &quot;FundDistributionHierarchy&quot;: &quot;org&quot;,&#xd;
    &quot;HierarchyLevel&quot;: &quot;6,7&quot;,&#xd;
    &quot;Documents&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;10098817156706.pdf&quot;,&#xd;
        &quot;size&quot;: 50406&#xd;
      }&#xd;
    ],&#xd;
    &quot;ProgramName&quot;: &quot;${__BeanShell(bsh.shared.programnames.get(${d}),)}&quot;,&#xd;
    &quot;Description&quot;: &quot;${__BeanShell(bsh.shared.programnames.get(${d}),)}&quot;,&#xd;
    &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
    &quot;StartDate&quot;: &quot;2018-02-12T18:30:00Z&quot;,&#xd;
    &quot;EndDate&quot;: &quot;2018-05-22T18:30:00Z&quot;,&#xd;
    &quot;ClaimWorkflowId&quot;: 23,&#xd;
    &quot;AllowOverdraft&quot;: &quot;No&quot;,&#xd;
    &quot;BrandingRequired&quot;: &quot;Yes&quot;,&#xd;
    &quot;AllowECom&quot;: &quot;no&quot;,&#xd;
    &quot;AccrualType&quot;: &quot;Flat&quot;,&#xd;
    &quot;FlatAccrualPeriod&quot;: &quot;Annual&quot;,&#xd;
    &quot;RollingAccrualPeriod&quot;: &quot;&quot;,&#xd;
    &quot;LastTransactionDate&quot;: &quot;2018-05-24T18:30:00Z&quot;,&#xd;
    &quot;ExpirationDate&quot;: &quot;2018-06-05T18:30:00Z&quot;,&#xd;
    &quot;Activities&quot;: &quot;[{\&quot;ActivityName\&quot;:\&quot;Direct Mail\&quot;,\&quot;RmbPercentage\&quot;:12.0,\&quot;Description\&quot;:\&quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.\&quot;,\&quot;CappingAmount\&quot;:0.0,\&quot;ErrorCode\&quot;:0},{\&quot;ActivityName\&quot;:\&quot;Pre Print\&quot;,\&quot;RmbPercentage\&quot;:12.0,\&quot;Description\&quot;:\&quot;\&quot;,\&quot;CappingAmount\&quot;:0.0,\&quot;ErrorCode\&quot;:0},{\&quot;ActivityName\&quot;:\&quot;TV\&quot;,\&quot;RmbPercentage\&quot;:12.0,\&quot;Description\&quot;:\&quot;1. Invoice.&lt;/n&gt; 2. Notarized script with approved ANA/RAB or ANA TVB certification and net cost of spots.\&quot;,\&quot;CappingAmount\&quot;:0.0,\&quot;ErrorCode\&quot;:0},{\&quot;ActivityName\&quot;:\&quot;Radio\&quot;,\&quot;RmbPercentage\&quot;:12.0,\&quot;Description\&quot;:\&quot;1. Invoice.&lt;/n&gt; 2. Notarized script with approved ANA/RAB or ANA TVB certification and net cost of spots.\&quot;,\&quot;CappingAmount\&quot;:0.0,\&quot;ErrorCode\&quot;:0}]&quot;,&#xd;
    &quot;FormKey&quot;: &quot;programsace&quot;,&#xd;
    &quot;ProgramStatusName&quot;: &quot;Approved&quot;,&#xd;
    &quot;ModifiedByUserId&quot;: &quot;3512177&quot;,&#xd;
    &quot;CreatedByUserId&quot;: &quot;3512177&quot;,&#xd;
    &quot;ModifiedDate&quot;: {&#xd;
      &quot;$date&quot;: 1522156543564&#xd;
    },&#xd;
    &quot;CreatedDate&quot;: {&#xd;
      &quot;$date&quot;: 1522155354116&#xd;
    },&#xd;
    &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
    &quot;ProgramId&quot;: &quot;${__BeanShell(bsh.shared.numProgramid.get(${d}),)}&quot;,&#xd;
    &quot;AvailableAmount&quot;: &quot;113178&quot;,&#xd;
    &quot;MarketingFundAccountId&quot;: &quot;${__BeanShell(bsh.shared.MarketfundId.get(${d}),)}&quot;,&#xd;
    &quot;LMEName&quot;: &quot;${__BeanShell(bsh.shared.Mlmename.get(${d}),)}&quot;,&#xd;
    &quot;AllowCapping&quot;: &quot;no&quot;&#xd;
  },&#xd;
  &quot;LMEName&quot;: &quot;${__BeanShell(bsh.shared.Mlmename.get(${d}),)}&quot;,&#xd;
  &quot;CreatedBy&quot;: &quot;Test1&quot;,&#xd;
  &quot;ApproverName&quot;: &quot;Test1&quot;,&#xd;
  &quot;ModifiedBy&quot;: &quot;Test1&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/CamundaWorkflowSystem/v1/Workflow/start?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.token)}</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/cfm/cfm.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;_id&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5cb8458204b5d200015e2c5b&quot;&#xd;
  },&#xd;
  &quot;LMEId&quot;: &quot;IazgaBhLgFaoFRtfyBb5iw&quot;,&#xd;
  &quot;BrandingReference&quot;: &quot;BPA&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;StartDate&quot;: &quot;2018-05-26T18:30:00Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-07-22T18:30:00Z&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedBrandingWorkflow_acehardware&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;1.jpg&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;brandingapprovalacehw&quot;,&#xd;
  &quot;ModifiedByUserId&quot;: &quot;4038968&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;4038968&quot;,&#xd;
  &quot;ModifiedByUserName&quot;: &quot;UAT_RetailEmployee&quot;,&#xd;
  &quot;CreatedByUserName&quot;: &quot;UAT_RetailEmployee&quot;,&#xd;
  &quot;ModifiedDate&quot;: {&#xd;
    &quot;$date&quot;: 1555580290176&#xd;
  },&#xd;
  &quot;CreatedDate&quot;: {&#xd;
    &quot;$date&quot;: 1555580290176&#xd;
  },&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;LMEName&quot;: &quot;26957 - (HQ) Agway Stores&quot;,&#xd;
  &quot;HierarchyPath&quot;: &quot;org:EVHKQCS6~V6w4~72fDpckg/xKlA8mtBw1KhTW~3DIgYVQ/crFehgT0Cl~jujZ4N0iefA/IBwoofEP~liIjJsIyGMIzQ/Wos3pyKEz1mk0iDORLQgUA/IazgaBhLgFaoFRtfyBb5iw&quot;,&#xd;
  &quot;ReviewHistory&quot;: [&#xd;
    {&#xd;
      &quot;Comment&quot;: &quot;Creating BPA&quot;,&#xd;
      &quot;ModifiedDate&quot;: &quot;2019-04-18T09:38:10.3003786Z&quot;,&#xd;
      &quot;ModifiedByUserId&quot;: &quot;4038968&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;BrandingRequestId&quot;: 1526,&#xd;
  &quot;ProcessInstanceId&quot;: &quot;1890003&quot;,&#xd;
  &quot;ApproverGroupId&quot;: &quot;6893&quot;,&#xd;
  &quot;CreatedBy&quot;: &quot;RetailEmployee UAT&quot;,&#xd;
  &quot;ApproverName&quot;: &quot;&quot;,&#xd;
  &quot;ModifiedBy&quot;: &quot;RetailEmployee UAT&quot;,&#xd;
  &quot;ActionRequired&quot;: true,&#xd;
  &quot;Comment&quot;: &quot;need some changes&quot;,&#xd;
  &quot;ApproverId&quot;: &quot;4038964&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">gateway.kube01-i.qa01.brandmuscle.net/api/cfm-camunda-workflow/v2</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/Workflow/submitreview?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.token)}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/workflow/start-POST(-)" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522901789000</longProp>
        <longProp name="ThreadGroup.end_time">1522901789000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Workflow/start-BrandingApproval(-)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;_id&quot;: {&#xd;
    &quot;$oid&quot;: &quot;y2900909202nd&quot;//&#xd;
  },&#xd;
  &quot;LMEId&quot;: &quot;700dnj&quot;,//&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;StartDate&quot;: &quot;2018-03-26T18:30:00Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-22T18:30:00Z&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedBrandingWorkflow_acehardware&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;1.jpg&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;brandingapprovalacehw&quot;,&#xd;
  &quot;Comment&quot;: &quot;test&quot;,&#xd;
  &quot;BrandingRequestStatusId&quot;: 6,//&#xd;
  &quot;ModifiedByUserId&quot;: &quot;3512176&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;3512176&quot;,&#xd;
  &quot;ModifiedByUserName&quot;: &quot;Lorda&quot;,&#xd;
  &quot;CreatedByUserName&quot;: &quot;Lorda&quot;,&#xd;
  &quot;ModifiedDate&quot;: {&#xd;
    &quot;$date&quot;: 1522136158115&#xd;
  },&#xd;
  &quot;CreatedDate&quot;: {&#xd;
    &quot;$date&quot;: 1522136158115&#xd;
  },&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;BrandingRequestId&quot;: &quot;abc123&quot;,//&#xd;
  &quot;ApproverId&quot;: &quot;3512176&quot;,&#xd;
  &quot;ApproverName&quot;: &quot;Lorda&quot;,&#xd;
  &quot;ProcessInstanceId&quot;: &quot;-456&quot;,&#xd;
  &quot;ReviewedDate&quot;: {&#xd;
    &quot;$date&quot;:&quot;${__time()}&quot;&#xd;
  },&#xd;
  &quot;LMEName&quot;: &quot;randomvalue&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/CamundaWorkflowSystem/v1/Workflow/start</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCIsImtpZCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCJ9.eyJpc3MiOiJodHRwOi8vYWNlaGFyZHdhcmUudjVxYS5icmFuZG11c2NsZS5sb2NhbC92NW9wZW5pZCIsImF1ZCI6IkNGTSIsImV4cCI6MTUyMTQ0NzU0NiwibmJmIjoxNTIxNDQ3MjQ2LCJub25jZSI6IjdiMDFkZDI4ODQzZTQ5MGQ4NzE5YWYyZmYwMjBiZWM1IiwiaWF0IjoxNTIxNDQ3MjQ2LCJhdF9oYXNoIjoiZnE0R05Jakl5cE5OalVRbFpsaWNNUSIsInNpZCI6IjE0ZjRhMzZiNzI3NDI4NzgwZjU5NzQ3YTZlY2ViYjA3Iiwic3ViIjoiMzUxMjE3NiIsImF1dGhfdGltZSI6MTUyMTQ0NzI0NSwiaWRwIjoiaWRzcnYiLCJibWkuYnVzaW5lc3N1bml0aWQiOiI1NjgiLCJibWkuYnVzaW5lc3N1bml0c3lzdGVtbmFtZSI6ImFjZWhhcmR3YXJlIiwiYm1pLnBlcnNvbmlkIjoiNDExNDUyMSIsImJtaS51c2VybmFtZSI6IkxvcmRhIiwiYm1pLmZpcnN0bmFtZSI6IkxvcmVuYSIsImJtaS5sYXN0bmFtZSI6Ik9yZGF6IiwiYm1pLmFkZHJlc3MiOiIxMjMgbWFpbiBzdC4iLCJibWkuYWRkcmVzczIiOiIiLCJibWkuY2l0eSI6ImNsZXZlbGFuZCIsImJtaS50ZWxlcGhvbmUiOiIyMzQxMjM5MDg3IiwiYm1pLnppcGNvZGUiOiI0NDExNCIsImJtaS5zdGF0ZSI6Ik9IIiwiYm1pLmNvdW50cnkiOiJVU0EiLCJibWkudGl0bGUiOiIiLCJibWkuZW1haWwiOiJzdXZhbS5wYXJpamFAYnJhbmRtdXNjbGUuY29tIiwiYm1pLmlzaW50ZXJuYWwiOiJGYWxzZSIsImJtaS5yaWdodCI6WyJBZHZhbmNlZFNlYXJjaFVzZXJzIiwiQWxsb3dPcmRlckFuZFBheSIsIkFsbG93T3JkZXJXaXRob3V0UGF5bWVudCIsIkFsbG93UmVzdWx0VG9FeGNlbCIsIkNhbkJlRW11bGF0ZWQiLCJDYW5FbXVsYXRlIiwiQ2hhbmdlTG9jYXRpb25TdGF0dXMiLCJDb3B5VXNlcnMiLCJDcmVhdGVfQWxsX0FkZHJlc3NCb29rIiwiQ3JlYXRlQWxsIiwiRGVsZXRlX0FsbF9BZGRyZXNzQm9va19Mb2NhdGlvbiIsIkRlbGV0ZUFkTWF0ZXJpYWwiLCJEZWxldGVBbGwiLCJEZWxldGVEZWxpdmVyeVJlcXVlc3RzIiwiRGVsZXRlVXNlcnMiLCJEZWxpdmVyeUFwcHJvdmFsTm90UmVxdWlyZWQiLCJEb3dubG9hZEFzc2V0cyIsIkVkaXRfQWxsX0FkZHJlc3NCb29rX0xvY2F0aW9uIiwiRWRpdEFkTWF0ZXJpYWwiLCJFZGl0QWRNYXRlcmlhbEJ5QXBwcm92ZXIiLCJFZGl0QWxsIiwiRURJVEVNQUlMQllBUFBST1ZFUiIsIkVESVRVU0VSUyIsIkVESVRXRUJQQUdFQllBUFBST1ZFUiIsIkVtYWlsX0FwcHJvdmVfRW1haWxzIiwiRW1haWxTZWFyY2hMb2NhdGlvbnMiLCJFTUFJTFZJRVdBTEwiLCJFTlRFUlBSSVNFQURNSU4iLCJMb2NhdGlvbkFkbWluaXN0cmF0b3IiLCJTZWFyY2hBbmRFbXVsYXRlVXNlcnMiLCJTdXBlckNyZWF0aXZlQXBwcm92ZXIiLCJTdXBlclJlcXVlc3RBcHByb3ZlciIsIlZpZXdfQWxsX0FkZHJlc3NCb29rIiwiVmlld19BbGxfQWRkcmVzc0Jvb2tfTG9jYXRpb24iLCJWaWV3QWxsIiwiVmlld0FsbERvY3VtZW50cyIsIlZpZXdBbGxEb3dubG9hZEhpc3RvcnkiLCJWaWV3QWxsRW1haWxzIiwiVmlld0FsbFdlYlBhZ2VzIiwiVmlld0NyZWF0aXZlQXBwcm92YWxzIiwiVmlld0NyZWF0aXZlcyIsIlZpZXdEZWxpdmVyeU9wdGlvbnMiLCJWaWV3RGVsaXZlcnlSZXF1ZXN0cyIsIlZpZXdEb3dubG9hZEhpc3RvcnkiLCJWaWV3SlBHIiwiVmlld0xvd1Jlc1BERiIsIlZpZXdSZXF1ZXN0QXBwcm92YWxzIiwiVmlld1VzZXJzIiwiV2ViUGFnZVNlYXJjaExvY2F0aW9ucyIsIldFQlBBR0VWSUVXQUxMIiwiY2xhaW0tcmV2aWV3IiwicHJlYXBwcm92YWwtdmlldyIsInN0YXJ0LXdvcmtmbG93IiwiYnJhbmRpbmctZGVsZXRlIiwiY2xhaW0tdmlldyIsImFjY3J1YWwtY3JlYXRlIiwicHJlYXBwcm92YWwtY3JlYXRlIiwiZGVwbG95LXdvcmtmbG93IiwiZGlzYnVyc2VtZW50LXZpZXciLCJ0cmFuc2Zlci1jcmVhdGUiLCJjbGFpbS1jcmVhdGUiLCJhZGp1c3RtZW50LWNyZWF0ZSIsInByb2dyYW0tY3JlYXRlIiwiYnJhbmRpbmctcmV2aWV3IiwicHJlYXBwcm92YWwtZGVsZXRlIiwiY2xhaW0tZGVsZXRlIiwicHJvZ3JhbS11cGRhdGUiLCJwcmVhcHByb3ZhbC1yZXZpZXciLCJhY2NvdW50LWNyZWF0ZSIsImRpc2J1cnNlbWVudC1jcmVhdGUiLCJwcm9ncmFtLWRlbGV0ZSIsImJyYW5kaW5nLWNyZWF0ZSIsImJyYW5kaW5nLXZpZXciLCJkaXNidXJzZW1lbnQtcmV2aWV3IiwicHJvZ3JhbS12aWV3IiwiYWNjb3VudC12aWV3Il0sImFtciI6WyJwYXNzd29yZCJdfQ.oO1_QyvskW19yIFYJVndSki6TlFOB_c6QUnMGT7R5xmyVFxvPAHhypQMkKEE5C7Tjtb6pU0B6Jun7MFhGiYKLRkkdpA0MeTCRIZlinF7GzuwPbgFeekOnj22QgzG-0iue8ROxQW0kJDRLbaxtuuAfrW1lJyplH6txwyZ3FH3bZTr-T3SBuCCotWM4QSLlw-8ZvpTP0u_PdsF6W5O3a639HE9A2WeV0mpElLah9md8qfIvKZ3yNE4sR6Yk-Eb0SsiDaB-40A9kX_0FCLvZfqQDkgawSGWergj-TLX6TJkFnl5IySr2umDBeuqjUpKE9UElOIXISHFRdV5SFBdeg-8WA</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/cfm/cfm.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1002898"> 200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">6</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">6</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Workflow/start-Claim(-)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;_id&quot;: {&#xd;
    &quot;$oid&quot;:test12348//////////////&#xd;
  },&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;678--mbko0ukml&quot;///&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;null&quot;,//&#xd;
  &quot;LMEId&quot;: &quot;789t&quot;,//&#xd;
  &quot;MarketingFundAccountId&quot;: &quot; mkcnscls-328293- c djcdnc&quot;,//&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;negativetest&quot;,//&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 12,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 0,&#xd;
    &quot;ErrorCode&quot;: 0&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-03-19T18:30:00Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-03-21T18:30:00Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;56590&quot;,&#xd;
  &quot;TotalActivityCost&quot;: 2,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;12 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;279.96&quot;,&#xd;
  &quot;RequestedAmount&quot;: 200,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_678--mbko0ukml&quot;,//&#xd;
  &quot;ClaimStatusId&quot;: 10,//&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;test&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;DB backup.PNG&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;&quot;//&#xd;
  ],&#xd;
  &quot;ModifiedByUserId&quot;: &quot;3512176&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;3512176&quot;,&#xd;
  &quot;ModifiedDate&quot;: {&#xd;
    &quot;$date&quot;: 1522219304553&#xd;
  },&#xd;
  &quot;CreatedDate&quot;: {&#xd;
    &quot;$date&quot;: 1522219304553&#xd;
  },&#xd;
  &quot;UnprocessedAmount&quot;: 0,&#xd;
  &quot;ApproverId&quot;: &quot;3512176&quot;,&#xd;
  &quot;ProcessInstanceId&quot;: &quot;7-3$%&quot;,//&#xd;
  &quot;ReviewedDate&quot;: {&#xd;
    &quot;$date&quot;: 1522219323308&#xd;
  },&#xd;
  &quot;PaidAmount&quot;: 200,&#xd;
  &quot;ApprovedAmount&quot;: 200,&#xd;
  &quot;SelectedBrandingProgram&quot;: {&#xd;
    &quot;_id&quot;: {&#xd;
      &quot;$oid&quot;: &quot;678--mbko0ukml&quot;//&#xd;
    },&#xd;
    &quot;ClaimDecisionId&quot;: y4r0,//&#xd;
    &quot;FundDistributionHierarchy&quot;: &quot;org&quot;,&#xd;
    &quot;HierarchyLevel&quot;: &quot;6,7&quot;,&#xd;
    &quot;Documents&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;10098817156706.pdf&quot;,&#xd;
        &quot;size&quot;: 50406&#xd;
      }&#xd;
    ],&#xd;
    &quot;ProgramName&quot;: &quot;Randomtest&quot;&#xd;
    &quot;Description&quot;: &quot;&quot;,&#xd;
    &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
    &quot;StartDate&quot;: &quot;2018-02-12T18:30:00Z&quot;,&#xd;
    &quot;EndDate&quot;: &quot;2018-05-22T18:30:00Z&quot;,&#xd;
    &quot;ClaimWorkflowId&quot;: $%^7,//&#xd;
    &quot;AllowOverdraft&quot;: &quot;No&quot;,&#xd;
    &quot;BrandingRequired&quot;: &quot;Yes&quot;,&#xd;
    &quot;AllowECom&quot;: &quot;no&quot;,&#xd;
    &quot;AccrualType&quot;: &quot;Flat&quot;,&#xd;
    &quot;FlatAccrualPeriod&quot;: &quot;Annual&quot;,&#xd;
    &quot;RollingAccrualPeriod&quot;: &quot;&quot;,&#xd;
    &quot;LastTransactionDate&quot;: &quot;2018-05-24T18:30:00Z&quot;,&#xd;
    &quot;ExpirationDate&quot;: &quot;2018-06-05T18:30:00Z&quot;,&#xd;
    &quot;Activities&quot;: &quot;[{\&quot;ActivityName\&quot;:\&quot;Direct Mail\&quot;,\&quot;RmbPercentage\&quot;:12.0,\&quot;Description\&quot;:\&quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.\&quot;,\&quot;CappingAmount\&quot;:0.0,\&quot;ErrorCode\&quot;:0},{\&quot;ActivityName\&quot;:\&quot;Pre Print\&quot;,\&quot;RmbPercentage\&quot;:12.0,\&quot;Description\&quot;:\&quot;\&quot;,\&quot;CappingAmount\&quot;:0.0,\&quot;ErrorCode\&quot;:0},{\&quot;ActivityName\&quot;:\&quot;TV\&quot;,\&quot;RmbPercentage\&quot;:12.0,\&quot;Description\&quot;:\&quot;1. Invoice.&lt;/n&gt; 2. Notarized script with approved ANA/RAB or ANA TVB certification and net cost of spots.\&quot;,\&quot;CappingAmount\&quot;:0.0,\&quot;ErrorCode\&quot;:0},{\&quot;ActivityName\&quot;:\&quot;Radio\&quot;,\&quot;RmbPercentage\&quot;:12.0,\&quot;Description\&quot;:\&quot;1. Invoice.&lt;/n&gt; 2. Notarized script with approved ANA/RAB or ANA TVB certification and net cost of spots.\&quot;,\&quot;CappingAmount\&quot;:0.0,\&quot;ErrorCode\&quot;:0}]&quot;,&#xd;
    &quot;FormKey&quot;: &quot;programsace&quot;,&#xd;
    &quot;ProgramStatusId&quot;: 12,//&#xd;
    &quot;ModifiedByUserId&quot;: &quot;3512177&quot;,&#xd;
    &quot;CreatedByUserId&quot;: &quot;3512176&quot;,&#xd;
    &quot;ModifiedDate&quot;: {&#xd;
      &quot;$date&quot;: 1522156543564&#xd;
    },&#xd;
    &quot;CreatedDate&quot;: {&#xd;
      &quot;$date&quot;: 1522155354116&#xd;
    },&#xd;
    &quot;TenantId&quot;: &quot;Superman&quot;,&#xd;
    &quot;ProgramId&quot;: &quot;t877219eqenas,d,m&quot;,//&#xd;
    &quot;AvailableAmount&quot;: &quot;113178&quot;,&#xd;
    &quot;MarketingFundAccountId&quot;: &quot;${__BeanShell(bsh.shared.MarketfundId.get(${m}),)}&quot;,&#xd;
    &quot;LMEName&quot;: &quot;negativelmename7300$5&quot;,&#xd;
    &quot;AllowCapping&quot;: &quot;no&quot;&#xd;
  },&#xd;
  &quot;LMEName&quot;: &quot;negativelmename&quot;,//&#xd;
  &quot;CreatedBy&quot;: &quot;lorda&quot;,&#xd;
  &quot;ApproverName&quot;: &quot;lorda&quot;,&#xd;
  &quot;ModifiedBy&quot;: &quot;lorda&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1002898"> 200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">6</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">6</intProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCIsImtpZCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCJ9.eyJpc3MiOiJodHRwOi8vYWNlaGFyZHdhcmUudjVxYS5icmFuZG11c2NsZS5sb2NhbC92NW9wZW5pZCIsImF1ZCI6IkNGTSIsImV4cCI6MTUyMTQ0NzU0NiwibmJmIjoxNTIxNDQ3MjQ2LCJub25jZSI6IjdiMDFkZDI4ODQzZTQ5MGQ4NzE5YWYyZmYwMjBiZWM1IiwiaWF0IjoxNTIxNDQ3MjQ2LCJhdF9oYXNoIjoiZnE0R05Jakl5cE5OalVRbFpsaWNNUSIsInNpZCI6IjE0ZjRhMzZiNzI3NDI4NzgwZjU5NzQ3YTZlY2ViYjA3Iiwic3ViIjoiMzUxMjE3NiIsImF1dGhfdGltZSI6MTUyMTQ0NzI0NSwiaWRwIjoiaWRzcnYiLCJibWkuYnVzaW5lc3N1bml0aWQiOiI1NjgiLCJibWkuYnVzaW5lc3N1bml0c3lzdGVtbmFtZSI6ImFjZWhhcmR3YXJlIiwiYm1pLnBlcnNvbmlkIjoiNDExNDUyMSIsImJtaS51c2VybmFtZSI6IkxvcmRhIiwiYm1pLmZpcnN0bmFtZSI6IkxvcmVuYSIsImJtaS5sYXN0bmFtZSI6Ik9yZGF6IiwiYm1pLmFkZHJlc3MiOiIxMjMgbWFpbiBzdC4iLCJibWkuYWRkcmVzczIiOiIiLCJibWkuY2l0eSI6ImNsZXZlbGFuZCIsImJtaS50ZWxlcGhvbmUiOiIyMzQxMjM5MDg3IiwiYm1pLnppcGNvZGUiOiI0NDExNCIsImJtaS5zdGF0ZSI6Ik9IIiwiYm1pLmNvdW50cnkiOiJVU0EiLCJibWkudGl0bGUiOiIiLCJibWkuZW1haWwiOiJzdXZhbS5wYXJpamFAYnJhbmRtdXNjbGUuY29tIiwiYm1pLmlzaW50ZXJuYWwiOiJGYWxzZSIsImJtaS5yaWdodCI6WyJBZHZhbmNlZFNlYXJjaFVzZXJzIiwiQWxsb3dPcmRlckFuZFBheSIsIkFsbG93T3JkZXJXaXRob3V0UGF5bWVudCIsIkFsbG93UmVzdWx0VG9FeGNlbCIsIkNhbkJlRW11bGF0ZWQiLCJDYW5FbXVsYXRlIiwiQ2hhbmdlTG9jYXRpb25TdGF0dXMiLCJDb3B5VXNlcnMiLCJDcmVhdGVfQWxsX0FkZHJlc3NCb29rIiwiQ3JlYXRlQWxsIiwiRGVsZXRlX0FsbF9BZGRyZXNzQm9va19Mb2NhdGlvbiIsIkRlbGV0ZUFkTWF0ZXJpYWwiLCJEZWxldGVBbGwiLCJEZWxldGVEZWxpdmVyeVJlcXVlc3RzIiwiRGVsZXRlVXNlcnMiLCJEZWxpdmVyeUFwcHJvdmFsTm90UmVxdWlyZWQiLCJEb3dubG9hZEFzc2V0cyIsIkVkaXRfQWxsX0FkZHJlc3NCb29rX0xvY2F0aW9uIiwiRWRpdEFkTWF0ZXJpYWwiLCJFZGl0QWRNYXRlcmlhbEJ5QXBwcm92ZXIiLCJFZGl0QWxsIiwiRURJVEVNQUlMQllBUFBST1ZFUiIsIkVESVRVU0VSUyIsIkVESVRXRUJQQUdFQllBUFBST1ZFUiIsIkVtYWlsX0FwcHJvdmVfRW1haWxzIiwiRW1haWxTZWFyY2hMb2NhdGlvbnMiLCJFTUFJTFZJRVdBTEwiLCJFTlRFUlBSSVNFQURNSU4iLCJMb2NhdGlvbkFkbWluaXN0cmF0b3IiLCJTZWFyY2hBbmRFbXVsYXRlVXNlcnMiLCJTdXBlckNyZWF0aXZlQXBwcm92ZXIiLCJTdXBlclJlcXVlc3RBcHByb3ZlciIsIlZpZXdfQWxsX0FkZHJlc3NCb29rIiwiVmlld19BbGxfQWRkcmVzc0Jvb2tfTG9jYXRpb24iLCJWaWV3QWxsIiwiVmlld0FsbERvY3VtZW50cyIsIlZpZXdBbGxEb3dubG9hZEhpc3RvcnkiLCJWaWV3QWxsRW1haWxzIiwiVmlld0FsbFdlYlBhZ2VzIiwiVmlld0NyZWF0aXZlQXBwcm92YWxzIiwiVmlld0NyZWF0aXZlcyIsIlZpZXdEZWxpdmVyeU9wdGlvbnMiLCJWaWV3RGVsaXZlcnlSZXF1ZXN0cyIsIlZpZXdEb3dubG9hZEhpc3RvcnkiLCJWaWV3SlBHIiwiVmlld0xvd1Jlc1BERiIsIlZpZXdSZXF1ZXN0QXBwcm92YWxzIiwiVmlld1VzZXJzIiwiV2ViUGFnZVNlYXJjaExvY2F0aW9ucyIsIldFQlBBR0VWSUVXQUxMIiwiY2xhaW0tcmV2aWV3IiwicHJlYXBwcm92YWwtdmlldyIsInN0YXJ0LXdvcmtmbG93IiwiYnJhbmRpbmctZGVsZXRlIiwiY2xhaW0tdmlldyIsImFjY3J1YWwtY3JlYXRlIiwicHJlYXBwcm92YWwtY3JlYXRlIiwiZGVwbG95LXdvcmtmbG93IiwiZGlzYnVyc2VtZW50LXZpZXciLCJ0cmFuc2Zlci1jcmVhdGUiLCJjbGFpbS1jcmVhdGUiLCJhZGp1c3RtZW50LWNyZWF0ZSIsInByb2dyYW0tY3JlYXRlIiwiYnJhbmRpbmctcmV2aWV3IiwicHJlYXBwcm92YWwtZGVsZXRlIiwiY2xhaW0tZGVsZXRlIiwicHJvZ3JhbS11cGRhdGUiLCJwcmVhcHByb3ZhbC1yZXZpZXciLCJhY2NvdW50LWNyZWF0ZSIsImRpc2J1cnNlbWVudC1jcmVhdGUiLCJwcm9ncmFtLWRlbGV0ZSIsImJyYW5kaW5nLWNyZWF0ZSIsImJyYW5kaW5nLXZpZXciLCJkaXNidXJzZW1lbnQtcmV2aWV3IiwicHJvZ3JhbS12aWV3IiwiYWNjb3VudC12aWV3Il0sImFtciI6WyJwYXNzd29yZCJdfQ.oO1_QyvskW19yIFYJVndSki6TlFOB_c6QUnMGT7R5xmyVFxvPAHhypQMkKEE5C7Tjtb6pU0B6Jun7MFhGiYKLRkkdpA0MeTCRIZlinF7GzuwPbgFeekOnj22QgzG-0iue8ROxQW0kJDRLbaxtuuAfrW1lJyplH6txwyZ3FH3bZTr-T3SBuCCotWM4QSLlw-8ZvpTP0u_PdsF6W5O3a639HE9A2WeV0mpElLah9md8qfIvKZ3yNE4sR6Yk-Eb0SsiDaB-40A9kX_0FCLvZfqQDkgawSGWergj-TLX6TJkFnl5IySr2umDBeuqjUpKE9UElOIXISHFRdV5SFBdeg-8WA</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/cfm/cfm.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Token(LME)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.ChromeDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig" testname="jp@gc - Chrome Driver Config" enabled="true">
          <stringProp name="WebDriverConfig.proxy_type">SYSTEM</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host"></stringProp>
          <intProp name="WebDriverConfig.http_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">true</boolProp>
          <stringProp name="WebDriverConfig.https_host"></stringProp>
          <intProp name="WebDriverConfig.https_port">8080</intProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">8080</intProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">8080</intProp>
          <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
          <boolProp name="WebDriverConfig.maximize_browser">true</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">false</boolProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <stringProp name="ChromeDriverConfig.chromedriver_path">D:\CFM-RunTimeFiles\chromedriver.exe</stringProp>
          <boolProp name="ChromeDriverConfig.android_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.headless_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.insecurecerts_enabled">false</boolProp>
        </com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="jp@gc - WebDriver Sampler" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium);
var support_ui = JavaImporter(org.openqa.selenium.support.ui.WebDriverWait);
var wait = new support_ui.WebDriverWait(WDS.browser, 5000);
var props = org.apache.jmeter.util.JMeterUtils.getJMeterProperties()
var select=JavaImporter(org.openqa.selenium.support.ui.Select);

WDS.sampleResult.sampleStart()
java.lang.Thread.sleep(7000)
WDS.browser.get(&apos;http://acehardware.v5qa.brandmuscle.local/Login/Login.aspx&apos;)
var titlep=WDS.browser.getTitle()
WDS.log.info(&quot;titlep====&gt;&quot;+WDS.browser.getTitle());
var username=WDS.browser.findElement(pkg.By.id(&apos;UserName&apos;));
username.sendKeys(&apos;Apete1&apos;);
var password=WDS.browser.findElement(pkg.By.id(&apos;Password&apos;));
password.sendKeys(&apos;welcome&apos;);
var lgnbtn=WDS.browser.findElement(pkg.By.id(&apos;LoginButton&apos;));
lgnbtn.click();
java.lang.Thread.sleep(7000)
var cfmlink = WDS.browser.findElement(org.openqa.selenium.By.xpath(&apos;//span[text()=&quot;Manage Co-op&quot;]&apos;))
cfmlink.click();
java.lang.Thread.sleep(25000)
var tokenlmevalue = WDS.browser.executeScript(&quot;return window.sessionStorage.getItem(&apos;token&apos;);&quot;) 
WDS.log.info(&quot;token====&gt;&quot;+tokenlmevalue);
props.put(&quot;TOKENLME&quot;,tokenlmevalue);
WDS.sampleResult.sampleEnd()
</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">var props = org.apache.jmeter.util.JMeterUtils.getJMeterProperties();
var itl = props.get(&quot;TOKENLME&quot;);
log.info(&quot;BSFTOKEN==&gt;&quot;+itl);
bsh.shared.tokenlme=itl;
log.info(&quot;shared variable&quot;+bsh.shared.tokenlme);</stringProp>
        </BeanShellPostProcessor>
        <hashTree/>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="49586">200</stringProp>
          </collectionProp>
          <stringProp name="Assertion.custom_message"></stringProp>
          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
          <boolProp name="Assertion.assume_success">true</boolProp>
          <intProp name="Assertion.test_type">2</intProp>
        </ResponseAssertion>
        <hashTree/>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="2524">OK</stringProp>
          </collectionProp>
          <stringProp name="Assertion.custom_message"></stringProp>
          <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">2</intProp>
        </ResponseAssertion>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>true</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/branding/Save?tenantId=acehardware(LME)(+)" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/branding/Save?tenantId=acehardware</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1521195756000</longProp>
        <longProp name="ThreadGroup.end_time">1521195756000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">0</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">a</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/branding/Save?tenantId=acehardware(LME)(+)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;LMEId&quot;: &quot;${__BeanShell(bsh.shared.almeids.get(${a}),)}&quot;,&#xd;
  &quot;BrandingReference&quot;:&quot;BPA&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;StartDate&quot;: &quot;2018-05-26T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-07-22T18:30:00.000Z&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedBrandingWorkflow_acehardware&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;1.jpg&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;brandingapprovalacehw&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating BPA&quot;,&#xd;
  &quot;BrandingRequestStatusName&quot;: &quot;Review&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/ClaimManagement/v1/branding/Save?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.tokenlme)}</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/cfm/cfm.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">brandingrequestidlme</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..*</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">//log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${brandingid_ALL}&quot;);
//log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${brandingid_1}&quot;);
//String[] brandingids = vars.get(&quot;brandingid_ALL&quot;).split(&quot;,&quot;); 
//int len = brandingids.length;
//log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
//ArrayList abrandingids = new ArrayList();
//for(int i=0;i&lt;len;i++)
//{
//	abrandingids.add(brandingids[i]);
//}
//bsh.shared.abrandingids=abrandingids;


byte [] samplerdata = ctx.getPreviousResult().getResponseData();
String brandingrequestidlme = new String(samplerdata);
log.info(&quot;=======&gt;&quot;+brandingrequestidlme);
String lnewbrandingid= brandingrequestidlme.replaceAll(&quot;^\&quot;|\&quot;$&quot;, &quot;&quot;);
//int i = Integer.parseInt(claimid);
log.info(&quot;newbrandingid========&gt;&quot;+lnewbrandingid);
bsh.shared.lnewbrandingid=lnewbrandingid;
log.info(&quot;=======&gt;&quot;+bsh.shared.lnewbrandingid);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/branding/GetBrandingRequestDetailsById-GET_(LME)(+)" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/branding/GetBrandingRequestDetailsById?brandingRequestid=&amp;tenantId=</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522134673000</longProp>
        <longProp name="ThreadGroup.end_time">1522134673000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/branding/Save?tenantId=acehardware" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v2/branding/GetBrandingRequestDetailsById?brandingRequestid=${__BeanShell(bsh.shared.lnewbrandingid)}&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/branding/Save?tenantId=acehardware</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.tokenlme)}</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/cfm/cfm.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Lprocessinstanceid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..ProcessInstanceId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${Lprocessinstanceid_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${Lprocessinstanceid_1}&quot;);
String[] lprocessid = vars.get(&quot;Lprocessinstanceid_ALL&quot;).split(&quot;,&quot;); 
int len = lprocessid.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList lprocessinstid = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	lprocessinstid.add(lprocessid[i]);
}
bsh.shared.lprocessinstid=lprocessinstid;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Lbrandingrequestid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..BrandingRequestId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="JSONPostProcessor.defaultValues">lbrandingrequestid</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${Lbrandingrequestid_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${Lbrandingrequestid_1}&quot;);
String[] slbrandingrequestid = vars.get(&quot;Lbrandingrequestid_ALL&quot;).split(&quot;,&quot;); 
int len = slbrandingrequestid.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList albrandingrequestid = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	albrandingrequestid.add(slbrandingrequestid[i]);
}
bsh.shared.albrandingrequestid=albrandingrequestid;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/saveAndProcessClaim-POST(+)" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1521196081000</longProp>
        <longProp name="ThreadGroup.end_time">1521196081000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">0</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">a</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">true</boolProp>
        </CounterConfig>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
          <stringProp name="CounterConfig.start">0</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">a</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">true</boolProp>
        </CounterConfig>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
          <stringProp name="CounterConfig.start">0</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">m</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">true</boolProp>
        </CounterConfig>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
          <stringProp name="CounterConfig.start">0</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">b</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">true</boolProp>
        </CounterConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/claims/saveAndProcessClaim-POST(+)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;${__BeanShell(bsh.shared.Programid.get(${a}),)}&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;${__BeanShell(bsh.shared.almeids.get(${a}),)}&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;${__BeanShell(bsh.shared.MarketfundId.get(${a}),)}&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;${__BeanShell(bsh.shared.programnames.get(${a}),)}&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 10,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 55,&#xd;
    &quot;ErrorCode&quot;: 0&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-03-20T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-01T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;56689&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200000000&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;10 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;20000&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;20&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_${__BeanShell(bsh.shared.Programid.get(${a}),)}&quot;,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;bird.jpg&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;345&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/ClaimManagement/v2/claims/saveAndProcessClaim?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.tokenlme)}</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/cfm/cfm.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">lmeclaimid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..*</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="Sample.scope">variable</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">
byte [] samplerdata = ctx.getPreviousResult().getResponseData();
String lclaimid = new String(samplerdata);
log.info(&quot;=======&gt;&quot;+lclaimid);
String lnewclaimid= lclaimid.replaceAll(&quot;^\&quot;|\&quot;$&quot;, &quot;&quot;);
//int i = Integer.parseInt(claimid);
log.info(&quot;newclaimid========&gt;&quot;+lnewclaimid);
bsh.shared.lnewclaimid=lnewclaimid;
log.info(&quot;=======&gt;&quot;+bsh.shared.lnewclaimid);
//${__setProperty(claimid,${claimid},)}
//log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + bsh.shared.marketingFundAccountId);
//String ID = vars.get(&quot;MarketingFundAccountId&quot;);
//log.info(&quot;MarketingFundAccountId:&quot;,ID);
//log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${MarketingFundAccountId_1}&quot;);
//if (marketingFundAccountId.contains(&quot;MarketingFundAccountId&quot;)) 
//{
//	String ID = vars.get(&quot;MarketingFundAccountId&quot;);
//	log.info(&quot;MarketingFundAccountId:&quot;, ID);
//   log.info(&quot;----&gt;&gt;&gt;&gt;&gt;== &quot;+bsh.shared.MarketingFundAccountId); 
//} 

//log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${claimid_ALL}&quot;);
//log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${claimid_1}&quot;);
//String[] claimId = vars.get(&quot;claimid_ALL&quot;).split(&quot;,&quot;); 
//int len = claimId.length;
//log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
//ArrayList CLaimId = new ArrayList();
//for(int i=0;i&lt;len;i++)
//{
//	CLaimId.add(claimId[i]);
//}
//bsh.shared.CLaimId=CLaimId;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">brandingrequestid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..BrandingRequestId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="JSONPostProcessor.defaultValues">nbrandingrequestid</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${brandingrequestid_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${brandingrequestid_1}&quot;);
String[] sbrandingrequestid = vars.get(&quot;brandingrequestid_ALL&quot;).split(&quot;,&quot;); 
int len = sbrandingrequestid.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList abrandingrequestid = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	abrandingrequestid.add(sbrandingrequestid[i]);
}
bsh.shared.abrandingrequestid=abrandingrequestid;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/GetClaimDetailById_GET(+)" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/GetClaimDetailById?claimId=&amp;tenantId=</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1518176490000</longProp>
        <longProp name="ThreadGroup.end_time">1518176490000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="GET_claimdetailsbyId" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">0</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">m</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">true</boolProp>
          </CounterConfig>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">0</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">a</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">true</boolProp>
          </CounterConfig>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">0</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">b</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">true</boolProp>
          </CounterConfig>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">0</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">c</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">true</boolProp>
          </CounterConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="claims/GetClaimDetailById_GET(+)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v2/claims/GetClaimDetailById?claimId=${__BeanShell(bsh.shared.lnewclaimid)}&amp;isEditClaim=true&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.tokenlme)}</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/cfm/cfm.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">LclaimId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..ClaimId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <stringProp name="Scope.variable"></stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">
//bsh.shared.brandingRequestId=brandingRequestId;
//log.info(bsh.shared.brandingRequestId);
////log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${brandingRequestId_ALL}&quot;);
////log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${brandingRequestId_1}&quot;);
////String[] brandid = vars.get(&quot;brandingRequestId_ALL&quot;).split(&quot;,&quot;); 
////int len = brandid.length;
////log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
////ArrayList BRandid = new ArrayList();
////for(int i=0;i&lt;len;i++)
////{
////	BRandid.add(brandid[i]);
////}
////bsh.shared.BRandid=BRandid;
////log.info(&quot;Brandid===&gt;&quot;+bsh.shared.BRandid);

log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${LclaimId_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${LclaimId_1}&quot;);
String[] nlclaimid = vars.get(&quot;LclaimId_ALL&quot;).split(&quot;,&quot;); 
int nlclaimilength = nlclaimid.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + nlclaimilength);
ArrayList lCLandId = new ArrayList();
for(int i=0;i&lt;nlclaimilength;i++)
{
	lCLandId.add(nlclaimid[i]);
}
bsh.shared.lCLandId=lCLandId;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Lprocessinstanceidl</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..ProcessInstanceId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">lprocessinstanceidl</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${Lprocessinstanceidl_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${Lprocessinstanceidl_1}&quot;);
String[] lprocessid = vars.get(&quot;Lprocessinstanceidl_ALL&quot;).split(&quot;,&quot;); 
int len = lprocessid.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList lprocessinstidc = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	lprocessinstidc.add(lprocessid[i]);
}
bsh.shared.lprocessinstidc=lprocessinstidc;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Workflow/submitreview_POST(+)--------data changed" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1521205296000</longProp>
        <longProp name="ThreadGroup.end_time">1521205296000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11074/api/CamundaWorkflowSystem/v1/Workflow/submitreview</stringProp>
      </ThreadGroup>
      <hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">0</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">a</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/Workflow/submitreview-POST(+)Approve Branding approval" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;_id&quot;: {&#xd;
    &quot;$oid&quot;: &quot;${__BeanShell(bsh.shared.lnewbrandingid)}&quot;&#xd;
  },&#xd;
  &quot;LMEId&quot;: &quot;${__BeanShell(bsh.shared.almeids.get(${a}),)}&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;StartDate&quot;: &quot;2018-03-26T18:30:00Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-03-27T18:30:00Z&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedBrandingWorkflow_acehardware&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;bird.jpg&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;brandingapprovalacehw&quot;,&#xd;
  &quot;ModifiedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;ModifiedByUserName&quot;: &quot;APete1&quot;,&#xd;
  &quot;CreatedByUserName&quot;: &quot;APete1&quot;,&#xd;
  &quot;ModifiedDate&quot;: {&#xd;
    &quot;$date&quot;: 1521202967420&#xd;
  },&#xd;
  &quot;CreatedDate&quot;: {&#xd;
    &quot;$date&quot;: 1521202967420&#xd;
  },&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;BrandingRequestId&quot;: &quot;${__BeanShell(bsh.shared.albrandingrequestid.get(${a}),)}&quot;,&#xd;
  &quot;ApproverId&quot;: &quot;3512176&quot;,&#xd;
  &quot;ApproverName&quot;: &quot;Lorda&quot;,&#xd;
  &quot;ProcessInstanceId&quot;: &quot;${__BeanShell(bsh.shared.lprocessinstid.get(${a}),)}&quot;,&#xd;
  &quot;LMEName&quot;: &quot;${__BeanShell(bsh.shared.Mlmename.get(${a}),)}&quot;,&#xd;
  &quot;Comment&quot;: &quot;Approved&quot;,&#xd;
  &quot;BrandingRequestStatusName&quot;: &quot;Approved&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/CamundaWorkflowSystem/v1/Workflow/submitreview?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Approve Branding approval</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.token)}</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/CFM/CFM.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/Workflow/submitreview-POST(+)Approving Claim" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;_id&quot;: {&#xd;
    &quot;$oid&quot;: &quot;${__BeanShell(bsh.shared.lnewclaimid)}&quot;&#xd;
  },&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;${__BeanShell(bsh.shared.Programid.get(${a}),)}&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;${__BeanShell(bsh.shared.lCLandId.get(${a}),)}&quot;,&#xd;
  &quot;LMEId&quot;: &quot;${__BeanShell(bsh.shared.almeids.get(${a}),)}&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;${__BeanShell(bsh.shared.MarketfundId.get(${a}),)}&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;${__BeanShell(bsh.shared.Programid.get(${a}),)}&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 10,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 55,&#xd;
    &quot;ErrorCode&quot;: 0&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-03-26T18:30:00Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-03-27T18:30:00Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;56660&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200000000&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;10 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;20000&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;20&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_${__BeanShell(bsh.shared.Programid.get(${a}),)}&quot;,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;download.jpg&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;567&quot;&#xd;
  ],&#xd;
  &quot;ModifiedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;ModifiedDate&quot;: {&#xd;
    &quot;$date&quot;: 1521203164604&#xd;
  },&#xd;
  &quot;CreatedDate&quot;: {&#xd;
    &quot;$date&quot;: 1521203164604&#xd;
  },&#xd;
  &quot;UnprocessedAmount&quot;: &quot;70&quot;,&#xd;
  &quot;ApproverId&quot;: &quot;3512177&quot;,&#xd;
  &quot;ProcessInstanceId&quot;: &quot;${__BeanShell(bsh.shared.lprocessinstidc.get(${a}),)}&quot;,&#xd;
  &quot;SelectedBrandingProgram&quot;: {&#xd;
    &quot;_id&quot;: {&#xd;
      &quot;$oid&quot;: &quot;${__BeanShell(bsh.shared.Programid.get(${a}),)}&quot;&#xd;
    },&#xd;
    &quot;ClaimDecisionId&quot;: &quot;24&quot;,&#xd;
    &quot;FundDistributionHierarchy&quot;: &quot;org&quot;,&#xd;
    &quot;HierarchyLevel&quot;: &quot;6,7&quot;,&#xd;
    &quot;Documents&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;download.jpg&quot;,&#xd;
        &quot;size&quot;: 6772&#xd;
      }&#xd;
    ],&#xd;
    &quot;ProgramName&quot;: &quot;${__BeanShell(bsh.shared.programnames.get(${a}),)}&quot;,&#xd;
    &quot;Description&quot;: &quot;test&quot;,&#xd;
    &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
    &quot;StartDate&quot;: &quot;2018-02-06T18:30:00Z&quot;,&#xd;
    &quot;EndDate&quot;: &quot;2018-04-10T18:30:00Z&quot;,&#xd;
    &quot;ClaimWorkflowId&quot;: 23,&#xd;
    &quot;AllowOverdraft&quot;: &quot;No&quot;,&#xd;
    &quot;BrandingRequired&quot;: &quot;Yes&quot;,&#xd;
    &quot;AllowECom&quot;: &quot;yes&quot;,&#xd;
    &quot;AccrualType&quot;: &quot;Flat&quot;,&#xd;
    &quot;FlatAccrualPeriod&quot;: &quot;Annual&quot;,&#xd;
    &quot;RollingAccrualPeriod&quot;: &quot;&quot;,&#xd;
    &quot;LastTransactionDate&quot;: &quot;2018-05-06T18:30:00Z&quot;,&#xd;
    &quot;ExpirationDate&quot;: &quot;2018-06-19T18:30:00Z&quot;,&#xd;
    &quot;Activities&quot;: &quot;[{\&quot;ActivityName\&quot;:\&quot;Direct Mail\&quot;,\&quot;RmbPercentage\&quot;:12.0,\&quot;Description\&quot;:\&quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.\&quot;,\&quot;CappingAmount\&quot;:0.0,\&quot;ErrorCode\&quot;:0},{\&quot;ActivityName\&quot;:\&quot;ROP\&quot;,\&quot;RmbPercentage\&quot;:12.0,\&quot;Description\&quot;:\&quot;1. Image of the creative.&lt;/n&gt; 2. Invoice.&lt;/n&gt; 3. One (1) original full-page tear sheet. (A tear heet is a page from the publication that serves as verification that the advertisement was published).\&quot;,\&quot;CappingAmount\&quot;:0.0,\&quot;ErrorCode\&quot;:0},{\&quot;ActivityName\&quot;:\&quot;Digital and Social Media\&quot;,\&quot;RmbPercentage\&quot;:12.0,\&quot;Description\&quot;:\&quot;1. Image of the Creative (Screenshot of the ad from the system or mobile).&lt;/n&gt; 2. Invoice.\&quot;,\&quot;CappingAmount\&quot;:0.0,\&quot;ErrorCode\&quot;:0},{\&quot;ActivityName\&quot;:\&quot;TV\&quot;,\&quot;RmbPercentage\&quot;:12.0,\&quot;Description\&quot;:\&quot;1. Invoice.&lt;/n&gt; 2. Notarized script with approved ANA/RAB or ANA TVB certification and net cost of spots.\&quot;,\&quot;CappingAmount\&quot;:0.0,\&quot;ErrorCode\&quot;:0},{\&quot;ActivityName\&quot;:\&quot;Radio\&quot;,\&quot;RmbPercentage\&quot;:12.0,\&quot;Description\&quot;:\&quot;1. Invoice.&lt;/n&gt; 2. Notarized script with approved ANA/RAB or ANA TVB certification and net cost of spots.\&quot;,\&quot;CappingAmount\&quot;:0.0,\&quot;ErrorCode\&quot;:0},{\&quot;ActivityName\&quot;:\&quot;Other\&quot;,\&quot;RmbPercentage\&quot;:12.0,\&quot;Description\&quot;:\&quot;Image of the creative\&quot;,\&quot;CappingAmount\&quot;:0.0,\&quot;ErrorCode\&quot;:0}]&quot;,&#xd;
    &quot;FormKey&quot;: &quot;programsace&quot;,&#xd;
    &quot;ProgramStatusName&quot;: &quot;Approved&quot;,&#xd;
    &quot;ModifiedByUserId&quot;: &quot;3512177&quot;,&#xd;
    &quot;CreatedByUserId&quot;: &quot;3512172&quot;,&#xd;
    &quot;ModifiedDate&quot;: {&#xd;
      &quot;$date&quot;: 1521102199798&#xd;
    },&#xd;
    &quot;CreatedDate&quot;: {&#xd;
      &quot;$date&quot;: 1521093956409&#xd;
    },&#xd;
    &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
    &quot;ProgramId&quot;: &quot;${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&quot;,&#xd;
    &quot;AvailableAmount&quot;: &quot;56590&quot;,&#xd;
    &quot;MarketingFundAccountId&quot;: &quot;${__BeanShell(bsh.shared.MarketfundId.get(${a}),)}&quot;,&#xd;
    &quot;LMEName&quot;: &quot;${__BeanShell(bsh.shared.Mlmename.get(${a}),)}&quot;,&#xd;
    &quot;AllowCapping&quot;: &quot;no&quot;&#xd;
  },&#xd;
  &quot;LMEName&quot;: &quot;${__BeanShell(bsh.shared.Mlmename.get(${a}),)}&quot;,&#xd;
  &quot;CreatedBy&quot;: &quot;Apete1&quot;,&#xd;
  &quot;ApproverName&quot;: &quot;Test1&quot;,&#xd;
  &quot;ModifiedBy&quot;: &quot;Apete1&quot;,&#xd;
  &quot;Comment&quot;: &quot;approved&quot;,&#xd;
  &quot;ReviewCodes&quot;: [&#xd;
    34,&#xd;
    35&#xd;
  ],&#xd;
  &quot;ClaimStatus&quot;: null,&#xd;
  &quot;ClaimStatusName&quot;: &quot;Approved&quot;,&#xd;
  &quot;ApprovedAmount&quot;: 70&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/CamundaWorkflowSystem/v1/Workflow/submitreview?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Approving Claim</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.token)}</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/CFM/CFM.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Workflow/submitreview_POST(-)" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1521391018000</longProp>
        <longProp name="ThreadGroup.end_time">1521391018000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/Workflow/submitreview-BrandingApproval(-)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;_id&quot;: {&#xd;
    &quot;$oid&quot;: &quot;62e90encnskcncncaao&quot;&#xd;
  },&#xd;
  &quot;LMEId&quot;: &quot;xnncocmzxcxx81-1&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;StartDate&quot;: &quot;2018-03-26T18:30:00Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-03-27T18:30:00Z&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedBrandingWorkflow_acehardware&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;bird.jpg&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;brandingapprovalacehw&quot;,&#xd;
  &quot;BrandingRequestStatusId&quot;: 8,&#xd;
  &quot;ModifiedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;ModifiedByUserName&quot;: &quot;APete1&quot;,&#xd;
  &quot;CreatedByUserName&quot;: &quot;APete1&quot;,&#xd;
  &quot;ModifiedDate&quot;: {&#xd;
    &quot;$date&quot;: 1521202967420&#xd;
  },&#xd;
  &quot;CreatedDate&quot;: {&#xd;
    &quot;$date&quot;: 1521202967420&#xd;
  },&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;BrandingRequestId&quot;: avboo,&#xd;
  &quot;ApproverId&quot;: &quot;3512176&quot;,&#xd;
  &quot;ApproverName&quot;: &quot;Lorda&quot;,&#xd;
  &quot;ProcessInstanceId&quot;: &quot;n xlxp0&quot;,&#xd;
  &quot;LMEName&quot;: &quot;00020 - (HQ) John W Weiss Ace Hardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;appppppppppppppprobve&quot;,&#xd;
  &quot;BrandingRequestStatusName&quot;: &quot;Approved&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/CamundaWorkflowSystem/v1/Workflow/submitreview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCIsImtpZCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCJ9.eyJpc3MiOiJodHRwOi8vYWNlaGFyZHdhcmUudjVxYS5icmFuZG11c2NsZS5sb2NhbC92NW9wZW5pZCIsImF1ZCI6IkNGTSIsImV4cCI6MTUyMTIwMzE0MiwibmJmIjoxNTIxMjAyODQyLCJub25jZSI6IjgxZjYwNzRiYmJkYjQ4OTE5MTAwZTgzZDliYjdlZGYyIiwiaWF0IjoxNTIxMjAyODQyLCJhdF9oYXNoIjoiWnRlUjh5dG5vN3VSV1JfNHE0MUJ3QSIsInNpZCI6ImY4ODVlM2ZhMWFlYTgzYWEwYjA2NGVlYmYzODU5MWU3Iiwic3ViIjoiMzUxMjE3NiIsImF1dGhfdGltZSI6MTUyMTE4MjA4NSwiaWRwIjoiaWRzcnYiLCJibWkuYnVzaW5lc3N1bml0aWQiOiI1NjgiLCJibWkuYnVzaW5lc3N1bml0c3lzdGVtbmFtZSI6ImFjZWhhcmR3YXJlIiwiYm1pLnBlcnNvbmlkIjoiNDExNDUyMSIsImJtaS51c2VybmFtZSI6IkxvcmRhIiwiYm1pLmZpcnN0bmFtZSI6IkxvcmVuYSIsImJtaS5sYXN0bmFtZSI6Ik9yZGF6IiwiYm1pLmFkZHJlc3MiOiIxMjMgbWFpbiBzdC4iLCJibWkuYWRkcmVzczIiOiIiLCJibWkuY2l0eSI6ImNsZXZlbGFuZCIsImJtaS50ZWxlcGhvbmUiOiIyMzQxMjM5MDg3IiwiYm1pLnppcGNvZGUiOiI0NDExNCIsImJtaS5zdGF0ZSI6Ik9IIiwiYm1pLmNvdW50cnkiOiJVU0EiLCJibWkudGl0bGUiOiIiLCJibWkuZW1haWwiOiJQcml5YW5rYS5ZYWRhdkBicmFuZG11c2NsZS5jb20iLCJibWkuaXNpbnRlcm5hbCI6IkZhbHNlIiwiYm1pLnJpZ2h0IjpbIkFkdmFuY2VkU2VhcmNoVXNlcnMiLCJBbGxvd09yZGVyQW5kUGF5IiwiQWxsb3dPcmRlcldpdGhvdXRQYXltZW50IiwiQWxsb3dSZXN1bHRUb0V4Y2VsIiwiQ2FuQmVFbXVsYXRlZCIsIkNhbkVtdWxhdGUiLCJDaGFuZ2VMb2NhdGlvblN0YXR1cyIsIkNvcHlVc2VycyIsIkNyZWF0ZV9BbGxfQWRkcmVzc0Jvb2siLCJDcmVhdGVBbGwiLCJEZWxldGVfQWxsX0FkZHJlc3NCb29rX0xvY2F0aW9uIiwiRGVsZXRlQWRNYXRlcmlhbCIsIkRlbGV0ZUFsbCIsIkRlbGV0ZURlbGl2ZXJ5UmVxdWVzdHMiLCJEZWxldGVVc2VycyIsIkRlbGl2ZXJ5QXBwcm92YWxOb3RSZXF1aXJlZCIsIkRvd25sb2FkQXNzZXRzIiwiRWRpdF9BbGxfQWRkcmVzc0Jvb2tfTG9jYXRpb24iLCJFZGl0QWRNYXRlcmlhbCIsIkVkaXRBZE1hdGVyaWFsQnlBcHByb3ZlciIsIkVkaXRBbGwiLCJFRElURU1BSUxCWUFQUFJPVkVSIiwiRURJVFVTRVJTIiwiRURJVFdFQlBBR0VCWUFQUFJPVkVSIiwiRW1haWxfQXBwcm92ZV9FbWFpbHMiLCJFbWFpbFNlYXJjaExvY2F0aW9ucyIsIkVNQUlMVklFV0FMTCIsIkVOVEVSUFJJU0VBRE1JTiIsIkxvY2F0aW9uQWRtaW5pc3RyYXRvciIsIlNlYXJjaEFuZEVtdWxhdGVVc2VycyIsIlN1cGVyQ3JlYXRpdmVBcHByb3ZlciIsIlN1cGVyUmVxdWVzdEFwcHJvdmVyIiwiVmlld19BbGxfQWRkcmVzc0Jvb2siLCJWaWV3X0FsbF9BZGRyZXNzQm9va19Mb2NhdGlvbiIsIlZpZXdBbGwiLCJWaWV3QWxsRG9jdW1lbnRzIiwiVmlld0FsbERvd25sb2FkSGlzdG9yeSIsIlZpZXdBbGxFbWFpbHMiLCJWaWV3QWxsV2ViUGFnZXMiLCJWaWV3Q3JlYXRpdmVBcHByb3ZhbHMiLCJWaWV3Q3JlYXRpdmVzIiwiVmlld0RlbGl2ZXJ5T3B0aW9ucyIsIlZpZXdEZWxpdmVyeVJlcXVlc3RzIiwiVmlld0Rvd25sb2FkSGlzdG9yeSIsIlZpZXdKUEciLCJWaWV3TG93UmVzUERGIiwiVmlld1JlcXVlc3RBcHByb3ZhbHMiLCJWaWV3VXNlcnMiLCJXZWJQYWdlU2VhcmNoTG9jYXRpb25zIiwiV0VCUEFHRVZJRVdBTEwiLCJjbGFpbS1yZXZpZXciLCJwcmVhcHByb3ZhbC12aWV3Iiwic3RhcnQtd29ya2Zsb3ciLCJicmFuZGluZy1kZWxldGUiLCJjbGFpbS12aWV3IiwiYWNjcnVhbC1jcmVhdGUiLCJwcmVhcHByb3ZhbC1jcmVhdGUiLCJkZXBsb3ktd29ya2Zsb3ciLCJkaXNidXJzZW1lbnQtdmlldyIsInRyYW5zZmVyLWNyZWF0ZSIsImNsYWltLWNyZWF0ZSIsImFkanVzdG1lbnQtY3JlYXRlIiwicHJvZ3JhbS1jcmVhdGUiLCJicmFuZGluZy1yZXZpZXciLCJwcmVhcHByb3ZhbC1kZWxldGUiLCJjbGFpbS1kZWxldGUiLCJwcm9ncmFtLXVwZGF0ZSIsInByZWFwcHJvdmFsLXJldmlldyIsImFjY291bnQtY3JlYXRlIiwiZGlzYnVyc2VtZW50LWNyZWF0ZSIsInByb2dyYW0tZGVsZXRlIiwiYnJhbmRpbmctY3JlYXRlIiwiYnJhbmRpbmctdmlldyIsImRpc2J1cnNlbWVudC1yZXZpZXciLCJwcm9ncmFtLXZpZXciLCJhY2NvdW50LXZpZXciXSwiYW1yIjpbInBhc3N3b3JkIl19.Db-vJCZlYOvrzrNeuqJviWhWQdjEJ4rzlS4zXWGjI1Xzt2IYQV6C8uiqOYXRIHDjrbJcspBr-xfzxUFU4-oxPPuQ2D9Bz1SQJGrrkkIzuZwHTaFob1-_vEAW-4A0UYhaYU4BjqfZ8VUPwJewaJlj8JRlptt-kgfsE6ARuLmi7l8_ZQ9S-uaeaULYO4au_fEbhv8DOg-fyuhTazkgtHGgj4j_RBCYa5Ym_UOUnFnbgT0d6-bTKKP0HIFWSoBA9ak3SNuf849eawfa_9ZrN8TxiWaLt-T8rSKgS2AeakJcpOLEC7e20zinO8fZxXf2yWN4gpGrf6NX5WKqQ6lf5C6Y5w</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/CFM/CFM.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1002898"> 200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/Workflow/submitreview-Claim_Submitreview(-)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;_id&quot;: {&#xd;
    &quot;$oid&quot;: &quot;69q88e0dnadaadasodadasdv&quot;&#xd;
  },&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;69q88e0dnadaadasodadasdv&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;899ynbfmkfl&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;1324gmbkfdkdgkbggfn&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;random123&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;999&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 12,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 0,&#xd;
    &quot;ErrorCode&quot;: 0&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;&quot;,&#xd;
  &quot;EndDate&quot;: &quot;&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;56660&quot;,&#xd;
  &quot;TotalActivityCost&quot;: 678,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;12 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;81.36&quot;,&#xd;
  &quot;RequestedAmount&quot;: 70,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_69q88e0dnadaadasodadasdv&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;download.jpg&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;567&quot;&#xd;
  ],&#xd;
  &quot;ModifiedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;ModifiedDate&quot;: {&#xd;
    &quot;$date&quot;: 1521203164604&#xd;
  },&#xd;
  &quot;CreatedDate&quot;: {&#xd;
    &quot;$date&quot;: 1521203164604&#xd;
  },&#xd;
  &quot;UnprocessedAmount&quot;: &quot;70&quot;,&#xd;
  &quot;ApproverId&quot;: &quot;21321m&quot;,&#xd;
  &quot;ProcessInstanceId&quot;: &quot;xbxaxk89&quot;,&#xd;
  &quot;SelectedBrandingProgram&quot;: {&#xd;
    &quot;_id&quot;: {&#xd;
      &quot;$oid&quot;: &quot;5aaa0d442a97e124dcd9e757&quot;&#xd;
    },&#xd;
    &quot;ClaimDecisionId&quot;: &quot;24&quot;,&#xd;
    &quot;FundDistributionHierarchy&quot;: &quot;org&quot;,&#xd;
    &quot;HierarchyLevel&quot;: &quot;6,7&quot;,&#xd;
    &quot;Documents&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;download.jpg&quot;,&#xd;
        &quot;size&quot;: 6772&#xd;
      }&#xd;
    ],&#xd;
    &quot;ProgramName&quot;: &quot;nagativetest899&quot;,&#xd;
    &quot;Description&quot;: &quot;test&quot;,&#xd;
    &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
    &quot;StartDate&quot;: &quot;2018-02-06T18:30:00Z&quot;,&#xd;
    &quot;EndDate&quot;: &quot;2018-04-10T18:30:00Z&quot;,&#xd;
    &quot;ClaimWorkflowId&quot;: vbksao,&#xd;
    &quot;AllowOverdraft&quot;: &quot;No&quot;,&#xd;
    &quot;BrandingRequired&quot;: &quot;Yes&quot;,&#xd;
    &quot;AllowECom&quot;: &quot;yes&quot;,&#xd;
    &quot;AccrualType&quot;: &quot;Flat&quot;,&#xd;
    &quot;FlatAccrualPeriod&quot;: &quot;Annual&quot;,&#xd;
    &quot;RollingAccrualPeriod&quot;: &quot;&quot;,&#xd;
    &quot;LastTransactionDate&quot;: &quot;2018-05-06T18:30:00Z&quot;,&#xd;
    &quot;ExpirationDate&quot;: &quot;2018-06-19T18:30:00Z&quot;,&#xd;
    &quot;Activities&quot;: &quot;[{\&quot;ActivityName\&quot;:\&quot;Direct Mail\&quot;,\&quot;RmbPercentage\&quot;:12.0,\&quot;Description\&quot;:\&quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.\&quot;,\&quot;CappingAmount\&quot;:0.0,\&quot;ErrorCode\&quot;:0},{\&quot;ActivityName\&quot;:\&quot;ROP\&quot;,\&quot;RmbPercentage\&quot;:12.0,\&quot;Description\&quot;:\&quot;1. Image of the creative.&lt;/n&gt; 2. Invoice.&lt;/n&gt; 3. One (1) original full-page tear sheet. (A tear heet is a page from the publication that serves as verification that the advertisement was published).\&quot;,\&quot;CappingAmount\&quot;:0.0,\&quot;ErrorCode\&quot;:0},{\&quot;ActivityName\&quot;:\&quot;Digital and Social Media\&quot;,\&quot;RmbPercentage\&quot;:12.0,\&quot;Description\&quot;:\&quot;1. Image of the Creative (Screenshot of the ad from the system or mobile).&lt;/n&gt; 2. Invoice.\&quot;,\&quot;CappingAmount\&quot;:0.0,\&quot;ErrorCode\&quot;:0},{\&quot;ActivityName\&quot;:\&quot;TV\&quot;,\&quot;RmbPercentage\&quot;:12.0,\&quot;Description\&quot;:\&quot;1. Invoice.&lt;/n&gt; 2. Notarized script with approved ANA/RAB or ANA TVB certification and net cost of spots.\&quot;,\&quot;CappingAmount\&quot;:0.0,\&quot;ErrorCode\&quot;:0},{\&quot;ActivityName\&quot;:\&quot;Radio\&quot;,\&quot;RmbPercentage\&quot;:12.0,\&quot;Description\&quot;:\&quot;1. Invoice.&lt;/n&gt; 2. Notarized script with approved ANA/RAB or ANA TVB certification and net cost of spots.\&quot;,\&quot;CappingAmount\&quot;:0.0,\&quot;ErrorCode\&quot;:0},{\&quot;ActivityName\&quot;:\&quot;Other\&quot;,\&quot;RmbPercentage\&quot;:12.0,\&quot;Description\&quot;:\&quot;Image of the creative\&quot;,\&quot;CappingAmount\&quot;:0.0,\&quot;ErrorCode\&quot;:0}]&quot;,&#xd;
    &quot;FormKey&quot;: &quot;programsace&quot;,&#xd;
    &quot;ProgramStatusId&quot;: 12,&#xd;
    &quot;ModifiedByUserId&quot;: &quot;3512177&quot;,&#xd;
    &quot;CreatedByUserId&quot;: &quot;3512176&quot;,&#xd;
    &quot;ModifiedDate&quot;: {&#xd;
      &quot;$date&quot;: 1521102199798&#xd;
    },&#xd;
    &quot;CreatedDate&quot;: {&#xd;
      &quot;$date&quot;: 1521093956409&#xd;
    },&#xd;
    &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
    &quot;ProgramId&quot;: 80 hh,&#xd;
    &quot;AvailableAmount&quot;: &quot;56590&quot;,&#xd;
    &quot;MarketingFundAccountId&quot;: &quot;1324gmbkfdkdgkbggfn&quot;,&#xd;
    &quot;LMEName&quot;: &quot;#$&amp;-call of duty&quot;,&#xd;
  	&quot;CreatedBy&quot;: &quot;&quot;,,&#xd;
    &quot;AllowCapping&quot;: &quot;no&quot;&#xd;
  },&#xd;
  &quot;LMEName&quot;: &quot;#$&amp;-call of duty&quot;,&#xd;
  &quot;CreatedBy&quot;: &quot;&quot;,&#xd;
  &quot;ApproverName&quot;: &quot;lorda&quot;,&#xd;
  &quot;ModifiedBy&quot;: &quot;apete1&quot;,&#xd;
  &quot;Comment&quot;: &quot;approvedvvvv&quot;,&#xd;
  &quot;ReviewCodes&quot;: [&#xd;
    34,&#xd;
    35&#xd;
  ],&#xd;
  &quot;ClaimStatus&quot;: null,&#xd;
  &quot;ClaimStatusName&quot;: &quot;Approved&quot;,&#xd;
  &quot;ApprovedAmount&quot;: 70&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/CamundaWorkflowSystem/v1/Workflow/submitreview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">claim</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCIsImtpZCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCJ9.eyJpc3MiOiJodHRwOi8vYWNlaGFyZHdhcmUudjVxYS5icmFuZG11c2NsZS5sb2NhbC92NW9wZW5pZCIsImF1ZCI6IkNGTSIsImV4cCI6MTUyMTIwMzE0MiwibmJmIjoxNTIxMjAyODQyLCJub25jZSI6IjgxZjYwNzRiYmJkYjQ4OTE5MTAwZTgzZDliYjdlZGYyIiwiaWF0IjoxNTIxMjAyODQyLCJhdF9oYXNoIjoiWnRlUjh5dG5vN3VSV1JfNHE0MUJ3QSIsInNpZCI6ImY4ODVlM2ZhMWFlYTgzYWEwYjA2NGVlYmYzODU5MWU3Iiwic3ViIjoiMzUxMjE3NiIsImF1dGhfdGltZSI6MTUyMTE4MjA4NSwiaWRwIjoiaWRzcnYiLCJibWkuYnVzaW5lc3N1bml0aWQiOiI1NjgiLCJibWkuYnVzaW5lc3N1bml0c3lzdGVtbmFtZSI6ImFjZWhhcmR3YXJlIiwiYm1pLnBlcnNvbmlkIjoiNDExNDUyMSIsImJtaS51c2VybmFtZSI6IkxvcmRhIiwiYm1pLmZpcnN0bmFtZSI6IkxvcmVuYSIsImJtaS5sYXN0bmFtZSI6Ik9yZGF6IiwiYm1pLmFkZHJlc3MiOiIxMjMgbWFpbiBzdC4iLCJibWkuYWRkcmVzczIiOiIiLCJibWkuY2l0eSI6ImNsZXZlbGFuZCIsImJtaS50ZWxlcGhvbmUiOiIyMzQxMjM5MDg3IiwiYm1pLnppcGNvZGUiOiI0NDExNCIsImJtaS5zdGF0ZSI6Ik9IIiwiYm1pLmNvdW50cnkiOiJVU0EiLCJibWkudGl0bGUiOiIiLCJibWkuZW1haWwiOiJQcml5YW5rYS5ZYWRhdkBicmFuZG11c2NsZS5jb20iLCJibWkuaXNpbnRlcm5hbCI6IkZhbHNlIiwiYm1pLnJpZ2h0IjpbIkFkdmFuY2VkU2VhcmNoVXNlcnMiLCJBbGxvd09yZGVyQW5kUGF5IiwiQWxsb3dPcmRlcldpdGhvdXRQYXltZW50IiwiQWxsb3dSZXN1bHRUb0V4Y2VsIiwiQ2FuQmVFbXVsYXRlZCIsIkNhbkVtdWxhdGUiLCJDaGFuZ2VMb2NhdGlvblN0YXR1cyIsIkNvcHlVc2VycyIsIkNyZWF0ZV9BbGxfQWRkcmVzc0Jvb2siLCJDcmVhdGVBbGwiLCJEZWxldGVfQWxsX0FkZHJlc3NCb29rX0xvY2F0aW9uIiwiRGVsZXRlQWRNYXRlcmlhbCIsIkRlbGV0ZUFsbCIsIkRlbGV0ZURlbGl2ZXJ5UmVxdWVzdHMiLCJEZWxldGVVc2VycyIsIkRlbGl2ZXJ5QXBwcm92YWxOb3RSZXF1aXJlZCIsIkRvd25sb2FkQXNzZXRzIiwiRWRpdF9BbGxfQWRkcmVzc0Jvb2tfTG9jYXRpb24iLCJFZGl0QWRNYXRlcmlhbCIsIkVkaXRBZE1hdGVyaWFsQnlBcHByb3ZlciIsIkVkaXRBbGwiLCJFRElURU1BSUxCWUFQUFJPVkVSIiwiRURJVFVTRVJTIiwiRURJVFdFQlBBR0VCWUFQUFJPVkVSIiwiRW1haWxfQXBwcm92ZV9FbWFpbHMiLCJFbWFpbFNlYXJjaExvY2F0aW9ucyIsIkVNQUlMVklFV0FMTCIsIkVOVEVSUFJJU0VBRE1JTiIsIkxvY2F0aW9uQWRtaW5pc3RyYXRvciIsIlNlYXJjaEFuZEVtdWxhdGVVc2VycyIsIlN1cGVyQ3JlYXRpdmVBcHByb3ZlciIsIlN1cGVyUmVxdWVzdEFwcHJvdmVyIiwiVmlld19BbGxfQWRkcmVzc0Jvb2siLCJWaWV3X0FsbF9BZGRyZXNzQm9va19Mb2NhdGlvbiIsIlZpZXdBbGwiLCJWaWV3QWxsRG9jdW1lbnRzIiwiVmlld0FsbERvd25sb2FkSGlzdG9yeSIsIlZpZXdBbGxFbWFpbHMiLCJWaWV3QWxsV2ViUGFnZXMiLCJWaWV3Q3JlYXRpdmVBcHByb3ZhbHMiLCJWaWV3Q3JlYXRpdmVzIiwiVmlld0RlbGl2ZXJ5T3B0aW9ucyIsIlZpZXdEZWxpdmVyeVJlcXVlc3RzIiwiVmlld0Rvd25sb2FkSGlzdG9yeSIsIlZpZXdKUEciLCJWaWV3TG93UmVzUERGIiwiVmlld1JlcXVlc3RBcHByb3ZhbHMiLCJWaWV3VXNlcnMiLCJXZWJQYWdlU2VhcmNoTG9jYXRpb25zIiwiV0VCUEFHRVZJRVdBTEwiLCJjbGFpbS1yZXZpZXciLCJwcmVhcHByb3ZhbC12aWV3Iiwic3RhcnQtd29ya2Zsb3ciLCJicmFuZGluZy1kZWxldGUiLCJjbGFpbS12aWV3IiwiYWNjcnVhbC1jcmVhdGUiLCJwcmVhcHByb3ZhbC1jcmVhdGUiLCJkZXBsb3ktd29ya2Zsb3ciLCJkaXNidXJzZW1lbnQtdmlldyIsInRyYW5zZmVyLWNyZWF0ZSIsImNsYWltLWNyZWF0ZSIsImFkanVzdG1lbnQtY3JlYXRlIiwicHJvZ3JhbS1jcmVhdGUiLCJicmFuZGluZy1yZXZpZXciLCJwcmVhcHByb3ZhbC1kZWxldGUiLCJjbGFpbS1kZWxldGUiLCJwcm9ncmFtLXVwZGF0ZSIsInByZWFwcHJvdmFsLXJldmlldyIsImFjY291bnQtY3JlYXRlIiwiZGlzYnVyc2VtZW50LWNyZWF0ZSIsInByb2dyYW0tZGVsZXRlIiwiYnJhbmRpbmctY3JlYXRlIiwiYnJhbmRpbmctdmlldyIsImRpc2J1cnNlbWVudC1yZXZpZXciLCJwcm9ncmFtLXZpZXciLCJhY2NvdW50LXZpZXciXSwiYW1yIjpbInBhc3N3b3JkIl19.Db-vJCZlYOvrzrNeuqJviWhWQdjEJ4rzlS4zXWGjI1Xzt2IYQV6C8uiqOYXRIHDjrbJcspBr-xfzxUFU4-oxPPuQ2D9Bz1SQJGrrkkIzuZwHTaFob1-_vEAW-4A0UYhaYU4BjqfZ8VUPwJewaJlj8JRlptt-kgfsE6ARuLmi7l8_ZQ9S-uaeaULYO4au_fEbhv8DOg-fyuhTazkgtHGgj4j_RBCYa5Ym_UOUnFnbgT0d6-bTKKP0HIFWSoBA9ak3SNuf849eawfa_9ZrN8TxiWaLt-T8rSKgS2AeakJcpOLEC7e20zinO8fZxXf2yWN4gpGrf6NX5WKqQ6lf5C6Y5w</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/CFM/CFM.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1002898"> 200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Workflow/DeployTenantIdWorkFlowProcess-GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1513589523000</longProp>
        <longProp name="ThreadGroup.end_time">1513589523000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11074/api/CamundaWorkflowSystem/v1/workflow/DeployTenantIdWorkFlowProcess?tenantId=tenant1</stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree/>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">select 1</stringProp>
          <stringProp name="connectionAge">5000</stringProp>
          <stringProp name="dataSource">Businessprocess</stringProp>
          <stringProp name="dbUrl">jdbc:sqlserver://;serverName=bmi-azdb002.database.windows.net;databaseName=ChannelBuilderQADev;</stringProp>
          <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">mSUePJraar$</stringProp>
          <stringProp name="poolMax">10</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">ChannelBuilder</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
          <stringProp name="dataSource">Businessprocess</stringProp>
          <stringProp name="query">

select BusinessProcessWorkFlowId from [dbo].[BusinessProcessWorkFlow] where tenantid=&apos;acehardware&apos; and WorkFlowFileName=&apos;PaymentWorkflow.bpmn&apos;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable">status</stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
          <stringProp name="JSONPostProcessor.referenceNames">Status</stringProp>
          <stringProp name="JSONPostProcessor.jsonPathExprs">$..*</stringProp>
          <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
          <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
        </JSONPostProcessor>
        <hashTree/>
        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">byte [] samplerdata = ctx.getPreviousResult().getResponseData();
log.info(&quot;samplerdata=======&gt;&quot;+samplerdata);
String BusinessProcessWorkFlowId = new String(samplerdata);
log.info(&quot;BusinessProcessWorkFlowId=======&gt;&quot;+BusinessProcessWorkFlowId);
String newBusinessProcessWorkFlowId= BusinessProcessWorkFlowId.replaceAll(&quot;BusinessProcessWorkFlowId&quot;,&quot; &quot;).trim();
log.info(&quot;newBusinessProcessWorkFlowId========&gt;&quot;+newBusinessProcessWorkFlowId);
bsh.shared.newBusinessProcessWorkFlowId=newBusinessProcessWorkFlowId;
log.info(&quot;newBusinessProcessWorkFlowIdbeanshell=======&gt;&quot;+bsh.shared.newBusinessProcessWorkFlowId);

//log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${Status_ALL}&quot;);
//log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${Status_1}&quot;);
//String[] sstatus = vars.get(&quot;Bprocessinstanceid_ALL&quot;).split(&quot;,&quot;); 
//int len = sstatus.length;
//log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
//ArrayList astatus = new ArrayList();
//for(int i=0;i&lt;len;i++)
//{
//	astatus.add(astatus[i]);
//}
//bsh.shared.astatus=astatus;
//log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + bsh.shared.astatus);</stringProp>
        </BeanShellPostProcessor>
        <hashTree/>
        <JDBCPostProcessor guiclass="TestBeanGUI" testclass="JDBCPostProcessor" testname="JDBC PostProcessor" enabled="false">
          <stringProp name="dataSource"></stringProp>
          <stringProp name="query">
select BusinessProcessWorkFlowId from [dbo].[BusinessProcessWorkFlow] where tenantid=&apos;acehardware&apos; and WorkFlowFileName=&apos;PaymentWorkflow.bpmn&apos;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable">status</stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCPostProcessor>
        <hashTree/>
        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
          <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
          <stringProp name="JSONPostProcessor.jsonPathExprs">$..*</stringProp>
          <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
          <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          <stringProp name="Sample.scope">variable</stringProp>
          <stringProp name="Scope.variable">status</stringProp>
        </JSONPostProcessor>
        <hashTree/>
        <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
          <stringProp name="RegexExtractor.useHeaders">false</stringProp>
          <stringProp name="RegexExtractor.refname">status</stringProp>
          <stringProp name="RegexExtractor.regex">[a-z]</stringProp>
          <stringProp name="RegexExtractor.template">$1$$2$</stringProp>
          <stringProp name="RegexExtractor.default"></stringProp>
          <stringProp name="RegexExtractor.match_number">-1</stringProp>
          <stringProp name="Sample.scope">variable</stringProp>
          <stringProp name="Scope.variable">status</stringProp>
        </RegexExtractor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DeployTenantBuildworkflowprocess_POST(+)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb02u</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-camunda-workflow/v2/workflow/DeployTenantIdWorkFlowProcess?tenantId=acehardware&amp;workflowIdList=${__BeanShell(bsh.shared.newBusinessProcessWorkFlowId)}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.token)}</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/CFM/CFM.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">deploymentId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..*</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">byte [] samplerdata = ctx.getPreviousResult().getResponseData();
String deploymentId = new String(samplerdata);
log.info(&quot;=======&gt;&quot;+deploymentId);
String newdeploymentId= deploymentId.replaceAll(&quot;^\&quot;|\&quot;$&quot;, &quot;&quot;);
//int i = Integer.parseInt(claimid);
log.info(&quot;newclaimid========&gt;&quot;+newdeploymentId);
bsh.shared.newdeploymentId=newdeploymentId;
log.info(&quot;=======&gt;&quot;+bsh.shared.newdeploymentId);

//log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + bsh.shared.marketingFundAccountId);
//String ID = vars.get(&quot;MarketingFundAccountId&quot;);
//log.info(&quot;MarketingFundAccountId:&quot;,ID);
//log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${MarketingFundAccountId_1}&quot;);
//if (marketingFundAccountId.contains(&quot;MarketingFundAccountId&quot;)) 
//{
//	String ID = vars.get(&quot;MarketingFundAccountId&quot;);
//	log.info(&quot;MarketingFundAccountId:&quot;, ID);
//   log.info(&quot;----&gt;&gt;&gt;&gt;&gt;== &quot;+bsh.shared.MarketingFundAccountId); 
//} 

//log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${marketingFundAccountId_ALL}&quot;);
//log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${marketingFundAccountId_1}&quot;);
//String[] MarketId = vars.get(&quot;marketingFundAccountId_ALL&quot;).split(&quot;,&quot;); 
//int len = MarketId.length;
//log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
//ArrayList MarketfundId = new ArrayList();
//for(int i=0;i&lt;len;i++)
//{
//	MarketfundId.add(MarketId[i]);
//}
//bsh.shared.MarketfundId=MarketfundId;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Workflow/DeployTenantIdWorkFlowProcess-POST(-)" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1513589523000</longProp>
        <longProp name="ThreadGroup.end_time">1513589523000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11074/api/CamundaWorkflowSystem/v1/workflow/DeployTenantIdWorkFlowProcess?tenantId=tenant1</stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="POST_DeployTenantBuIdWorkFlowProcess" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DeployTenantBuildworkflowprocess_POST(-)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/CamundaWorkflowSystem/v1/workflow/DeployTenantIdWorkFlowProcess?tenantId=randomclient</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
                </elementProp>
                <elementProp name="token" elementType="Header">
                  <stringProp name="Header.name">token</stringProp>
                  <stringProp name="Header.value">eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCIsImtpZCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCJ9.eyJpc3MiOiJodHRwOi8vYWNlaGFyZHdhcmUudjVxYS5icmFuZG11c2NsZS5sb2NhbC92NW9wZW5pZCIsImF1ZCI6IkNGTSIsImV4cCI6MTUyMTIwMzE0MiwibmJmIjoxNTIxMjAyODQyLCJub25jZSI6IjgxZjYwNzRiYmJkYjQ4OTE5MTAwZTgzZDliYjdlZGYyIiwiaWF0IjoxNTIxMjAyODQyLCJhdF9oYXNoIjoiWnRlUjh5dG5vN3VSV1JfNHE0MUJ3QSIsInNpZCI6ImY4ODVlM2ZhMWFlYTgzYWEwYjA2NGVlYmYzODU5MWU3Iiwic3ViIjoiMzUxMjE3NiIsImF1dGhfdGltZSI6MTUyMTE4MjA4NSwiaWRwIjoiaWRzcnYiLCJibWkuYnVzaW5lc3N1bml0aWQiOiI1NjgiLCJibWkuYnVzaW5lc3N1bml0c3lzdGVtbmFtZSI6ImFjZWhhcmR3YXJlIiwiYm1pLnBlcnNvbmlkIjoiNDExNDUyMSIsImJtaS51c2VybmFtZSI6IkxvcmRhIiwiYm1pLmZpcnN0bmFtZSI6IkxvcmVuYSIsImJtaS5sYXN0bmFtZSI6Ik9yZGF6IiwiYm1pLmFkZHJlc3MiOiIxMjMgbWFpbiBzdC4iLCJibWkuYWRkcmVzczIiOiIiLCJibWkuY2l0eSI6ImNsZXZlbGFuZCIsImJtaS50ZWxlcGhvbmUiOiIyMzQxMjM5MDg3IiwiYm1pLnppcGNvZGUiOiI0NDExNCIsImJtaS5zdGF0ZSI6Ik9IIiwiYm1pLmNvdW50cnkiOiJVU0EiLCJibWkudGl0bGUiOiIiLCJibWkuZW1haWwiOiJQcml5YW5rYS5ZYWRhdkBicmFuZG11c2NsZS5jb20iLCJibWkuaXNpbnRlcm5hbCI6IkZhbHNlIiwiYm1pLnJpZ2h0IjpbIkFkdmFuY2VkU2VhcmNoVXNlcnMiLCJBbGxvd09yZGVyQW5kUGF5IiwiQWxsb3dPcmRlcldpdGhvdXRQYXltZW50IiwiQWxsb3dSZXN1bHRUb0V4Y2VsIiwiQ2FuQmVFbXVsYXRlZCIsIkNhbkVtdWxhdGUiLCJDaGFuZ2VMb2NhdGlvblN0YXR1cyIsIkNvcHlVc2VycyIsIkNyZWF0ZV9BbGxfQWRkcmVzc0Jvb2siLCJDcmVhdGVBbGwiLCJEZWxldGVfQWxsX0FkZHJlc3NCb29rX0xvY2F0aW9uIiwiRGVsZXRlQWRNYXRlcmlhbCIsIkRlbGV0ZUFsbCIsIkRlbGV0ZURlbGl2ZXJ5UmVxdWVzdHMiLCJEZWxldGVVc2VycyIsIkRlbGl2ZXJ5QXBwcm92YWxOb3RSZXF1aXJlZCIsIkRvd25sb2FkQXNzZXRzIiwiRWRpdF9BbGxfQWRkcmVzc0Jvb2tfTG9jYXRpb24iLCJFZGl0QWRNYXRlcmlhbCIsIkVkaXRBZE1hdGVyaWFsQnlBcHByb3ZlciIsIkVkaXRBbGwiLCJFRElURU1BSUxCWUFQUFJPVkVSIiwiRURJVFVTRVJTIiwiRURJVFdFQlBBR0VCWUFQUFJPVkVSIiwiRW1haWxfQXBwcm92ZV9FbWFpbHMiLCJFbWFpbFNlYXJjaExvY2F0aW9ucyIsIkVNQUlMVklFV0FMTCIsIkVOVEVSUFJJU0VBRE1JTiIsIkxvY2F0aW9uQWRtaW5pc3RyYXRvciIsIlNlYXJjaEFuZEVtdWxhdGVVc2VycyIsIlN1cGVyQ3JlYXRpdmVBcHByb3ZlciIsIlN1cGVyUmVxdWVzdEFwcHJvdmVyIiwiVmlld19BbGxfQWRkcmVzc0Jvb2siLCJWaWV3X0FsbF9BZGRyZXNzQm9va19Mb2NhdGlvbiIsIlZpZXdBbGwiLCJWaWV3QWxsRG9jdW1lbnRzIiwiVmlld0FsbERvd25sb2FkSGlzdG9yeSIsIlZpZXdBbGxFbWFpbHMiLCJWaWV3QWxsV2ViUGFnZXMiLCJWaWV3Q3JlYXRpdmVBcHByb3ZhbHMiLCJWaWV3Q3JlYXRpdmVzIiwiVmlld0RlbGl2ZXJ5T3B0aW9ucyIsIlZpZXdEZWxpdmVyeVJlcXVlc3RzIiwiVmlld0Rvd25sb2FkSGlzdG9yeSIsIlZpZXdKUEciLCJWaWV3TG93UmVzUERGIiwiVmlld1JlcXVlc3RBcHByb3ZhbHMiLCJWaWV3VXNlcnMiLCJXZWJQYWdlU2VhcmNoTG9jYXRpb25zIiwiV0VCUEFHRVZJRVdBTEwiLCJjbGFpbS1yZXZpZXciLCJwcmVhcHByb3ZhbC12aWV3Iiwic3RhcnQtd29ya2Zsb3ciLCJicmFuZGluZy1kZWxldGUiLCJjbGFpbS12aWV3IiwiYWNjcnVhbC1jcmVhdGUiLCJwcmVhcHByb3ZhbC1jcmVhdGUiLCJkZXBsb3ktd29ya2Zsb3ciLCJkaXNidXJzZW1lbnQtdmlldyIsInRyYW5zZmVyLWNyZWF0ZSIsImNsYWltLWNyZWF0ZSIsImFkanVzdG1lbnQtY3JlYXRlIiwicHJvZ3JhbS1jcmVhdGUiLCJicmFuZGluZy1yZXZpZXciLCJwcmVhcHByb3ZhbC1kZWxldGUiLCJjbGFpbS1kZWxldGUiLCJwcm9ncmFtLXVwZGF0ZSIsInByZWFwcHJvdmFsLXJldmlldyIsImFjY291bnQtY3JlYXRlIiwiZGlzYnVyc2VtZW50LWNyZWF0ZSIsInByb2dyYW0tZGVsZXRlIiwiYnJhbmRpbmctY3JlYXRlIiwiYnJhbmRpbmctdmlldyIsImRpc2J1cnNlbWVudC1yZXZpZXciLCJwcm9ncmFtLXZpZXciLCJhY2NvdW50LXZpZXciXSwiYW1yIjpbInBhc3N3b3JkIl19.Db-vJCZlYOvrzrNeuqJviWhWQdjEJ4rzlS4zXWGjI1Xzt2IYQV6C8uiqOYXRIHDjrbJcspBr-xfzxUFU4-oxPPuQ2D9Bz1SQJGrrkkIzuZwHTaFob1-_vEAW-4A0UYhaYU4BjqfZ8VUPwJewaJlj8JRlptt-kgfsE6ARuLmi7l8_ZQ9S-uaeaULYO4au_fEbhv8DOg-fyuhTazkgtHGgj4j_RBCYa5Ym_UOUnFnbgT0d6-bTKKP0HIFWSoBA9ak3SNuf849eawfa_9ZrN8TxiWaLt-T8rSKgS2AeakJcpOLEC7e20zinO8fZxXf2yWN4gpGrf6NX5WKqQ6lf5C6Y5w</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/CFM/CFM.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">deploymentId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..*</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">byte [] samplerdata = ctx.getPreviousResult().getResponseData();
String deploymentId = new String(samplerdata);
log.info(&quot;=======&gt;&quot;+deploymentId);
String newdeploymentId= deploymentId.replaceAll(&quot;^\&quot;|\&quot;$&quot;, &quot;&quot;);
//int i = Integer.parseInt(claimid);
log.info(&quot;newclaimid========&gt;&quot;+newdeploymentId);
bsh.shared.newdeploymentId=newdeploymentId;
log.info(&quot;=======&gt;&quot;+bsh.shared.newdeploymentId);

//log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + bsh.shared.marketingFundAccountId);
//String ID = vars.get(&quot;MarketingFundAccountId&quot;);
//log.info(&quot;MarketingFundAccountId:&quot;,ID);
//log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${MarketingFundAccountId_1}&quot;);
//if (marketingFundAccountId.contains(&quot;MarketingFundAccountId&quot;)) 
//{
//	String ID = vars.get(&quot;MarketingFundAccountId&quot;);
//	log.info(&quot;MarketingFundAccountId:&quot;, ID);
//   log.info(&quot;----&gt;&gt;&gt;&gt;&gt;== &quot;+bsh.shared.MarketingFundAccountId); 
//} 

//log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${marketingFundAccountId_ALL}&quot;);
//log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${marketingFundAccountId_1}&quot;);
//String[] MarketId = vars.get(&quot;marketingFundAccountId_ALL&quot;).split(&quot;,&quot;); 
//int len = MarketId.length;
//log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
//ArrayList MarketfundId = new ArrayList();
//for(int i=0;i&lt;len;i++)
//{
//	MarketfundId.add(MarketId[i]);
//}
//bsh.shared.MarketfundId=MarketfundId;</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1002898"> 200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2524">OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="49586">200</stringProp>
          </collectionProp>
          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">2</intProp>
          <stringProp name="Assertion.custom_message"></stringProp>
        </ResponseAssertion>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Workflow/DeleteDeployment-DELETE(+)" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1517219723000</longProp>
        <longProp name="ThreadGroup.end_time">1517219723000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Delete workflow _Deployment" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">d</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">0</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">a</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
            <boolProp name="autocommit">true</boolProp>
            <stringProp name="checkQuery">select 1</stringProp>
            <stringProp name="connectionAge">5000</stringProp>
            <stringProp name="dataSource">Businessprocess</stringProp>
            <stringProp name="dbUrl">jdbc:sqlserver://;serverName=bmi-azdb002.database.windows.net;databaseName=ChannelBuilderQADev;</stringProp>
            <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
            <boolProp name="keepAlive">true</boolProp>
            <stringProp name="password">mSUePJraar$</stringProp>
            <stringProp name="poolMax">10</stringProp>
            <stringProp name="timeout">10000</stringProp>
            <stringProp name="transactionIsolation">DEFAULT</stringProp>
            <stringProp name="trimInterval">60000</stringProp>
            <stringProp name="username">ChannelBuilder</stringProp>
          </JDBCDataSource>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
            <stringProp name="dataSource">Businessprocess</stringProp>
            <stringProp name="query">
Update [dbo].[BusinessProcessDefinition] SET IsDeployed=0 where ProgramId=&apos;${__BeanShell(bsh.shared.Programid.get(${a}),)}&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultVariable">status</stringProp>
            <stringProp name="variableNames">deploymentid</stringProp>
          </JDBCSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">true</boolProp>
          </DebugSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="workflow/DeleteDeployment_DELETE(+)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/CamundaWorkflowSystem/v1/Workflow/DeleteDeployment?deploymentId=${status_1}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
                </elementProp>
                <elementProp name="token" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.token)</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/CFM/CFM.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1002898"> 200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2524">OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Workflow/DeleteDeployment-DELETE(-)" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1517219723000</longProp>
        <longProp name="ThreadGroup.end_time">1517219723000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Delete workflow _Deployment" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">d</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">true</boolProp>
          </DebugSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="workflow/DeleteDeployment_DELETE(+)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/CamundaWorkflowSystem/v1/Workflow/DeleteDeployment?deploymentId=123fg8</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
                </elementProp>
                <elementProp name="token" elementType="Header">
                  <stringProp name="Header.name">token</stringProp>
                  <stringProp name="Header.value">eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCIsImtpZCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCJ9.eyJpc3MiOiJodHRwOi8vYWNlaGFyZHdhcmUudjVxYS5icmFuZG11c2NsZS5sb2NhbC92NW9wZW5pZCIsImF1ZCI6IkNGTSIsImV4cCI6MTUyMTIwMzE0MiwibmJmIjoxNTIxMjAyODQyLCJub25jZSI6IjgxZjYwNzRiYmJkYjQ4OTE5MTAwZTgzZDliYjdlZGYyIiwiaWF0IjoxNTIxMjAyODQyLCJhdF9oYXNoIjoiWnRlUjh5dG5vN3VSV1JfNHE0MUJ3QSIsInNpZCI6ImY4ODVlM2ZhMWFlYTgzYWEwYjA2NGVlYmYzODU5MWU3Iiwic3ViIjoiMzUxMjE3NiIsImF1dGhfdGltZSI6MTUyMTE4MjA4NSwiaWRwIjoiaWRzcnYiLCJibWkuYnVzaW5lc3N1bml0aWQiOiI1NjgiLCJibWkuYnVzaW5lc3N1bml0c3lzdGVtbmFtZSI6ImFjZWhhcmR3YXJlIiwiYm1pLnBlcnNvbmlkIjoiNDExNDUyMSIsImJtaS51c2VybmFtZSI6IkxvcmRhIiwiYm1pLmZpcnN0bmFtZSI6IkxvcmVuYSIsImJtaS5sYXN0bmFtZSI6Ik9yZGF6IiwiYm1pLmFkZHJlc3MiOiIxMjMgbWFpbiBzdC4iLCJibWkuYWRkcmVzczIiOiIiLCJibWkuY2l0eSI6ImNsZXZlbGFuZCIsImJtaS50ZWxlcGhvbmUiOiIyMzQxMjM5MDg3IiwiYm1pLnppcGNvZGUiOiI0NDExNCIsImJtaS5zdGF0ZSI6Ik9IIiwiYm1pLmNvdW50cnkiOiJVU0EiLCJibWkudGl0bGUiOiIiLCJibWkuZW1haWwiOiJQcml5YW5rYS5ZYWRhdkBicmFuZG11c2NsZS5jb20iLCJibWkuaXNpbnRlcm5hbCI6IkZhbHNlIiwiYm1pLnJpZ2h0IjpbIkFkdmFuY2VkU2VhcmNoVXNlcnMiLCJBbGxvd09yZGVyQW5kUGF5IiwiQWxsb3dPcmRlcldpdGhvdXRQYXltZW50IiwiQWxsb3dSZXN1bHRUb0V4Y2VsIiwiQ2FuQmVFbXVsYXRlZCIsIkNhbkVtdWxhdGUiLCJDaGFuZ2VMb2NhdGlvblN0YXR1cyIsIkNvcHlVc2VycyIsIkNyZWF0ZV9BbGxfQWRkcmVzc0Jvb2siLCJDcmVhdGVBbGwiLCJEZWxldGVfQWxsX0FkZHJlc3NCb29rX0xvY2F0aW9uIiwiRGVsZXRlQWRNYXRlcmlhbCIsIkRlbGV0ZUFsbCIsIkRlbGV0ZURlbGl2ZXJ5UmVxdWVzdHMiLCJEZWxldGVVc2VycyIsIkRlbGl2ZXJ5QXBwcm92YWxOb3RSZXF1aXJlZCIsIkRvd25sb2FkQXNzZXRzIiwiRWRpdF9BbGxfQWRkcmVzc0Jvb2tfTG9jYXRpb24iLCJFZGl0QWRNYXRlcmlhbCIsIkVkaXRBZE1hdGVyaWFsQnlBcHByb3ZlciIsIkVkaXRBbGwiLCJFRElURU1BSUxCWUFQUFJPVkVSIiwiRURJVFVTRVJTIiwiRURJVFdFQlBBR0VCWUFQUFJPVkVSIiwiRW1haWxfQXBwcm92ZV9FbWFpbHMiLCJFbWFpbFNlYXJjaExvY2F0aW9ucyIsIkVNQUlMVklFV0FMTCIsIkVOVEVSUFJJU0VBRE1JTiIsIkxvY2F0aW9uQWRtaW5pc3RyYXRvciIsIlNlYXJjaEFuZEVtdWxhdGVVc2VycyIsIlN1cGVyQ3JlYXRpdmVBcHByb3ZlciIsIlN1cGVyUmVxdWVzdEFwcHJvdmVyIiwiVmlld19BbGxfQWRkcmVzc0Jvb2siLCJWaWV3X0FsbF9BZGRyZXNzQm9va19Mb2NhdGlvbiIsIlZpZXdBbGwiLCJWaWV3QWxsRG9jdW1lbnRzIiwiVmlld0FsbERvd25sb2FkSGlzdG9yeSIsIlZpZXdBbGxFbWFpbHMiLCJWaWV3QWxsV2ViUGFnZXMiLCJWaWV3Q3JlYXRpdmVBcHByb3ZhbHMiLCJWaWV3Q3JlYXRpdmVzIiwiVmlld0RlbGl2ZXJ5T3B0aW9ucyIsIlZpZXdEZWxpdmVyeVJlcXVlc3RzIiwiVmlld0Rvd25sb2FkSGlzdG9yeSIsIlZpZXdKUEciLCJWaWV3TG93UmVzUERGIiwiVmlld1JlcXVlc3RBcHByb3ZhbHMiLCJWaWV3VXNlcnMiLCJXZWJQYWdlU2VhcmNoTG9jYXRpb25zIiwiV0VCUEFHRVZJRVdBTEwiLCJjbGFpbS1yZXZpZXciLCJwcmVhcHByb3ZhbC12aWV3Iiwic3RhcnQtd29ya2Zsb3ciLCJicmFuZGluZy1kZWxldGUiLCJjbGFpbS12aWV3IiwiYWNjcnVhbC1jcmVhdGUiLCJwcmVhcHByb3ZhbC1jcmVhdGUiLCJkZXBsb3ktd29ya2Zsb3ciLCJkaXNidXJzZW1lbnQtdmlldyIsInRyYW5zZmVyLWNyZWF0ZSIsImNsYWltLWNyZWF0ZSIsImFkanVzdG1lbnQtY3JlYXRlIiwicHJvZ3JhbS1jcmVhdGUiLCJicmFuZGluZy1yZXZpZXciLCJwcmVhcHByb3ZhbC1kZWxldGUiLCJjbGFpbS1kZWxldGUiLCJwcm9ncmFtLXVwZGF0ZSIsInByZWFwcHJvdmFsLXJldmlldyIsImFjY291bnQtY3JlYXRlIiwiZGlzYnVyc2VtZW50LWNyZWF0ZSIsInByb2dyYW0tZGVsZXRlIiwiYnJhbmRpbmctY3JlYXRlIiwiYnJhbmRpbmctdmlldyIsImRpc2J1cnNlbWVudC1yZXZpZXciLCJwcm9ncmFtLXZpZXciLCJhY2NvdW50LXZpZXciXSwiYW1yIjpbInBhc3N3b3JkIl19.Db-vJCZlYOvrzrNeuqJviWhWQdjEJ4rzlS4zXWGjI1Xzt2IYQV6C8uiqOYXRIHDjrbJcspBr-xfzxUFU4-oxPPuQ2D9Bz1SQJGrrkkIzuZwHTaFob1-_vEAW-4A0UYhaYU4BjqfZ8VUPwJewaJlj8JRlptt-kgfsE6ARuLmi7l8_ZQ9S-uaeaULYO4au_fEbhv8DOg-fyuhTazkgtHGgj4j_RBCYa5Ym_UOUnFnbgT0d6-bTKKP0HIFWSoBA9ak3SNuf849eawfa_9ZrN8TxiWaLt-T8rSKgS2AeakJcpOLEC7e20zinO8fZxXf2yWN4gpGrf6NX5WKqQ6lf5C6Y5w</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/CFM/CFM.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="49586">200</stringProp>
          </collectionProp>
          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">2</intProp>
          <stringProp name="Assertion.custom_message"></stringProp>
        </ResponseAssertion>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname=" /Workflow/DeployWorkFlowProcess-POST(+)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1512995187000</longProp>
        <longProp name="ThreadGroup.end_time">1512995187000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11074/api/CamundaWorkflowSystem/v1/workflow/DeployWorkFlowProcess?programId=&amp;tenantId=</stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="POST_workflow_Deployworkflowprocess" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">0</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">a</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Workflow/DeployWorkFlowProcess-POST(+)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/cfm-camunda-workflow/v2/Workflow/DeployWorkFlowProcess?programId=${__BeanShell(bsh.shared.Programid.get(${a}),)}&amp;tenantId=acehardware</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
                </elementProp>
                <elementProp name="token" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.token)}</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/cfm/cfm.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2524">OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname=" /Workflow/DeployWorkFlowProcess-POST(-)" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1512995187000</longProp>
        <longProp name="ThreadGroup.end_time">1512995187000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11074/api/CamundaWorkflowSystem/v1/workflow/DeployWorkFlowProcess?programId=&amp;tenantId=</stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="POST_workflow_Deployworkflowprocess" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">0</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">a</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">true</boolProp>
          </CounterConfig>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Workflow/DeployWorkFlowProcess-POST(-)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/CamundaWorkflowSystem/v1/workflow/DeployWorkFlowProcess?programId=5ab9d91d2a97e125a4c706f2&amp;tenantId=acehardware</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://azweb02u:11070/app/ChannelBuilder/v1/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://azweb02u:11070</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="token" elementType="Header">
                  <stringProp name="Header.name">token</stringProp>
                  <stringProp name="Header.value">eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCIsImtpZCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCJ9..UuNVe8x6KrQ4gorO5mSRl-xZdwWlOkYC0z2WOQaYvbeBw9iJTieKW39RDFsvihCWoTZx2LhvNaDMI_Lk8ZyhgQ6Z9fJ7CFqAn8oSyfaFCg8Jo2LqgCFPhf_PMOL1ERl_jqCxcczcZZF9w3Of5Lm0Wjn6tSP5zN7IysXsOMUqGAM8yvoY6UjIoQj5_j-RYM6i4quOfsiK29txQYatPNEFoEkYBDDPJgvp-EnSwrqueVW_rzlwC1n2bof_1ojixp8MEY9vSwLH_uAMk-GDDUEUcTTFLsXttLodmZzwVEBMLDpM7qaRFVP-nQJFkCmY-OPdM_O-wc9AD0vEXW15HI7aOw</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1002898"> 200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2524">OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="49586">200</stringProp>
          </collectionProp>
          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">2</intProp>
          <stringProp name="Assertion.custom_message"></stringProp>
        </ResponseAssertion>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="BulkAccuralservice_valid_withPositive &amp; Negative test data" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522911869000</longProp>
        <longProp name="ThreadGroup.end_time">1522911869000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/validateaccruals?tenantId=acehardware" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="D:\CFM-RunTimeFiles\1000Records.xlsx" elementType="HTTPFileArg">
                <stringProp name="File.path">D:\CFM-RunTimeFiles\1000Records.xlsx</stringProp>
                <stringProp name="File.paramname">file</stringProp>
                <stringProp name="File.mimetype">application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">cfmaccrual01.kube01.qa01.brandmuscle.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/validateaccruals?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">https://cfmaccrual01.kube01.qa01.brandmuscle.net/v1/validateaccruals?tenantId=acehardware</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">bearer ${__BeanShell(bsh.shared.token)}</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/CFM/CFM.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">test_result.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="BulkAccural_Save" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1523008435000</longProp>
        <longProp name="ThreadGroup.end_time">1523008435000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/validateaccruals?tenantId=acehardware" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="D:\CFM-RunTimeFiles\1000Records.xlsx" elementType="HTTPFileArg">
                <stringProp name="File.path">D:\CFM-RunTimeFiles\1000Records.xlsx</stringProp>
                <stringProp name="File.paramname">file</stringProp>
                <stringProp name="File.mimetype">application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">cfmaccrual01.kube01.qa01.brandmuscle.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/validateaccruals?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">https://cfmaccrual01.kube01.qa01.brandmuscle.net/v1/validateaccruals?tenantId=acehardware</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">bearer ${__BeanShell(bsh.shared.token)}</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/CFM/CFM.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">positionno</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..position</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor_PositionNO" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${positionno_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${positionno_1}&quot;);
String[] sposition = vars.get(&quot;positionno_ALL&quot;).split(&quot;,&quot;); 
int spositionlength = sposition.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + spositionlength);
ArrayList aposition = new ArrayList();
for(int i=0;i&lt;spositionlength;i++)
{
	aposition.add(sposition[i]);
}
bsh.shared.aposition=aposition;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">Bulkprogramname</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..programName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor_Prgname" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${Bulkprogramname_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${Bulkprogramname_1}&quot;);
String[] sbulkprg = vars.get(&quot;Bulkprogramname_ALL&quot;).split(&quot;,&quot;); 
int sbulkprglength = sbulkprg.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + sbulkprglength);
ArrayList abulkprgname = new ArrayList();
for(int i=0;i&lt;sbulkprglength;i++)
{
	abulkprgname.add(sbulkprg[i]);
}
bsh.shared.abulkprgname=abulkprgname;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">accrualdate</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..accrualDate</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor_Accrualdate" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${accrualdate_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${accrualdate_1}&quot;);
String[] saccrualdt = vars.get(&quot;accrualdate_ALL&quot;).split(&quot;,&quot;); 
int saccrualdtlength = saccrualdt.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + saccrualdtlength);
ArrayList aaccrualdt = new ArrayList();
for(int i=0;i&lt;saccrualdtlength;i++)
{
	aaccrualdt.add(saccrualdt[i]);
}
bsh.shared.aaccrualdt=aaccrualdt;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">accrualamountbulk</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..accrualAmount</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor_Accrualamount" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${accrualamountbulk_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${accrualamountbulk_1}&quot;);
String[] saccrualamountbulk = vars.get(&quot;accrualamountbulk_ALL&quot;).split(&quot;,&quot;); 
int saccrualamountbulklength = saccrualamountbulk.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + saccrualamountbulklength);
ArrayList aaccrualamountbulk = new ArrayList();
for(int i=0;i&lt;saccrualamountbulklength;i++)
{
	aaccrualamountbulk.add(saccrualamountbulk[i]);
}
bsh.shared.aaccrualamountbulk=aaccrualamountbulk;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">marketfundidbulk</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..marketingFundAccountId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor_marketfundaccountid" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${marketfundidbulk_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${marketfundidbulk_1}&quot;);
String[] smarketfundidbulk = vars.get(&quot;marketfundidbulk_ALL&quot;).split(&quot;,&quot;); 
int smarketfundidbulklength = smarketfundidbulk.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + smarketfundidbulklength);
ArrayList asmarketfundidbulk = new ArrayList();
for(int i=0;i&lt;smarketfundidbulklength;i++)
{
	asmarketfundidbulk.add(smarketfundidbulk[i]);
}
bsh.shared.asmarketfundidbulk=asmarketfundidbulk;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">vendorCodebulk</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..vendorCode</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor_vendorcode" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${vendorCodebulk_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${vendorCodebulk_1}&quot;);
String[] svendorCodebulk = vars.get(&quot;vendorCodebulk_ALL&quot;).split(&quot;,&quot;); 
int svendorCodebulklength = svendorCodebulk.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + smarketfundidbulklength);
ArrayList avendorCodebulk = new ArrayList();
for(int i=0;i&lt;svendorCodebulklength;i++)
{
	avendorCodebulk.add(svendorCodebulk[i]);
}
bsh.shared.avendorCodebulk=avendorCodebulk;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">programidbulk</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..ProgramId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor_programid" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${programidbulk_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${programidbulk_1}&quot;);
String[] sprogramidbulk = vars.get(&quot;programidbulk_ALL&quot;).split(&quot;,&quot;); 
int sprogramidbulklength = sprogramidbulk.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + sprogramidbulklength);
ArrayList aprogramidbulk = new ArrayList();
for(int i=0;i&lt;sprogramidbulklength;i++)
{
	aprogramidbulk.add(sprogramidbulk[i]);
}
bsh.shared.aprogramidbulk=aprogramidbulk;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">storenobulk</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..StoreNo</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor_storeno" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${storenobulk_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${storenobulk_1}&quot;);
String[] sstorenobulk = vars.get(&quot;storenobulk_ALL&quot;).split(&quot;,&quot;); 
int sstorenobulklength = sstorenobulk.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + sstorenobulklength);
ArrayList astorenobulk = new ArrayList();
for(int i=0;i&lt;sstorenobulklength;i++)
{
	astorenobulk.add(sstorenobulk[i]);
}
bsh.shared.astorenobulk=astorenobulk;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">76</stringProp>
        </LoopController>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">0</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">a</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/saveaccruals?tenantId=acehardware" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"> [&#xd;
        {&#xd;
            &quot;position&quot;: &quot;${__BeanShell(bsh.shared.aposition.get(${a}),)}&quot;,&#xd;
            &quot;programName&quot;: &quot;${__BeanShell(bsh.shared.abulkprgname.get(${a}),)}&quot;,&#xd;
            &quot;accrualDate&quot;: &quot;${__BeanShell(bsh.shared.aaccrualdt.get(${a}),)}&quot;,&#xd;
            &quot;accrualAmount&quot;: &quot;${__BeanShell(bsh.shared.aaccrualamountbulk.get(${a}),)}&quot;,&#xd;
            &quot;errorReason&quot;: null,&#xd;
            &quot;tenantId&quot;: null,&#xd;
            &quot;marketingFundAccountId&quot;: &quot;${__BeanShell(bsh.shared.asmarketfundidbulk.get(${a}),)}&quot;,&#xd;
            &quot;vendorCode&quot;: &quot;${__BeanShell(bsh.shared.avendorCodebulk.get(${a}),)}&quot;,&#xd;
            &quot;ProgramId&quot;: &quot;${__BeanShell(bsh.shared.aprogramidbulk.get(${a}),)}&quot;,&#xd;
            &quot;LMEId&quot;: null,&#xd;
            &quot;StoreNo&quot;: &quot;${__BeanShell(bsh.shared.astorenobulk.get(${a}),)}&quot;&#xd;
        }&#xd;
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">cfmaccrual01.kube01.qa01.brandmuscle.net</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/saveaccruals?tenantId=acehardware</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">https://cfmaccrual01.kube01.qa01.brandmuscle.net/v1/saveaccruals?tenantId=acehardware</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer ${__BeanShell(bsh.shared.token)}</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/CFM/CFM.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2524">OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname=" /Workflow/GetProductRPercentage_POST(+)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1518080262000</longProp>
        <longProp name="ThreadGroup.end_time">1518080262000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Workflow_GetProductRPercentage" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=" /Workflow/GetProductRPercentage_POST(+)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
{&#xd;
      &quot;LineId&quot;: &quot;1&quot;,&#xd;
      &quot;ProductId&quot;: &quot;product1&quot;,&#xd;
      &quot;Quantity&quot;: 1,&#xd;
      &quot;ItemCost&quot;: 10,&#xd;
      &quot;ProductAttributes&quot;: {&#xd;
        &quot;ProgramName&quot;: &quot;PL-Test1-02Feb&quot;,&#xd;
        &quot;BrandName&quot;: &quot;brand1&quot;&#xd;
      }&#xd;
    },&#xd;
     {&#xd;
      &quot;LineId&quot;: &quot;1&quot;,&#xd;
      &quot;ProductId&quot;: &quot;product5&quot;,&#xd;
      &quot;Quantity&quot;: 1,&#xd;
      &quot;ItemCost&quot;: 10,&#xd;
      &quot;ProductAttributes&quot;: {&#xd;
        &quot;ProgramName&quot;: &quot;V5IntegrationTest&quot;,&#xd;
        &quot;BrandName&quot;: &quot;brand5&quot;&#xd;
      }&#xd;
    }&#xd;
&#xd;
    &#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-camunda-workflow/v2/Workflow/GetProductRPercentage?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.token)}</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/CFM/CFM.aspx</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Programs/{id}_DELETE(+)" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11071/api/ChannelBuilder/v1/Programs/{objectId}</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1517820312000</longProp>
        <longProp name="ThreadGroup.end_time">1517820312000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="DELETE_Delete Program" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">0</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">a</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">true</boolProp>
          </CounterConfig>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Programs/{id}-DELETE" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/ChannelBuilder/v1/Programs/5af147322a97e1279c3dee1d</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local</stringProp>
                </elementProp>
                <elementProp name="token" elementType="Header">
                  <stringProp name="Header.name">token</stringProp>
                  <stringProp name="Header.value">eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCIsImtpZCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCJ9.eyJpc3MiOiJodHRwOi8vYWNlaGFyZHdhcmUudjVxYS5icmFuZG11c2NsZS5sb2NhbC92NW9wZW5pZCIsImF1ZCI6IkNGTSIsImV4cCI6MTUyMDg1MTQxNCwibmJmIjoxNTIwODUxMTE0LCJub25jZSI6IjhhMmQyYTNiNWNiYTRiYTU4OTBlOWRkOTJhYzJhZjM5IiwiaWF0IjoxNTIwODUxMTE0LCJhdF9oYXNoIjoiMjZzWjA0UE40c1BLcy13dVdHd2QtdyIsInNpZCI6IjNlZDYwMjZmZTNiODA0MzU3ZDA5ODlhZTc5NzkyNzQ1Iiwic3ViIjoiMzUxMjE3NiIsImF1dGhfdGltZSI6MTUyMDg0ODI2MSwiaWRwIjoiaWRzcnYiLCJibWkuYnVzaW5lc3N1bml0aWQiOiI1NjgiLCJibWkuYnVzaW5lc3N1bml0c3lzdGVtbmFtZSI6ImFjZWhhcmR3YXJlIiwiYm1pLnBlcnNvbmlkIjoiNDExNDUyMSIsImJtaS51c2VybmFtZSI6IkxvcmRhIiwiYm1pLmZpcnN0bmFtZSI6IkxvcmVuYSIsImJtaS5sYXN0bmFtZSI6Ik9yZGF6IiwiYm1pLmFkZHJlc3MiOiIxMjMgbWFpbiBzdC4iLCJibWkuYWRkcmVzczIiOiIiLCJibWkuY2l0eSI6ImNsZXZlbGFuZCIsImJtaS50ZWxlcGhvbmUiOiIyMzQxMjM5MDg3IiwiYm1pLnppcGNvZGUiOiI0NDExNCIsImJtaS5zdGF0ZSI6Ik9IIiwiYm1pLmNvdW50cnkiOiJVU0EiLCJibWkudGl0bGUiOiIiLCJibWkuZW1haWwiOiJzZmxvcmVrQGJyYW5kbXVzY2xlLmNvbSIsImJtaS5pc2ludGVybmFsIjoiRmFsc2UiLCJibWkucmlnaHQiOlsiQWR2YW5jZWRTZWFyY2hVc2VycyIsIkFsbG93T3JkZXJBbmRQYXkiLCJBbGxvd09yZGVyV2l0aG91dFBheW1lbnQiLCJBbGxvd1Jlc3VsdFRvRXhjZWwiLCJDYW5CZUVtdWxhdGVkIiwiQ2FuRW11bGF0ZSIsIkNoYW5nZUxvY2F0aW9uU3RhdHVzIiwiQ29weVVzZXJzIiwiQ3JlYXRlX0FsbF9BZGRyZXNzQm9vayIsIkNyZWF0ZUFsbCIsIkRlbGV0ZV9BbGxfQWRkcmVzc0Jvb2tfTG9jYXRpb24iLCJEZWxldGVBZE1hdGVyaWFsIiwiRGVsZXRlQWxsIiwiRGVsZXRlRGVsaXZlcnlSZXF1ZXN0cyIsIkRlbGV0ZVVzZXJzIiwiRGVsaXZlcnlBcHByb3ZhbE5vdFJlcXVpcmVkIiwiRG93bmxvYWRBc3NldHMiLCJFZGl0X0FsbF9BZGRyZXNzQm9va19Mb2NhdGlvbiIsIkVkaXRBZE1hdGVyaWFsIiwiRWRpdEFkTWF0ZXJpYWxCeUFwcHJvdmVyIiwiRWRpdEFsbCIsIkVESVRFTUFJTEJZQVBQUk9WRVIiLCJFRElUVVNFUlMiLCJFRElUV0VCUEFHRUJZQVBQUk9WRVIiLCJFbWFpbF9BcHByb3ZlX0VtYWlscyIsIkVtYWlsU2VhcmNoTG9jYXRpb25zIiwiRU1BSUxWSUVXQUxMIiwiRU5URVJQUklTRUFETUlOIiwiTG9jYXRpb25BZG1pbmlzdHJhdG9yIiwiU2VhcmNoQW5kRW11bGF0ZVVzZXJzIiwiU3VwZXJDcmVhdGl2ZUFwcHJvdmVyIiwiU3VwZXJSZXF1ZXN0QXBwcm92ZXIiLCJWaWV3X0FsbF9BZGRyZXNzQm9vayIsIlZpZXdfQWxsX0FkZHJlc3NCb29rX0xvY2F0aW9uIiwiVmlld0FsbCIsIlZpZXdBbGxEb2N1bWVudHMiLCJWaWV3QWxsRG93bmxvYWRIaXN0b3J5IiwiVmlld0FsbEVtYWlscyIsIlZpZXdBbGxXZWJQYWdlcyIsIlZpZXdDcmVhdGl2ZUFwcHJvdmFscyIsIlZpZXdDcmVhdGl2ZXMiLCJWaWV3RGVsaXZlcnlPcHRpb25zIiwiVmlld0RlbGl2ZXJ5UmVxdWVzdHMiLCJWaWV3RG93bmxvYWRIaXN0b3J5IiwiVmlld0pQRyIsIlZpZXdMb3dSZXNQREYiLCJWaWV3UmVxdWVzdEFwcHJvdmFscyIsIlZpZXdVc2VycyIsIldlYlBhZ2VTZWFyY2hMb2NhdGlvbnMiLCJXRUJQQUdFVklFV0FMTCIsImNsYWltLXJldmlldyIsInByZWFwcHJvdmFsLXZpZXciLCJzdGFydC13b3JrZmxvdyIsImJyYW5kaW5nLWRlbGV0ZSIsImNsYWltLXZpZXciLCJhY2NydWFsLWNyZWF0ZSIsInByZWFwcHJvdmFsLWNyZWF0ZSIsImRlcGxveS13b3JrZmxvdyIsImRpc2J1cnNlbWVudC12aWV3IiwidHJhbnNmZXItY3JlYXRlIiwiY2xhaW0tY3JlYXRlIiwiYWRqdXN0bWVudC1jcmVhdGUiLCJwcm9ncmFtLWNyZWF0ZSIsImJyYW5kaW5nLXJldmlldyIsInByZWFwcHJvdmFsLWRlbGV0ZSIsImNsYWltLWRlbGV0ZSIsInByb2dyYW0tdXBkYXRlIiwicHJlYXBwcm92YWwtcmV2aWV3IiwiYWNjb3VudC1jcmVhdGUiLCJkaXNidXJzZW1lbnQtY3JlYXRlIiwicHJvZ3JhbS1kZWxldGUiLCJicmFuZGluZy1jcmVhdGUiLCJicmFuZGluZy12aWV3IiwiZGlzYnVyc2VtZW50LXJldmlldyIsInByb2dyYW0tdmlldyIsImFjY291bnQtdmlldyJdLCJhbXIiOlsicGFzc3dvcmQiXX0.sBISV9lcCwUVtQC8EP6DoaF0qvvPDVu1Z1Op87RGa6Ur1wVPjn3aopoiv77W2s6ZI7o4ldfb6PnUJkdj5t9k_T-o4cMANq1G83MBmXttdwxkBVS_0ewODy4Jy--sIA2vXU9pGmY4t7tL4borLflHRXfym3ZNKXxKAORvtgwCfWZ0QnHD7jA0xgwJMyp_Hpo_PQNUoCGxx6Zd0DjpicWvJAFivRt7hHh9wyWbYP-PstEpbxCfpfKSC5j7MkxlGZYuscw5m6TrwBBmp1YWaEr4-Yk7sycy3S8LISVD7HCwEH46VALXGpdnnL-VPi60Fu2CXfMYQcrV9Un_Ius8h0PrJw</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://acehardware.v5qa.brandmuscle.local/cfm/cfm.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1002898"> 200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2524">OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
      <hashTree/>
      <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor-Validating Json Response" enabled="true">
        <boolProp name="resetInterpreter">false</boolProp>
        <stringProp name="parameters"></stringProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="script">
import org.json.JSONException;
import org.json.JSONObject;

try
{
    JSONObject obj = new JSONObject(prev.getResponseData());
    log.info(&quot;************valid json&quot;); 
}
catch(Exception e)
{
    log.info(&quot;==========&gt;&gt;&gt;&gt;&gt;Not a valid json&quot;);
    prev.setSuccessful(false);
   
}</stringProp>
        <stringProp name="TestPlan.comments"> prev.setResponseMessage(ex.getMessage());</stringProp>
      </BeanShellPostProcessor>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
