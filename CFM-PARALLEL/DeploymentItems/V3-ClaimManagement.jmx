<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Claim_Management" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Token-Admin" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.ChromeDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig" testname="jp@gc - Chrome Driver Config" enabled="true">
          <stringProp name="WebDriverConfig.proxy_type">SYSTEM</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host"></stringProp>
          <intProp name="WebDriverConfig.http_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">true</boolProp>
          <stringProp name="WebDriverConfig.https_host"></stringProp>
          <intProp name="WebDriverConfig.https_port">8080</intProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">8080</intProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">8080</intProp>
          <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
          <boolProp name="WebDriverConfig.maximize_browser">true</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">false</boolProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <stringProp name="ChromeDriverConfig.chromedriver_path">D:\CFM-RunTimeFiles\chromedriver.exe</stringProp>
          <boolProp name="ChromeDriverConfig.android_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.headless_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.insecurecerts_enabled">false</boolProp>
        </com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="jp@gc - WebDriver Sampler" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium);
var support_ui = JavaImporter(org.openqa.selenium.support.ui.WebDriverWait);
var wait = new support_ui.WebDriverWait(WDS.browser, 5000);
var props = org.apache.jmeter.util.JMeterUtils.getJMeterProperties()
var select=JavaImporter(org.openqa.selenium.support.ui.Select);

WDS.sampleResult.sampleStart()
java.lang.Thread.sleep(7000)
WDS.browser.get(&apos;https://acehardware.v5qa.brandmuscle.net/Login/Login.aspx&apos;)
var titlep=WDS.browser.getTitle()
WDS.log.info(&quot;titlep====&gt;&quot;+WDS.browser.getTitle());

var username=WDS.browser.findElement(pkg.By.id(&apos;UserName&apos;));
username.sendKeys(&apos;UAT_Admin&apos;);
var password=WDS.browser.findElement(pkg.By.id(&apos;Password&apos;));
password.sendKeys(&apos;mJP38dX3&apos;);
var lgnbtn=WDS.browser.findElement(pkg.By.id(&apos;LoginButton&apos;));
lgnbtn.click();
java.lang.Thread.sleep(7000)

var element = WDS.browser.findElement(org.openqa.selenium.By.name(&apos;ctl00$MainContent$ddlBusinessUnit&apos;))
var select = new org.openqa.selenium.support.ui.Select(element)
select.selectByVisibleText(&apos;ACE Hardware&apos;)

var element = WDS.browser.findElement(org.openqa.selenium.By.xpath(&apos;//span[text()=&quot;Manage Co-op&quot;]&apos;))
element.click();
java.lang.Thread.sleep(25000)

var tokenvalue = WDS.browser.executeScript(&quot;return window.sessionStorage.getItem(&apos;token&apos;);&quot;) 
WDS.log.info(&quot;token====&gt;&quot;+tokenvalue);
props.put(&quot;TOKEN&quot;,tokenvalue);
WDS.sampleResult.sampleEnd()
</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">var props = org.apache.jmeter.util.JMeterUtils.getJMeterProperties();
var it = props.get(&quot;TOKEN&quot;);
log.info(&quot;BSFTOKEN==&gt;&quot;+it);
bsh.shared.token=it;
log.info(&quot;shared variable&quot;+bsh.shared.token);</stringProp>
        </BeanShellPostProcessor>
        <hashTree/>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="49586">200</stringProp>
          </collectionProp>
          <stringProp name="Assertion.custom_message"></stringProp>
          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
          <boolProp name="Assertion.assume_success">true</boolProp>
          <intProp name="Assertion.test_type">2</intProp>
        </ResponseAssertion>
        <hashTree/>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="2524">OK</stringProp>
          </collectionProp>
          <stringProp name="Assertion.custom_message"></stringProp>
          <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">2</intProp>
        </ResponseAssertion>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Token-LME" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.ChromeDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig" testname="jp@gc - Chrome Driver Config" enabled="true">
          <stringProp name="WebDriverConfig.proxy_type">SYSTEM</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host"></stringProp>
          <intProp name="WebDriverConfig.http_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">true</boolProp>
          <stringProp name="WebDriverConfig.https_host"></stringProp>
          <intProp name="WebDriverConfig.https_port">8080</intProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">8080</intProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">8080</intProp>
          <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
          <boolProp name="WebDriverConfig.maximize_browser">true</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">false</boolProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <stringProp name="ChromeDriverConfig.chromedriver_path">D:\CFM-RunTimeFiles\chromedriver.exe</stringProp>
          <boolProp name="ChromeDriverConfig.android_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.headless_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.insecurecerts_enabled">false</boolProp>
        </com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="jp@gc - WebDriver Sampler" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium);
var support_ui = JavaImporter(org.openqa.selenium.support.ui.WebDriverWait);
var wait = new support_ui.WebDriverWait(WDS.browser, 5000);
var props = org.apache.jmeter.util.JMeterUtils.getJMeterProperties()
var select=JavaImporter(org.openqa.selenium.support.ui.Select);

WDS.sampleResult.sampleStart()
java.lang.Thread.sleep(7000)
WDS.browser.get(&apos;https://acehardware.v5qa.brandmuscle.net/Login/Login.aspx&apos;)
var titlep=WDS.browser.getTitle()
WDS.log.info(&quot;titlep====&gt;&quot;+WDS.browser.getTitle());

var username=WDS.browser.findElement(pkg.By.id(&apos;UserName&apos;));
username.sendKeys(&apos;UAT_RetailEmployee&apos;);
var password=WDS.browser.findElement(pkg.By.id(&apos;Password&apos;));
password.sendKeys(&apos;welcome&apos;);
var lgnbtn=WDS.browser.findElement(pkg.By.id(&apos;LoginButton&apos;));
lgnbtn.click();
java.lang.Thread.sleep(7000)


var element = WDS.browser.findElement(org.openqa.selenium.By.xpath(&apos;//span[text()=&quot;Manage Co-op&quot;]&apos;))
element.click();
java.lang.Thread.sleep(25000)

var tokenvalue = WDS.browser.executeScript(&quot;return window.sessionStorage.getItem(&apos;token&apos;);&quot;) 
WDS.log.info(&quot;token====&gt;&quot;+tokenvalue);
props.put(&quot;TOKEN&quot;,tokenvalue);
WDS.sampleResult.sampleEnd()
</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">var props = org.apache.jmeter.util.JMeterUtils.getJMeterProperties();
var it = props.get(&quot;TOKEN&quot;);
log.info(&quot;BSFTOKEN==&gt;&quot;+it);
bsh.shared.token=it;
log.info(&quot;shared variable&quot;+bsh.shared.token);</stringProp>
        </BeanShellPostProcessor>
        <hashTree/>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="49586">200</stringProp>
          </collectionProp>
          <stringProp name="Assertion.custom_message"></stringProp>
          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
          <boolProp name="Assertion.assume_success">true</boolProp>
          <intProp name="Assertion.test_type">2</intProp>
        </ResponseAssertion>
        <hashTree/>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="2524">OK</stringProp>
          </collectionProp>
          <stringProp name="Assertion.custom_message"></stringProp>
          <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">2</intProp>
        </ResponseAssertion>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager-Admin" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.token)}</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">gateway.kube01-i.qa01.brandmuscle.net/api/cfm-claim-management/v2/Branding</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
        <stringProp name="CounterConfig.start">0</stringProp>
        <stringProp name="CounterConfig.end"></stringProp>
        <stringProp name="CounterConfig.incr">1</stringProp>
        <stringProp name="CounterConfig.name">a</stringProp>
        <stringProp name="CounterConfig.format"></stringProp>
        <boolProp name="CounterConfig.per_user">true</boolProp>
      </CounterConfig>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="load" elementType="Argument">
            <stringProp name="Argument.name">load</stringProp>
            <stringProp name="Argument.value">50</stringProp>
            <stringProp name="Argument.desc">This variable is for load</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="UserId" elementType="Argument">
            <stringProp name="Argument.name">UserId</stringProp>
            <stringProp name="Argument.value">351277</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Test User Id Admin</stringProp>
          </elementProp>
          <elementProp name="load1" elementType="Argument">
            <stringProp name="Argument.name">load1</stringProp>
            <stringProp name="Argument.value">50</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="StartDate" elementType="Argument">
            <stringProp name="Argument.name">StartDate</stringProp>
            <stringProp name="Argument.value">2018-04-25</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">start date of program</stringProp>
          </elementProp>
          <elementProp name="EndDate" elementType="Argument">
            <stringProp name="Argument.name">EndDate</stringProp>
            <stringProp name="Argument.value">2019-06-13</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">end date of program</stringProp>
          </elementProp>
          <elementProp name="ClaimDate" elementType="Argument">
            <stringProp name="Argument.name">ClaimDate</stringProp>
            <stringProp name="Argument.value">2019-07-20</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">last transaction date of program</stringProp>
          </elementProp>
          <elementProp name="ExpiryDate" elementType="Argument">
            <stringProp name="Argument.name">ExpiryDate</stringProp>
            <stringProp name="Argument.value">2019-08-27</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Expiry date of program</stringProp>
          </elementProp>
          <elementProp name="ClaimStartDate" elementType="Argument">
            <stringProp name="Argument.name">ClaimStartDate</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ClaimEndDate" elementType="Argument">
            <stringProp name="Argument.name">ClaimEndDate</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BPAStartDate" elementType="Argument">
            <stringProp name="Argument.name">BPAStartDate</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ClaimStartDate" elementType="Argument">
            <stringProp name="Argument.name">ClaimStartDate</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Programs-POST" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11071/api/ChannelBuilder/v1/Programs?tenantId=tenant1</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1517563758000</longProp>
        <longProp name="ThreadGroup.end_time">1517563758000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create New Program1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ClaimDecisionId&quot;: &quot;24&quot;,&#xd;
  &quot;FundDistributionHierarchy&quot;: &quot;org&quot;,&#xd;
  &quot;HierarchyLevel&quot;: &quot;6,7&quot;,&#xd;
  &quot;Documents&quot;: [],&#xd;
  &quot;ProgramName&quot;: &quot;API-${__javaScript(new Date().getTime();)}&quot;,&#xd;
  &quot;Description&quot;: &quot;Creating a Program&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;StartDate&quot;: &quot;${StartDate}&quot;,&#xd;
  &quot;EndDate&quot;: &quot;${EndDate}&quot;,&#xd;
  &quot;ClaimWorkflowId&quot;: 23,&#xd;
  &quot;AllowOverdraft&quot;: &quot;Yes&quot;,&#xd;
  &quot;BrandingRequired&quot;: &quot;Yes&quot;,&#xd;
  &quot;AllowECom&quot;: &quot;yes&quot;,&#xd;
  &quot;AccrualType&quot;: &quot;Flat&quot;,&#xd;
  &quot;FlatAccrualPeriod&quot;: &quot;Annual&quot;,&#xd;
  &quot;RollingAccrualPeriod&quot;: &quot;&quot;,&#xd;
  &quot;LastTransactionDate&quot;: &quot;${ClaimDate}&quot;,&#xd;
  &quot;ExpirationDate&quot;: &quot;${ExpiryDate}&quot;,&#xd;
  &quot;Activities&quot;: [&#xd;
    {&#xd;
      &quot;DirectMailName&quot;: &quot;Direct Mail&quot;,&#xd;
      &quot;DirectMailDescription&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
      &quot;FleetgraphicsDescription&quot;: &quot;1. Image of the creative.&lt;/n&gt; 2. Invoice.&quot;,&#xd;
      &quot;FleetgraphicsName&quot;: &quot;Fleet graphics&quot;,&#xd;
      &quot;ROPName&quot;: &quot;ROP&quot;,&#xd;
      &quot;ROPDescription&quot;: &quot;1. Image of the creative.&lt;/n&gt; 2. Invoice.&lt;/n&gt; 3. One (1) original full-page tear sheet. (A tear heet is a page from the publication that serves as verification that the advertisement was published).&quot;,&#xd;
      &quot;DigitalandSocialMediaName&quot;: &quot;Digital and Social Media&quot;,&#xd;
      &quot;DigitalandSocialMediaDescription&quot;: &quot;1. Image of the Creative (Screenshot of the ad from the system or mobile).&lt;/n&gt; 2. Invoice.&quot;,&#xd;
      &quot;OutofHomeName&quot;: &quot;Out of Home&quot;,&#xd;
      &quot;OutofHomeDescription&quot;: &quot;1. Image of the Billboard.&lt;/n&gt; 2. Invoice.&quot;,&#xd;
      &quot;SponsorshipName&quot;: &quot;Sponsorship&quot;,&#xd;
      &quot;PrePrintName&quot;: &quot;Pre Print&quot;,&#xd;
      &quot;TVName&quot;: &quot;TV&quot;,&#xd;
      &quot;TVDescription&quot;: &quot;1. Invoice.&lt;/n&gt; 2. Notarized script with approved ANA/RAB or ANA TVB certification and net cost of spots.&quot;,&#xd;
      &quot;ReceiptAdvertisingName&quot;: &quot;Receipt Advertising&quot;,&#xd;
      &quot;BlueCMNBucketName&quot;: &quot;Blue CMN Bucket&quot;,&#xd;
      &quot;RadioName&quot;: &quot;Radio&quot;,&#xd;
      &quot;RadioDescription&quot;: &quot;1. Invoice.&lt;/n&gt; 2. Notarized script with approved ANA/RAB or ANA TVB certification and net cost of spots.&quot;,&#xd;
      &quot;ReimbursementType&quot;: &quot;Fixed&quot;,&#xd;
      &quot;FixedReimbursement&quot;: 10,&#xd;
      &quot;AllowCapping&quot;: &quot;yes&quot;,&#xd;
      &quot;DirectMail&quot;: false,&#xd;
      &quot;Fleetgraphics&quot;: false,&#xd;
      &quot;ROP&quot;: false,&#xd;
      &quot;DigitalandSocialMedia&quot;: true,&#xd;
      &quot;OutofHome&quot;: false,&#xd;
      &quot;Sponsorship&quot;: false,&#xd;
      &quot;SponsorshipDescription&quot;: &quot;&quot;,&#xd;
      &quot;PrePrint&quot;: false,&#xd;
      &quot;PrePrintDescription&quot;: &quot;&quot;,&#xd;
      &quot;TV&quot;: true,&#xd;
      &quot;ReceiptAdvertising&quot;: false,&#xd;
      &quot;ReceiptAdvertisingDescription&quot;: &quot;&quot;,&#xd;
      &quot;BlueCMNBucket&quot;: false,&#xd;
      &quot;BlueCMNBucketDescription&quot;: &quot;&quot;,&#xd;
      &quot;Radio&quot;: false,&#xd;
      &quot;ActivitiesTableTextField&quot;: &quot;&quot;,&#xd;
      &quot;DirectMailRP&quot;: null,&#xd;
      &quot;DirectMailCapRP&quot;: null,&#xd;
      &quot;FleetgraphicsRP&quot;: null,&#xd;
      &quot;FleetgraphicsCapRP&quot;: null,&#xd;
      &quot;ROPRP&quot;: null,&#xd;
      &quot;ROPCapRP&quot;: null,&#xd;
      &quot;DigitalandSocialMediaRP&quot;: null,&#xd;
      &quot;DigitalandSocialMediaCapRP&quot;: 55,&#xd;
      &quot;OutofHomeRP&quot;: null,&#xd;
      &quot;OutofHomeCapRP&quot;: null,&#xd;
      &quot;SponsorshipRP&quot;: null,&#xd;
      &quot;SponsorshipCapRP&quot;: null,&#xd;
      &quot;PrePrintRP&quot;: null,&#xd;
      &quot;PrePrintCapRP&quot;: null,&#xd;
      &quot;TVRP&quot;: null,&#xd;
      &quot;TVCapRP&quot;: 25,&#xd;
      &quot;ReceiptAdvertisingRP&quot;: null,&#xd;
      &quot;ReceiptAdvertisingCapRP&quot;: null,&#xd;
      &quot;BlueCMNBucketRP&quot;: null,&#xd;
      &quot;BlueCMNBucketCapRP&quot;: null,&#xd;
      &quot;RadioRP&quot;: null,&#xd;
      &quot;RadioCapRP&quot;: null&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;programsace&quot;,&#xd;
  &quot;ProgramStatusName&quot;: &quot;Active&quot;&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">gateway.kube01-i.qa01.brandmuscle.net/api/cfm-program/v2</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/Programs?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will create a program</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1170183121">&quot;Program Created successfully.&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Programs/GetProgramsForDashboard" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11071/api/ChannelBuilder/v1/Programs/GetProgramsForDashboard?tenantId=acehardware</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522829120000</longProp>
        <longProp name="ThreadGroup.end_time">1522829120000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DashboardPrograms" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">gateway.kube01-i.qa01.brandmuscle.net/api/cfm-program/v2/Programs</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/GetProgramsForDashboard?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-this will fetch Programs for Dashboard</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager-Admin" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCIsImtpZCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCJ9..HK8v6ohAI1Y8GtNdZWY5pPTNIL7L48AEFzl3XjGHbHD9XtK7Wdg18IosVbfAQLvc6txPXtum_705wpKX8bTVwZY_JSw9Jyih7WtXXatimbbbVoJcXRkHymykq9m6zqiP3B89N7nghToiOqd5WcCqIb7vrW5ty72PmZCxEs-MUUdOxpMoiJUtLUx0nzuQEUPhwq-Jlbf-qkRZTqfA2vuLQ0srAU_oy0YXQmKb02Yhvttn3ZsbeOe6rSxzQNj_urJgeJAiMsJL9aGeSUkhv-TTtGFikcZtPcPzj_gc6M0JNSWRFk1iYQR79QdE7CkzbRDAkOqbWeg24Ot2KzvXnb1LsQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="34333898">&quot;_id&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="35548181">&quot;ProgramName&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">programid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..$oid</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${programid_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${programid_1}&quot;);
String[] prgid = vars.get(&quot;programid_ALL&quot;).split(&quot;,&quot;); 
int len = prgid.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList numProgramid = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	numProgramid.add(prgid[i]);
}
bsh.shared.numProgramid=numProgramid;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">pname</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..ProgramName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${pname_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${pname_1}&quot;);
String[] prgname = vars.get(&quot;pname_ALL&quot;).split(&quot;,&quot;); 
int len = prgname.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList Programname = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	Programname.add(prgname[i]);
}
bsh.shared.Programname=Programname;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">userid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..CreatedByUserId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${userid_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${userid_1}&quot;);
String[] usridobj = vars.get(&quot;userid_ALL&quot;).split(&quot;,&quot;); 
int len = usridobj.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList UserId = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	UserId.add(usridobj[i]);
}

var UserId=&quot;3512177&quot;;
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${bsh.shared.UserId}&quot;);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="GET Marketing Fund Accounts-Reference" enabled="true">
        <stringProp name="TestPlan.comments">This will fetch all the Marketing Fund Account Id&apos;s for a Program</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1520422596000</longProp>
        <longProp name="ThreadGroup.end_time">1520422596000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST_MarketingFundAccount/GetMarketingFundAccounts" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
{&quot;StoreNo&quot;: &quot;00020&quot;,&quot;ProgramId&quot;: &quot;${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&quot;}&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">gateway.kube01-i.qa01.brandmuscle.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/GetMarketingFundAccounts</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager-Admin" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCIsImtpZCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCJ9..hVPzmRcTAupyuOcFjJf8_g--svs8rKQa6KDVUIm-3PI9uyoRsbvicdHFO0JRhBJ1ELjl842UmWQgoYOz1P2LpL7COFTi5lowxe1EBusTo3JuQYcNcjquUblNPZMKvhGc8V9tRdO3j5NW9K3YWviGK7PrFT4uGUbHfPVqwOJcQD-bwVCH_7dj1j0N2My2cqHbmDTfHGOExtgqFP-FscS1LUD8L1gZmRgyjAsQQ0CkvLHzE9x4XoWap77VLcwSryIdaLXLR9adRrQ88Ryh3BcouPmlfGqgz10_MSJYTbkvNf5Its1YWT3yiQyNwNQLuTzzRBQpo673mh-LfbE2kTXPtg</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">marketingFundAccountId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..MarketingFundAccountId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${marketingFundAccountId_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${marketingFundAccountId_1}&quot;);
String[] mfaobj = vars.get(&quot;marketingFundAccountId_ALL&quot;).split(&quot;,&quot;); 
int len = mfaobj.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList MFAid = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	MFAid.add(mfaobj[i]);
}
bsh.shared.MFAid=MFAid;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">lmeid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..LMEId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${lmeid_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${lmeid_1}&quot;);
String[] lmeidobj = vars.get(&quot;lmeid_ALL&quot;).split(&quot;,&quot;); 
int len = lmeidobj.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList LMEid = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	LMEid.add(lmeidobj[i]);
}
bsh.shared.LMEid=LMEid;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">lmename</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..LMEName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${lmename_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${lmename_1}&quot;);
String[] lmenameobj = vars.get(&quot;lmename_ALL&quot;).split(&quot;,&quot;); 
int len = lmenameobj.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList LMEName = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	LMEName.add(lmenameobj[i]);
}
bsh.shared.LMEName=LMEName;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Transaction/Transaction-POST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1517832774000</longProp>
        <longProp name="ThreadGroup.end_time">1517832774000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AllocateAccrual" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
{&#xd;
  &quot;MarketingFundAccountTransactionId&quot;: 0,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;A33D2A46-2203-46CB-9E2E-3AEF9BBCE4E1&quot;,&#xd;
  &quot;MarketingFundAccountTransactionType&quot;: &quot;PositiveAccrual&quot;,&#xd;
  &quot;TransactionAmount&quot;: 40,&#xd;
  &quot;TransactionPeriod&quot;: &quot;04/2018&quot;,&#xd;
  &quot;Comments&quot;: &quot;40 dollars accrued&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;3512177&quot;,&#xd;
  &quot;CreatedDate&quot;: &quot;2018-05-04T06:10:05.438Z&quot;,&#xd;
  &quot;ModifiedByUserId&quot;: &quot;3512177&quot;,&#xd;
  &quot;ModifiedDate&quot;: &quot;2018-05-04T06:10:05.438Z&quot;,&#xd;
  &quot;MarketingFundAccountTransactionSourceName&quot;: &quot;System&quot;&#xd;
}&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ChannelBuilder/v1/Transaction/Transaction?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager-Admin" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCIsImtpZCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCJ9..hVPzmRcTAupyuOcFjJf8_g--svs8rKQa6KDVUIm-3PI9uyoRsbvicdHFO0JRhBJ1ELjl842UmWQgoYOz1P2LpL7COFTi5lowxe1EBusTo3JuQYcNcjquUblNPZMKvhGc8V9tRdO3j5NW9K3YWviGK7PrFT4uGUbHfPVqwOJcQD-bwVCH_7dj1j0N2My2cqHbmDTfHGOExtgqFP-FscS1LUD8L1gZmRgyjAsQQ0CkvLHzE9x4XoWap77VLcwSryIdaLXLR9adRrQ88Ryh3BcouPmlfGqgz10_MSJYTbkvNf5Its1YWT3yiQyNwNQLuTzzRBQpo673mh-LfbE2kTXPtg</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/branding/Save" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/branding/Save?tenantId=acehardware</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Branding Pre-approval1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;LMEId&quot;: &quot;IazgaBhLgFaoFRtfyBb5iw&quot;,&#xd;
   &quot;BrandingReference&quot;:&quot;BPA&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;StartDate&quot;: &quot;2018-05-26T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-07-22T18:30:00.000Z&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedBrandingWorkflow_acehardware&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;1.jpg&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;brandingapprovalacehw&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating BPA&quot;,&#xd;
  &quot;BrandingRequestStatusName&quot;: &quot;Review&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/Save?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">${__BeanShell(bsh.shared.LMEid.get(${a}),)}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager_LME" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjBCRjEzRjlDMjdFQjVBMkIwQTMyRTE2OUFGODk5OTE5RkEzMkNEREQiLCJ0eXAiOiJKV1QiLCJ4NXQiOiJDX0VfbkNmcldpc0tNdUZwcjRtWkdmb3l6ZDAifQ.eyJuYmYiOjE1NTU1ODAxODYsImV4cCI6MTU1NTU4NzM4NiwiaXNzIjoiaHR0cHM6Ly9hY2VoYXJkd2FyZS52NXFhLmJyYW5kbXVzY2xlLm5ldC9hcGkvdjVvaWRjL3YxIiwiYXVkIjpbImh0dHBzOi8vYWNlaGFyZHdhcmUudjVxYS5icmFuZG11c2NsZS5uZXQvYXBpL3Y1b2lkYy92MS9yZXNvdXJjZXMiLCJicmFuZG11c2NsZWFwaSJdLCJjbGllbnRfaWQiOiJDRk0iLCJzdWIiOiJVQVRfUmV0YWlsRW1wbG95ZWUtNTY5IiwiYXV0aF90aW1lIjoxNTU1NTgwMTg2LCJpZHAiOiJsb2NhbCIsImJtaS5idXNpbmVzc3VuaXRpZCI6IjU2OSIsImJtaS5idXNpbmVzc3VuaXRzeXN0ZW1uYW1lIjoiYWNlaGFyZHdhcmUiLCJibWkudXNlcmlkIjoiNDAzODk2OCIsImJtaS51c2VybmFtZSI6IlVBVF9SZXRhaWxFbXBsb3llZSIsImJtaS5maXJzdG5hbWUiOiJSZXRhaWxFbXBsb3llZSIsImJtaS5sYXN0bmFtZSI6IlVBVCIsImJtaS5pc2ludGVybmFsIjoiRmFsc2UiLCJibWkudGl0bGUiOiIiLCJibWkuYWRkcmVzcyI6IjEyMzQgTWFpbiBTdC4sIFN1aXRlIDEwMCIsImJtaS5hZGRyZXNzMiI6IlN1aXRlIDEwMCIsImJtaS5jaXR5IjoiQ2xldmVsYW5kIiwiYm1pLmNvdW50cnkiOiJVU0EiLCJibWkuc3RhdGUiOiJPSCIsImJtaS56aXBjb2RlIjoiNDQwOTUiLCJibWkudGVsZXBob25lIjoiMjE2ODc2MjAxOSIsImJtaS5lbWFpbCI6InByYXNhbm5hLmxha3NobWlAYnJhbmRtdXNjbGUuY29tIiwiYm1pLmxvY2FsZSI6ImVuIiwiYm1pLnJpZ2h0IjpbIkNhbkJlRW11bGF0ZWQiLCJDYW5Dcm9wQWxsVXBsb2FkZWRJbWFnZXMiLCJDYW5Dcm9wVGVtcGxhdGVJbWFnZXMiLCJIVE1MU0VBUkNITE9DQVRJT05TIiwiSFRNTFZJRVdPV05FRCIsIkxvY2F0aW9uSW1hZ2VBcHByb3ZhbE5vdFJlcXVpcmVkIiwiVXBsb2FkSW1hZ2VzVG9Mb2NhdGlvbiIsIlVwbG9hZE1haWxpbmdMaXN0Rm9yRGlyZWN0bWFpbCIsIlVzZUNCUGF5bWVudCIsIlVzZUNDUGF5bWVudCIsIlVzZU9ubGluZUNvb3AiLCJWaWV3QWxsVXNlck1hbmFnZXJzIiwiVmlld01hbmFnZWRVc2VyTWFuYWdlcnMiLCJWaWV3TWFuYWdlZFVzZXJzRG93bmxvYWRIaXN0b3J5IiwiRGVsaXZlckFzc2V0IiwiQWRkcmVzc0NyZWF0ZSIsIkFkZHJlc3NEZWxldGVNYW5hZ2VkIiwiQWRkcmVzc0RlbGV0ZU93bmVkIiwiQWRkcmVzc0VkaXRNYW5hZ2VkIiwiQWRkcmVzc0VkaXRPd25lZCIsIkFkZHJlc3NWaWV3TWFuYWdlZCIsIkNyZWF0ZV9Pd25fQWRkcmVzc0Jvb2siLCJDcmVhdGVfT3duX0FkZHJlc3NCb29rX0xvY2F0aW9uIiwiRGVsZXRlX0FsbF9BZGRyZXNzQm9vayIsIkRlbGV0ZV9BbGxfQWRkcmVzc0Jvb2tfTG9jYXRpb24iLCJEZWxldGVfTWFuYWdlX0FkZHJlc3NCb29rIiwiRGVsZXRlX01hbmFnZV9BZGRyZXNzQm9va19Mb2NhdGlvbiIsIkRlbGV0ZV9Pd25fQWRkcmVzc0Jvb2siLCJEZWxldGVfT3duX0FkZHJlc3NCb29rX0xvY2F0aW9uIiwiRWRpdF9BbGxfQWRkcmVzc0Jvb2siLCJFZGl0X0FsbF9BZGRyZXNzQm9va19Mb2NhdGlvbiIsIkVkaXRfT3duX0FkZHJlc3NCb29rIiwiVmlld19Pd25fQWRkcmVzc0Jvb2siLCJWaWV3X093bl9BZGRyZXNzQm9va19Mb2NhdGlvbiIsIkNyZWF0ZVVzZXJzIiwiRWRpdEFsbFVzZXJHcm91cHMiLCJFZGl0QWxsVXNlck1hbmFnZXJzIiwiRWRpdE1hbmFnZWRVc2VyTWFuYWdlcnMiLCJFTlRFUlBSSVNFQURNSU4iLCJQYXNzdGhyb3VnaFVzZXJDcmVhdGlvbiIsIlByaW50X01haWxpbmdMaXN0X1VTQURhdGEiLCJTTVNfTWFpbGluZ0xpc3RfUHViTGlzdCIsIlRoaXJkUGFydHlGb3JEaXJlY3RtYWlsIiwiVmlld0FsbFVzZXJHcm91cHMiLCJWaWV3R3JvdXBzIiwiVmlld01hbmFnZWRVc2VyR3JvdXBzIiwiRW1haWxfQ3VzdG9taXplX1RlbXBsYXRlcyIsIkVtYWlsX01haWxpbmdMaXN0X1VwbG9hZE1haWxpbmdMaXN0IiwiRW1haWxfUmVwb3J0cyIsIkVtYWlsX1NlbmRfRW1haWxzIiwiRW1haWxfVXBsb2FkX0VtYWlsSWRsaXN0IiwiVmlld0VtYWlsV29ya0NlbnRlciIsIkNoYW5nZUxvY2F0aW9uU3RhdHVzIiwiQ3JlYXRlT3duZWQiLCJEZWxldGVPd25lZCIsIkVkaXRPd25lZCIsIlZpZXdfQWxsX0FkZHJlc3NCb29rX0xvY2F0aW9uIiwiVmlld093bmVkIiwiQWxsb3dBZGRUb0Fzc2V0Rm9sZGVyIiwiQWxsb3dPcmRlckFuZFBheSIsIkFsbG93T3JkZXJXaXRob3V0UGF5bWVudCIsIkNyZWF0ZV9NYW5hZ2VfQWRkcmVzc0Jvb2siLCJDcmVhdGVOZXdBZE1hdGVyaWFsIiwiRGVsZXRlQWRNYXRlcmlhbCIsIkRlbGV0ZURlbGl2ZXJ5UmVxdWVzdHMiLCJEb3dubG9hZEFzc2V0cyIsIkVkaXRfTWFuYWdlX0FkZHJlc3NCb29rIiwiRWRpdEFkTWF0ZXJpYWwiLCJWaWV3X01hbmFnZV9BZGRyZXNzQm9vayIsIlZpZXdfTWFuYWdlX1JlZl9Db250YWN0IiwiVmlld0NyZWF0aXZlcyIsIlZpZXdEZWxpdmVyeU9wdGlvbnMiLCJWaWV3RGVsaXZlcnlSZXF1ZXN0cyIsIlZpZXdEb3dubG9hZEhpc3RvcnkiLCJWaWV3SlBHIiwiVmlld0xvd1Jlc1BERiIsIlNFVEZVTEZJTExNRU5UU0NIRURVTEUiLCJwcmVhcHByb3ZhbC12aWV3Iiwic3RhcnQtd29ya2Zsb3ciLCJicmFuZGluZy1kZWxldGUiLCJjbGFpbS12aWV3IiwicHJlYXBwcm92YWwtY3JlYXRlIiwiY2xhaW0tY3JlYXRlIiwicHJlYXBwcm92YWwtZGVsZXRlIiwiY2xhaW0tZGVsZXRlIiwiYnJhbmRpbmctY3JlYXRlIiwiYnJhbmRpbmctdmlldyIsInByb2dyYW0tdmlldyIsImFjY291bnQtdmlldyIsInZpZXctZWRwcyIsInF1aWNrbGluay1wcm9ncmFtZ3VpZGVsaW5lcyIsInF1aWNrbGluay1jbGFpbXVzZXJndWlkZSIsInF1aWNrbGluay1yZWNlaXB0dGFwZSJdLCJqdGkiOiIxZTBiMTNkY2UyYWIzNzQ5YWU5Mjc5NDlkNDQ1YjE0NSIsInNjb3BlIjpbIm9wZW5pZCIsImJ1c2luZXNzdW5pdCIsInByb2ZpbGUiLCJyb2xlcyJdLCJhbXIiOlsicHdkIl19.nqeiOf8nmLoUJ8f8z-MZcusoN5uTroyrnoV_lAiU5YEu9zJDbzcuWH9JdvwEYqDJ1DkRWp1iIEAXFbxy63AmCOr6a1E2u1erbOfY2ivUHY6w_hiya-hvSDhaSsMWQxEJXyY2zV_bjPKF4QDI5YbL9VlFW5cncG7mmvO_-2tcSs9KdV9Hf7wF4zZatuCNqhacGUBYAtu-ILsCy2XxlNtZBoTpPgShZpH6awuK2REw4fIo0fsfflYY4LCiyg9ao9XLYeMppYY06JRvsYYD2Y0Ne8ZoOe665EfezGEcH2NhPrxvQj-5KUtv89txZQcFPvUqtNmJ-4dVNsMZmYBfrCxoJQ</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">brandid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..*</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">byte [] samplerdataobj = ctx.getPreviousResult().getResponseData();
String brandingid = new String(samplerdataobj);
log.info(&quot;=======&gt;&quot;+brandingid);
String BPAid= brandingid.replaceAll(&quot;^\&quot;|\&quot;$&quot;, &quot;&quot;);
log.info(&quot;newBPAid========&gt;&quot;+BPAid);
bsh.shared.BPAid=BPAid;
log.info(&quot;=======&gt;&quot;+bsh.shared.BPAid);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/branding/GetBrandingRequestDetailsById" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/branding/GetBrandingRequestDetailsById?brandingRequestid=123&amp;tenantId=acehardware</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Brand Request Details by ID1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/GetBrandingRequestDetailsById?brandingRequestid=${__BeanShell(bsh.shared.BPAid)}&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">prcesid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..ProcessInstanceId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${prcesid_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${prcesid_1}&quot;);
String[] prcesidobj = vars.get(&quot;prcesid_ALL&quot;).split(&quot;,&quot;); 
int len = prcesidobj.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList BPAProcessInstanceId = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	BPAProcessInstanceId.add(prcesidobj[i]);
}
bsh.shared.BPAProcessInstanceId=BPAProcessInstanceId;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">BPArefid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..BrandingRequestId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${BPArefid_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${BPArefid_1}&quot;);
String[] BPArefID = vars.get(&quot;BPArefid_ALL&quot;).split(&quot;,&quot;); 
int len = BPArefID.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList BPAReferenceId = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	BPAReferenceId.add(BPArefID[i]);
}
bsh.shared.BPAReferenceId=BPAReferenceId;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">aprvrID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..ApproverGroupId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${aprvrID_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${aprvrID_1}&quot;);
String[] aprvridobj = vars.get(&quot;aprvrID_ALL&quot;).split(&quot;,&quot;); 
int len = aprvridobj.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList BPAapproverID = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	BPAapproverID.add(aprvridobj[i]);
}
bsh.shared.BPAapproverID=BPAapproverID;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/branding/SubmitBrandingRequestReview-Admin user taking Needs Change action on this BPA" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/branding/SubmitBrandingRequestReview</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Branding Request Review" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;_id&quot;: {&#xd;
    &quot;$oid&quot;: &quot;${__BeanShell(bsh.shared.BPAid)}&quot;&#xd;
  },&#xd;
  &quot;LMEId&quot;: &quot;IazgaBhLgFaoFRtfyBb5iw&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;StartDate&quot;: &quot;2018-05-26T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-07-22T18:30:00.000Z&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedBrandingWorkflow_acehardware&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CoOpGuidelines_LCP_2018_Q1_R6.pdf&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;brandingapprovalacehw&quot;,&#xd;
  &quot;BrandingRequestStatusName&quot;: &quot;Review&quot;,&#xd;
  &quot;ModifiedByUserId&quot;: &quot;4038964&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;4038968&quot;,&#xd;
  &quot;ModifiedByUserName&quot;: &quot;UAT_Admin&quot;,&#xd;
  &quot;CreatedByUserName&quot;: &quot;UAT_RetailEmployee&quot;,&#xd;
  &quot;ModifiedDate&quot;: {&#xd;
    &quot;$date&quot;: 1530770647008&#xd;
  },&#xd;
  &quot;CreatedDate&quot;: {&#xd;
    &quot;$date&quot;: 1530770647008&#xd;
  },&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;LMEName&quot;: &quot;26957 - (HQ) Agway Stores&quot;,&#xd;
  &quot;BrandingRequestId&quot;: &quot;${__BeanShell(bsh.shared.BPAReferenceId.get(${a}),)}&quot;,&#xd;
  &quot;ProcessInstanceId&quot;: &quot;${__BeanShell(bsh.shared.BPAProcessInstanceId.get(${a}),)}&quot;,&#xd;
  &quot;ApproverGroupId&quot;: &quot;${__BeanShell(bsh.shared.BPAapproverID.get(${a}),)}&quot;,&#xd;
  &quot;CreatedBy&quot;: &quot;UAT_RetailEmployee&quot;,&#xd;
  &quot;ApproverName&quot;: &quot;&quot;,&#xd;
  &quot;ModifiedBy&quot;: &quot;UAT_Admin&quot;,&#xd;
  &quot;ActionRequired&quot;: true,&#xd;
  &quot;Comment&quot;: &quot;Approving BPA as Admin&quot;,&#xd;
  &quot;ApproverId&quot;: &quot;4038964&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/SubmitBrandingRequestReview?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">{__BeanShell(bsh.shared.LMEid.get(${a}),)}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/branding/UpdateBrandingRequest" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/branding/UpdateBrandingRequest</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465742000</longProp>
        <longProp name="ThreadGroup.end_time">1524465742000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Branding Edit1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;BrandingRequestId&quot;: &quot;${__BeanShell(bsh.shared.BPAReferenceId.get(${a}),)}&quot;,&#xd;
  &quot;BrandingReference&quot;:&quot;BPA&quot;,&#xd;
  &quot;LMEId&quot;: &quot;${__BeanShell(bsh.shared.LMEid.get(${a}),)}&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;StartDate&quot;: &quot;2018-07-10T04:00:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-07-13T04:00:00.000Z&quot;,&#xd;
  &quot;_id&quot;: &quot;${__BeanShell(bsh.shared.BPAid)}&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedBrandingWorkflow_acehardware&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CoOpGuidelines_LCP_2018_Q1_R6.pdf&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;brandingapprovalacehw&quot;,&#xd;
  &quot;Comment&quot;: &quot;Editing BPA as LME&quot;,&#xd;
  &quot;BrandingRequestStatusName&quot;: &quot;Resubmitted&quot;,&#xd;
  &quot;ModifiedByUserId&quot;: &quot;3512177&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;ModifiedByUserName&quot;: &quot;Test1&quot;,&#xd;
  &quot;CreatedByUserName&quot;: &quot;APete1&quot;,&#xd;
  &quot;ModifiedDate&quot;: {&#xd;
    &quot;$date&quot;: 1531075558098&#xd;
  },&#xd;
  &quot;CreatedDate&quot;: {&#xd;
    &quot;$date&quot;: 1531075423311&#xd;
  },&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;ReviewHistory&quot;: [&#xd;
    {&#xd;
      &quot;Comment&quot;: &quot;BPA-Comments-1234&quot;,&#xd;
      &quot;ModifiedDate&quot;: &quot;2018-07-08T18:43:43.3423579Z&quot;,&#xd;
      &quot;ModifiedByUserId&quot;: &quot;3512172&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;Comment&quot;: &quot;&quot;,&#xd;
      &quot;ModifiedDate&quot;: &quot;2018-07-08T18:45:58.0989495Z&quot;,&#xd;
      &quot;ModifiedByUserId&quot;: &quot;3512177&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;ProcessInstanceId&quot;: &quot;958985&quot;,&#xd;
  &quot;ApproverGroupId&quot;: &quot;6324&quot;,&#xd;
  &quot;ReviewedDate&quot;: {&#xd;
    &quot;$date&quot;: 1531075558098&#xd;
  },&#xd;
  &quot;ApproverId&quot;: &quot;3512177&quot;,&#xd;
  &quot;CreatedBy&quot;: &quot;Al Pete&quot;,&#xd;
  &quot;ApproverName&quot;: &quot;TestUser TestUser&quot;,&#xd;
  &quot;ModifiedBy&quot;: &quot;TestUser TestUser&quot;,&#xd;
  &quot;ActionRequired&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/GetBrandingRequestDetailsById?brandingRequestid=123&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager_LME" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.tokenlme)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager_LME" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjBCRjEzRjlDMjdFQjVBMkIwQTMyRTE2OUFGODk5OTE5RkEzMkNEREQiLCJ0eXAiOiJKV1QiLCJ4NXQiOiJDX0VfbkNmcldpc0tNdUZwcjRtWkdmb3l6ZDAifQ.eyJuYmYiOjE1NTU1ODAxODYsImV4cCI6MTU1NTU4NzM4NiwiaXNzIjoiaHR0cHM6Ly9hY2VoYXJkd2FyZS52NXFhLmJyYW5kbXVzY2xlLm5ldC9hcGkvdjVvaWRjL3YxIiwiYXVkIjpbImh0dHBzOi8vYWNlaGFyZHdhcmUudjVxYS5icmFuZG11c2NsZS5uZXQvYXBpL3Y1b2lkYy92MS9yZXNvdXJjZXMiLCJicmFuZG11c2NsZWFwaSJdLCJjbGllbnRfaWQiOiJDRk0iLCJzdWIiOiJVQVRfUmV0YWlsRW1wbG95ZWUtNTY5IiwiYXV0aF90aW1lIjoxNTU1NTgwMTg2LCJpZHAiOiJsb2NhbCIsImJtaS5idXNpbmVzc3VuaXRpZCI6IjU2OSIsImJtaS5idXNpbmVzc3VuaXRzeXN0ZW1uYW1lIjoiYWNlaGFyZHdhcmUiLCJibWkudXNlcmlkIjoiNDAzODk2OCIsImJtaS51c2VybmFtZSI6IlVBVF9SZXRhaWxFbXBsb3llZSIsImJtaS5maXJzdG5hbWUiOiJSZXRhaWxFbXBsb3llZSIsImJtaS5sYXN0bmFtZSI6IlVBVCIsImJtaS5pc2ludGVybmFsIjoiRmFsc2UiLCJibWkudGl0bGUiOiIiLCJibWkuYWRkcmVzcyI6IjEyMzQgTWFpbiBTdC4sIFN1aXRlIDEwMCIsImJtaS5hZGRyZXNzMiI6IlN1aXRlIDEwMCIsImJtaS5jaXR5IjoiQ2xldmVsYW5kIiwiYm1pLmNvdW50cnkiOiJVU0EiLCJibWkuc3RhdGUiOiJPSCIsImJtaS56aXBjb2RlIjoiNDQwOTUiLCJibWkudGVsZXBob25lIjoiMjE2ODc2MjAxOSIsImJtaS5lbWFpbCI6InByYXNhbm5hLmxha3NobWlAYnJhbmRtdXNjbGUuY29tIiwiYm1pLmxvY2FsZSI6ImVuIiwiYm1pLnJpZ2h0IjpbIkNhbkJlRW11bGF0ZWQiLCJDYW5Dcm9wQWxsVXBsb2FkZWRJbWFnZXMiLCJDYW5Dcm9wVGVtcGxhdGVJbWFnZXMiLCJIVE1MU0VBUkNITE9DQVRJT05TIiwiSFRNTFZJRVdPV05FRCIsIkxvY2F0aW9uSW1hZ2VBcHByb3ZhbE5vdFJlcXVpcmVkIiwiVXBsb2FkSW1hZ2VzVG9Mb2NhdGlvbiIsIlVwbG9hZE1haWxpbmdMaXN0Rm9yRGlyZWN0bWFpbCIsIlVzZUNCUGF5bWVudCIsIlVzZUNDUGF5bWVudCIsIlVzZU9ubGluZUNvb3AiLCJWaWV3QWxsVXNlck1hbmFnZXJzIiwiVmlld01hbmFnZWRVc2VyTWFuYWdlcnMiLCJWaWV3TWFuYWdlZFVzZXJzRG93bmxvYWRIaXN0b3J5IiwiRGVsaXZlckFzc2V0IiwiQWRkcmVzc0NyZWF0ZSIsIkFkZHJlc3NEZWxldGVNYW5hZ2VkIiwiQWRkcmVzc0RlbGV0ZU93bmVkIiwiQWRkcmVzc0VkaXRNYW5hZ2VkIiwiQWRkcmVzc0VkaXRPd25lZCIsIkFkZHJlc3NWaWV3TWFuYWdlZCIsIkNyZWF0ZV9Pd25fQWRkcmVzc0Jvb2siLCJDcmVhdGVfT3duX0FkZHJlc3NCb29rX0xvY2F0aW9uIiwiRGVsZXRlX0FsbF9BZGRyZXNzQm9vayIsIkRlbGV0ZV9BbGxfQWRkcmVzc0Jvb2tfTG9jYXRpb24iLCJEZWxldGVfTWFuYWdlX0FkZHJlc3NCb29rIiwiRGVsZXRlX01hbmFnZV9BZGRyZXNzQm9va19Mb2NhdGlvbiIsIkRlbGV0ZV9Pd25fQWRkcmVzc0Jvb2siLCJEZWxldGVfT3duX0FkZHJlc3NCb29rX0xvY2F0aW9uIiwiRWRpdF9BbGxfQWRkcmVzc0Jvb2siLCJFZGl0X0FsbF9BZGRyZXNzQm9va19Mb2NhdGlvbiIsIkVkaXRfT3duX0FkZHJlc3NCb29rIiwiVmlld19Pd25fQWRkcmVzc0Jvb2siLCJWaWV3X093bl9BZGRyZXNzQm9va19Mb2NhdGlvbiIsIkNyZWF0ZVVzZXJzIiwiRWRpdEFsbFVzZXJHcm91cHMiLCJFZGl0QWxsVXNlck1hbmFnZXJzIiwiRWRpdE1hbmFnZWRVc2VyTWFuYWdlcnMiLCJFTlRFUlBSSVNFQURNSU4iLCJQYXNzdGhyb3VnaFVzZXJDcmVhdGlvbiIsIlByaW50X01haWxpbmdMaXN0X1VTQURhdGEiLCJTTVNfTWFpbGluZ0xpc3RfUHViTGlzdCIsIlRoaXJkUGFydHlGb3JEaXJlY3RtYWlsIiwiVmlld0FsbFVzZXJHcm91cHMiLCJWaWV3R3JvdXBzIiwiVmlld01hbmFnZWRVc2VyR3JvdXBzIiwiRW1haWxfQ3VzdG9taXplX1RlbXBsYXRlcyIsIkVtYWlsX01haWxpbmdMaXN0X1VwbG9hZE1haWxpbmdMaXN0IiwiRW1haWxfUmVwb3J0cyIsIkVtYWlsX1NlbmRfRW1haWxzIiwiRW1haWxfVXBsb2FkX0VtYWlsSWRsaXN0IiwiVmlld0VtYWlsV29ya0NlbnRlciIsIkNoYW5nZUxvY2F0aW9uU3RhdHVzIiwiQ3JlYXRlT3duZWQiLCJEZWxldGVPd25lZCIsIkVkaXRPd25lZCIsIlZpZXdfQWxsX0FkZHJlc3NCb29rX0xvY2F0aW9uIiwiVmlld093bmVkIiwiQWxsb3dBZGRUb0Fzc2V0Rm9sZGVyIiwiQWxsb3dPcmRlckFuZFBheSIsIkFsbG93T3JkZXJXaXRob3V0UGF5bWVudCIsIkNyZWF0ZV9NYW5hZ2VfQWRkcmVzc0Jvb2siLCJDcmVhdGVOZXdBZE1hdGVyaWFsIiwiRGVsZXRlQWRNYXRlcmlhbCIsIkRlbGV0ZURlbGl2ZXJ5UmVxdWVzdHMiLCJEb3dubG9hZEFzc2V0cyIsIkVkaXRfTWFuYWdlX0FkZHJlc3NCb29rIiwiRWRpdEFkTWF0ZXJpYWwiLCJWaWV3X01hbmFnZV9BZGRyZXNzQm9vayIsIlZpZXdfTWFuYWdlX1JlZl9Db250YWN0IiwiVmlld0NyZWF0aXZlcyIsIlZpZXdEZWxpdmVyeU9wdGlvbnMiLCJWaWV3RGVsaXZlcnlSZXF1ZXN0cyIsIlZpZXdEb3dubG9hZEhpc3RvcnkiLCJWaWV3SlBHIiwiVmlld0xvd1Jlc1BERiIsIlNFVEZVTEZJTExNRU5UU0NIRURVTEUiLCJwcmVhcHByb3ZhbC12aWV3Iiwic3RhcnQtd29ya2Zsb3ciLCJicmFuZGluZy1kZWxldGUiLCJjbGFpbS12aWV3IiwicHJlYXBwcm92YWwtY3JlYXRlIiwiY2xhaW0tY3JlYXRlIiwicHJlYXBwcm92YWwtZGVsZXRlIiwiY2xhaW0tZGVsZXRlIiwiYnJhbmRpbmctY3JlYXRlIiwiYnJhbmRpbmctdmlldyIsInByb2dyYW0tdmlldyIsImFjY291bnQtdmlldyIsInZpZXctZWRwcyIsInF1aWNrbGluay1wcm9ncmFtZ3VpZGVsaW5lcyIsInF1aWNrbGluay1jbGFpbXVzZXJndWlkZSIsInF1aWNrbGluay1yZWNlaXB0dGFwZSJdLCJqdGkiOiIxZTBiMTNkY2UyYWIzNzQ5YWU5Mjc5NDlkNDQ1YjE0NSIsInNjb3BlIjpbIm9wZW5pZCIsImJ1c2luZXNzdW5pdCIsInByb2ZpbGUiLCJyb2xlcyJdLCJhbXIiOlsicHdkIl19.nqeiOf8nmLoUJ8f8z-MZcusoN5uTroyrnoV_lAiU5YEu9zJDbzcuWH9JdvwEYqDJ1DkRWp1iIEAXFbxy63AmCOr6a1E2u1erbOfY2ivUHY6w_hiya-hvSDhaSsMWQxEJXyY2zV_bjPKF4QDI5YbL9VlFW5cncG7mmvO_-2tcSs9KdV9Hf7wF4zZatuCNqhacGUBYAtu-ILsCy2XxlNtZBoTpPgShZpH6awuK2REw4fIo0fsfflYY4LCiyg9ao9XLYeMppYY06JRvsYYD2Y0Ne8ZoOe665EfezGEcH2NhPrxvQj-5KUtv89txZQcFPvUqtNmJ-4dVNsMZmYBfrCxoJQ</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/branding/BrandingRequestList-pOST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Branding Request List1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/BrandingRequestList?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/api/ClaimManagement/v1/branding/BrandingRequestList?tenantId=acehardware&amp;limit=12&amp;searchText=qw</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/branding/BrandingRequestListStatus" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/branding/BrandingRequestListStatus</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Branding Request List Status1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/BrandingRequestListStatus?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Branding/BrandingListCount--POST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/BrandingListCount" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/BrandingListCount?tenantId=achardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Branding/BrandingListAdvancedSearchData-GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BrandingListAdvancedSearchData" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/BrandingListAdvancedSearchData?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/branding/SaveApprover" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/branding/SaveApprover?autoApprove=true</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Branding_Save Approver1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;BrandingId&quot;: &quot;${__BeanShell(bsh.shared.BPAid)}&quot;,&#xd;
  &quot;ProcessInstanceId&quot;: &quot;${__BeanShell(bsh.shared.BPAProcessInstanceId.get(${a}),)}&quot;,&#xd;
  &quot;ApproverId&quot;: &quot;3512177&quot;,&#xd;
  &quot;ApproverName&quot;: &quot;Test1&quot; &#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/SaveApprover?autoApprove=true&amp;tenantId=aceharware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">rover?autoAppro</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/branding/GetSchedulerBrandingList" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/branding/GetSchedulerBrandingList</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Scheduler Branding List1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/branding/GetSchedulerBrandingList?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/branding/UpdateScheduledBrandingStatus " enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/branding/UpdateScheduledBrandingStatus?id=12</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Branding Status1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[{&#xd;
&quot;_id&quot; :&#xd;
&#xd;
{ &quot;$oid&quot;: &quot;${__BeanShell(bsh.shared.BPAid)}&quot; },&#xd;
&quot;BrandingRequestStatusName&quot;: &quot;Closed&quot;,&#xd;
&quot;ModifiedByUserId&quot; : &quot;4038964&quot;,&#xd;
&quot;TenantId&quot; : &quot;acehardware&quot;&#xd;
&#xd;
}]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/branding/UpdateScheduledBrandingStatus?id=${__BeanShell(bsh.shared.BPAid)}&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/branding/GetLMEForBranding" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/branding/GetLMEForBranding?tenantId=acehardware</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get LME for Branding1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/GetLMEForBranding?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Claim API" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>true</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/branding/GetBrandingRequestsForDashboard-GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519996954000</longProp>
        <longProp name="ThreadGroup.end_time">1519996954000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/SaveAutoClaim</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetBrandingRequestsForDashboard1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/branding/GetBrandingRequestsForDashboard?tenantId=acehardware&amp;limit=20&amp;searchText=00020&amp;sortBy=BrandingRequestStatusName&amp;sortOrder=1</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will create Claim</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/branding/SendBrandingNotification-GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519996954000</longProp>
        <longProp name="ThreadGroup.end_time">1519996954000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/SaveAutoClaim</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SendBrandingNotification1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/SendBrandingNotification?brandingRequestId=${__BeanShell(bsh.shared.BPAid)}&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will create Claim</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Branding/UpdateBrandingPreApprovalStatus-GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519996954000</longProp>
        <longProp name="ThreadGroup.end_time">1519996954000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/SaveAutoClaim</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UpdateBrandingPreApprovalStatus" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/UpdateBrandingPreApprovalStatus?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will create Claim</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/saveAndProcessClaim-POST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519996954000</longProp>
        <longProp name="ThreadGroup.end_time">1519996954000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 1+---LME_PendingReview" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;${__BeanShell(bsh.shared.LMEid.get(${a}),)}&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;${__BeanShell(bsh.shared.MFAid.get(${a}),)}&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;${__BeanShell(bsh.shared.Programname.get(${a}),)}&quot;,&#xd;
  &quot;LMEName&quot;: &quot;(HQ) John W Weiss Ace Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Digital and Social Media&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;new claim from API&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Digital and Social Media&quot;,&#xd;
    &quot;RmbPercentage&quot;: 10,&#xd;
    &quot;Description&quot;: &quot;1. Image of the Creative (Screenshot of the ad from the system or mobile).&lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 55,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-03-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-13T18:30:00.000Z&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;2000000000&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;100 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;40&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;40&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&quot;,&#xd;
  &quot;ClaimStatusName&quot;: &quot;Approved&quot;,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;Newinvoice 123&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">qa01asp02bmi.qa01aspe01.p.azurewebsites.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/saveAndProcessClaim?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will create Claim</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager_LME" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.tokenlme)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">lmeclaimid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..*</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">byte [] samplerdataobj = ctx.getPreviousResult().getResponseData();
String lclaimid = new String(samplerdataobj);
log.info(&quot;=======&gt;&quot;+lclaimid);
String lnewclaimid= lclaimid.replaceAll(&quot;^\&quot;|\&quot;$&quot;, &quot;&quot;);
log.info(&quot;newclaimid========&gt;&quot;+lnewclaimid);
bsh.shared.lnewclaimid=lnewclaimid;
log.info(&quot;=======&gt;&quot;+bsh.shared.lnewclaimid);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 1+---Approved" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ClaimReference&quot;: &quot;Claim Reference&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 80,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Paid Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 0,&#xd;
    &quot;ErrorCode&quot;: 0,&#xd;
    &quot;ActivityType&quot;: &quot;&quot;,&#xd;
    &quot;ClaimedAmount&quot;: 0,&#xd;
    &quot;ClaimCount&quot;: 0,&#xd;
    &quot;Activity&quot;: null&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2019-06-30T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2019-07-30T18:30:00.000Z&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;100&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;80 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;80.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;10&quot;,&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&quot;&#xd;
  },&#xd;
  &quot;LMEId&quot;: &quot;${__BeanShell(bsh.shared.lmeid1Id.get(${a}),)}&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;${__BeanShell(bsh.shared.mfaid1Id.get(${a}),)}&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;${__BeanShell(bsh.shared.Programname.get(${a}),)}&quot;,&#xd;
  &quot;ClientId&quot;: &quot;&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&quot;,&#xd;
  &quot;ClaimStatusName&quot;: &quot;Review&quot;,&#xd;
  &quot;TenantId&quot;: &quot;${TenantId}&quot;,&#xd;
  &quot;Comment&quot;: &quot;Claim Creation from API&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;SampleText.txt&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    {&#xd;
      &quot;InvoiceNo&quot;: &quot;in&quot;,&#xd;
      &quot;InvoiceDate&quot;: &quot;&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">//gateway.kube01-i.qa01.brandmuscle.net/api/cfm-claim-management/v2/claims</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/saveAndProcessClaim?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will create Claim</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager-Admin" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager_LME" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.tokenlme)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">lmeclaimid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..*</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">byte [] samplerdataobj = ctx.getPreviousResult().getResponseData();
String lclaimid = new String(samplerdataobj);
log.info(&quot;=======&gt;&quot;+lclaimid);
String lnewclaimid= lclaimid.replaceAll(&quot;^\&quot;|\&quot;$&quot;, &quot;&quot;);
log.info(&quot;newclaimid========&gt;&quot;+lnewclaimid);
bsh.shared.lnewclaimid=lnewclaimid;
log.info(&quot;=======&gt;&quot;+bsh.shared.lnewclaimid);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 2-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a9785962a97e1115c8e7305Invalid&quot; // invalid value&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;07204&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;57452145-8154-4a0d-b103-5fbb3d8bc44f&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;PY-Prog1-March1&quot;,&#xd;
  &quot;LMEName&quot;: &quot;Meanley &amp; Son Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 20,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 50,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-02-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-06T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;400&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;20 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;40.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;10&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a9785962a97e1115c8e7305&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;invoice 123&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Create a Claim for a program which has not been accrued (No Avialable amount)</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 3-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a9785962a97e1115c8e7305Invalid&quot; // invalid value&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;07204&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;57452145-8154-4a0d-b103-5fbb3d8bc44f&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;PY-Prog1-March1&quot;,&#xd;
  &quot;LMEName&quot;: &quot;Meanley &amp; Son Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 20,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 50,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-02-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-06T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;400&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;20 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;40.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;10&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a9785962a97e1115c8e7305&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;invoice 123&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Don&apos;t pass or Pass Invalid value for Mandatory fields like Program Id</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 4-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a9785962a97e1115c8e7305&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;07204&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;57452145-8154-4a0d-b103-5fbb3d8bc44f&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;PY-Prog1-March1&quot;,&#xd;
  &quot;LMEName&quot;: &quot;Meanley &amp; Son Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 20,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 50,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-06-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-06T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;400&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;20 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;40.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;10&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a9785962a97e1115c8e7305&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;invoice 123&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass End date is less than start date</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 5-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a9785962a97e1115c8e7305&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;07204&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;57452145-8154-4a0d-b103-5fbb3d8bc44f&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;PY-Prog1-March1&quot;,&#xd;
  &quot;LMEName&quot;: &quot;Meanley &amp; Son Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 20,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 50,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-06-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-06T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;400&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;20 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;40.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a9785962a97e1115c8e7305&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;invoice 123&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Don&apos;t pass Requested Amount value</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 6-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a9785962a97e1115c8e7305&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;07204&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;57452145-8154-4a0d-b103-5fbb3d8bc44f&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;PY-Prog1-March1&quot;,&#xd;
  &quot;LMEName&quot;: &quot;Meanley &amp; Son Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 20,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 50,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-06-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-06T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;400&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;20 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;40.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a9785962a97e1115c8e7305&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;&quot; // no file upload&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;invoice 123&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Don&apos;t Attach any supporting document</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 7-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a9785962a97e1115c8e7305&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;07204&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;57452145-8154-4a0d-b103-5fbb3d8bc44f&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;PY-Prog1-March1&quot;,&#xd;
  &quot;LMEName&quot;: &quot;Meanley &amp; Son Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 20,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 50,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-06-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-06T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;400&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;20 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;40.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a9785962a97e1115c8e7305&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;&quot; // No invoice &#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Don&apos;t pass Invoice value</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 1+---Approved_No_Parameters" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ClaimReference&quot;: &quot;claim from API&quot;,&#xd;
  &quot;Campaign&quot;: &quot;Aug BMSM 2019&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 100,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt;2. Copy of paid Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 0,&#xd;
    &quot;ErrorCode&quot;: 0,&#xd;
    &quot;ActivityType&quot;: &quot;&quot;,&#xd;
    &quot;ClaimedAmount&quot;: 0,&#xd;
    &quot;ClaimCount&quot;: 0,&#xd;
    &quot;Activity&quot;: &quot;DirectMail&quot;&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2019-07-31T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2019-08-27T18:30:00.000Z&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;100 %&quot;,&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5d4017e2bc97cc000112a028&quot;&#xd;
  },&#xd;
  &quot;LMEId&quot;: &quot;mKxBVvbWtFyoa5nsobHiWA&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;6389498b-99e7-4d9b-a482-0dea048b350e&quot;,&#xd;
  &quot;ClientId&quot;: &quot;466191294c2c34bebef7455c64806c59a0e8a2d6&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;Ben Bridge check&quot;,&#xd;
  &quot;CurrencyConversionRate&quot;: 1,&#xd;
  &quot;TotalActivityCost&quot;: &quot;5000.00&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;5000.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;600.00&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5d4017e2bc97cc000112a028&quot;,&#xd;
  &quot;ClaimStatusName&quot;: &quot;Approved&quot;,&#xd;
  &quot;TenantId&quot;: &quot;pandora&quot;,&#xd;
  &quot;Comment&quot;: &quot;&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;No&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM-sample.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwbpandora&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    {&#xd;
      &quot;InvoiceNo&quot;: &quot;in&quot;,&#xd;
      &quot;InvoiceDate&quot;: &quot;2019-08-20T18:30:00.000Z&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api-i.qa.brandmuscle.net/api/cfm-claim-management/v3/claims</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/saveAndProcessClaim?tenantId=pandora</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will create Claim</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager-Admin" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IkVDMDkxMzZEM0QwRjgzQkNBRDc0NzFGREEzQzI4NjM1N0I4QzA3QTciLCJ0eXAiOiJKV1QiLCJ4NXQiOiI3QWtUYlQwUGc3eXRkSEg5bzhLR05YdU1CNmMifQ.eyJuYmYiOjE1NjUzNDU5OTIsImV4cCI6MTU2NTM1MzE5MiwiaXNzIjoiaHR0cHM6Ly9wYW5kb3JhLnY1cWEuYnJhbmRtdXNjbGUubmV0L2FwaS92NW9pZGMvdjEiLCJhdWQiOlsiaHR0cHM6Ly9wYW5kb3JhLnY1cWEuYnJhbmRtdXNjbGUubmV0L2FwaS92NW9pZGMvdjEvcmVzb3VyY2VzIiwiYnJhbmRtdXNjbGVhcGkiXSwiY2xpZW50X2lkIjoiQ0ZNIiwic3ViIjoiNTEwMDU4MyIsImF1dGhfdGltZSI6MTU2NTM0NTk5MiwiaWRwIjoibG9jYWwiLCJibWkuYnVzaW5lc3N1bml0aWQiOiI2MTUiLCJibWkuYnVzaW5lc3N1bml0c3lzdGVtbmFtZSI6InBhbmRvcmEiLCJibWkudXNlcmlkIjoiNTA2NzQ3OCIsImJtaS51c2VybmFtZSI6IlVBVF9BZG1pbiIsImJtaS5maXJzdG5hbWUiOiJKb2huIiwiYm1pLmxhc3RuYW1lIjoiU21pdGgiLCJibWkuaXNpbnRlcm5hbCI6IkZhbHNlIiwiYm1pLnRpdGxlIjoiIiwiYm1pLmVtYWlsIjoic2tsZWluZGllbnN0QGJyYW5kbXVzY2xlLmNvbSIsImJtaS50ZWxlcGhvbmUiOiIiLCJibWkuYWRkcmVzcyI6IjEyMzQgTWFpbiBTdC4iLCJibWkuYWRkcmVzczIiOiIiLCJibWkuY2l0eSI6IkNsZXZlbGFuZCIsImJtaS5zdGF0ZSI6Ik9IIiwiYm1pLnppcGNvZGUiOiI0NDExNCIsImJtaS5jb3VudHJ5IjoiVVNBIiwiYm1pLmxvY2FsZSI6IkVOIiwianRpIjoiNDEzZDUwMTYzM2I5M2MxYTJiZDdlODA5ZTE0YTU3MTkiLCJzY29wZSI6WyJvcGVuaWQiLCJidXNpbmVzc3VuaXQiLCJwcm9maWxlIl0sImFtciI6WyJwd2QiXX0.OVgTOUAJDRDYX55u1VsNgeAQ7D-A733YpNCq0gNdS787GPRTXNZUsZ0sFyyF27J0Pf6_0HMNw7HXrr4AFsHzNLeDaCDwXJA7ey1DdJDBn_F2VMfekSZfc9x_3uzx6bz9efr1QzOE3twCf1pyKautw96S_ZPRs0hXPCea2spDQlrNx3Au6yt45ZDb2H4U1912iKMog1kBjXSP0XObs0TIOEUlD22emjDMqEKWTOKkB0h1jCYYCq9GgIdB8kTH6JoHDwHVMjXF0hLYV4DmXbmnNAousKDS1fyWdGh1K--MoEY07IxH3qfnmx1JouYUcFLwv4xWJ9YiPHvlEvaaQxliVQ</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager_LME" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IkVDMDkxMzZEM0QwRjgzQkNBRDc0NzFGREEzQzI4NjM1N0I4QzA3QTciLCJ0eXAiOiJKV1QiLCJ4NXQiOiI3QWtUYlQwUGc3eXRkSEg5bzhLR05YdU1CNmMifQ.eyJuYmYiOjE1NjUxNzA2MTAsImV4cCI6MTU2NTE3NzgxMCwiaXNzIjoiaHR0cHM6Ly9hY2VoYXJkd2FyZS52NXFhLmJyYW5kbXVzY2xlLm5ldC9hcGkvdjVvaWRjL3YxIiwiYXVkIjpbImh0dHBzOi8vYWNlaGFyZHdhcmUudjVxYS5icmFuZG11c2NsZS5uZXQvYXBpL3Y1b2lkYy92MS9yZXNvdXJjZXMiLCJicmFuZG11c2NsZWFwaSJdLCJjbGllbnRfaWQiOiJDRk0iLCJzdWIiOiI0MzE4NzE3IiwiYXV0aF90aW1lIjoxNTY1MTcwNjA5LCJpZHAiOiJsb2NhbCIsImJtaS5idXNpbmVzc3VuaXRpZCI6IjU2OSIsImJtaS5idXNpbmVzc3VuaXRzeXN0ZW1uYW1lIjoiYWNlaGFyZHdhcmUiLCJibWkudXNlcmlkIjoiNDAzODk2OCIsImJtaS51c2VybmFtZSI6IlVBVF9SZXRhaWxFbXBsb3llZSIsImJtaS5maXJzdG5hbWUiOiJKb2huIiwiYm1pLmxhc3RuYW1lIjoiU21pdGgiLCJibWkuaXNpbnRlcm5hbCI6IkZhbHNlIiwiYm1pLnRpdGxlIjoiIiwiYm1pLmFkZHJlc3MiOiIxMjM0IE1haW4gU3QuLCBTdWl0ZSAxMDAiLCJibWkuYWRkcmVzczIiOiJTdWl0ZSAxMDAiLCJibWkuY2l0eSI6IkNsZXZlbGFuZCIsImJtaS5jb3VudHJ5IjoiVVNBIiwiYm1pLnN0YXRlIjoiT0giLCJibWkuemlwY29kZSI6IjQ0MDk1IiwiYm1pLnRlbGVwaG9uZSI6IjIxNjg3NjIwMTkiLCJibWkuZW1haWwiOiIiLCJibWkubG9jYWxlIjoiRU4iLCJibWkucmlnaHQiOlsiQWRkcmVzc0NyZWF0ZSIsIkFkZHJlc3NEZWxldGVNYW5hZ2VkIiwiQWRkcmVzc0RlbGV0ZU93bmVkIiwiQWRkcmVzc0VkaXRNYW5hZ2VkIiwiQWRkcmVzc0VkaXRPd25lZCIsIkFkZHJlc3NWaWV3TWFuYWdlZCIsIkFsbG93QWRkVG9Bc3NldEZvbGRlciIsIkFsbG93T3JkZXJBbmRQYXkiLCJBbGxvd09yZGVyV2l0aG91dFBheW1lbnQiLCJDYW5CZUVtdWxhdGVkIiwiQ2FuQ2hhbmdlUGFzc3dvcmQiLCJDYW5Dcm9wQWxsVXBsb2FkZWRJbWFnZXMiLCJDYW5Dcm9wVGVtcGxhdGVJbWFnZXMiLCJDaGFuZ2VMb2NhdGlvblN0YXR1cyIsIkNyZWF0ZV9NYW5hZ2VfQWRkcmVzc0Jvb2siLCJDcmVhdGVfT3duX0FkZHJlc3NCb29rIiwiQ3JlYXRlX093bl9BZGRyZXNzQm9va19Mb2NhdGlvbiIsIkNyZWF0ZU5ld0FkTWF0ZXJpYWwiLCJDcmVhdGVPd25lZCIsIkNyZWF0ZVVzZXJzIiwiRGVsZXRlX0FsbF9BZGRyZXNzQm9vayIsIkRlbGV0ZV9BbGxfQWRkcmVzc0Jvb2tfTG9jYXRpb24iLCJEZWxldGVfTWFuYWdlX0FkZHJlc3NCb29rIiwiRGVsZXRlX01hbmFnZV9BZGRyZXNzQm9va19Mb2NhdGlvbiIsIkRlbGV0ZV9Pd25fQWRkcmVzc0Jvb2siLCJEZWxldGVfT3duX0FkZHJlc3NCb29rX0xvY2F0aW9uIiwiRGVsZXRlQWRNYXRlcmlhbCIsIkRlbGV0ZURlbGl2ZXJ5UmVxdWVzdHMiLCJEZWxldGVPd25lZCIsIkRvd25sb2FkQXNzZXRzIiwiRWRpdF9BbGxfQWRkcmVzc0Jvb2siLCJFZGl0X0FsbF9BZGRyZXNzQm9va19Mb2NhdGlvbiIsIkVkaXRfTWFuYWdlX0FkZHJlc3NCb29rIiwiRWRpdF9Pd25fQWRkcmVzc0Jvb2siLCJFZGl0QWRNYXRlcmlhbCIsIkVkaXRBbGxVc2VyR3JvdXBzIiwiRWRpdEFsbFVzZXJNYW5hZ2VycyIsIkVkaXRNYW5hZ2VkVXNlck1hbmFnZXJzIiwiRWRpdE93bmVkIiwiRW1haWxfQ3VzdG9taXplX1RlbXBsYXRlcyIsIkVtYWlsX01haWxpbmdMaXN0X1VwbG9hZE1haWxpbmdMaXN0IiwiRW1haWxfUmVwb3J0cyIsIkVtYWlsX1NlbmRfRW1haWxzIiwiRW1haWxfVXBsb2FkX0VtYWlsSWRsaXN0IiwiRU5URVJQUklTRUFETUlOIiwiSFRNTFNFQVJDSExPQ0FUSU9OUyIsIkhUTUxWSUVXT1dORUQiLCJMb2NhdGlvbkltYWdlQXBwcm92YWxOb3RSZXF1aXJlZCIsIlBhc3N0aHJvdWdoVXNlckNyZWF0aW9uIiwiUHJpbnRfTWFpbGluZ0xpc3RfVVNBRGF0YSIsIlNFVEZVTEZJTExNRU5UU0NIRURVTEUiLCJTTVNfTWFpbGluZ0xpc3RfUHViTGlzdCIsIlVwbG9hZEltYWdlc1RvTG9jYXRpb24iLCJVcGxvYWRNYWlsaW5nTGlzdEZvckRpcmVjdG1haWwiLCJUaGlyZFBhcnR5Rm9yRGlyZWN0bWFpbCIsIlVzZUNCUGF5bWVudCIsIlVzZUNDUGF5bWVudCIsIlVzZU9ubGluZUNvb3AiLCJWaWV3X0FsbF9BZGRyZXNzQm9va19Mb2NhdGlvbiIsIlZpZXdfTWFuYWdlX0FkZHJlc3NCb29rIiwiVmlld19NYW5hZ2VfUmVmX0NvbnRhY3QiLCJWaWV3X093bl9BZGRyZXNzQm9vayIsIlZpZXdfT3duX0FkZHJlc3NCb29rX0xvY2F0aW9uIiwiVmlld0FsbFVzZXJHcm91cHMiLCJWaWV3QWxsVXNlck1hbmFnZXJzIiwiVmlld0NyZWF0aXZlcyIsIlZpZXdEZWxpdmVyeU9wdGlvbnMiLCJWaWV3RGVsaXZlcnlSZXF1ZXN0cyIsIlZpZXdEb3dubG9hZEhpc3RvcnkiLCJWaWV3RW1haWxXb3JrQ2VudGVyIiwiVmlld0dyb3VwcyIsIlZpZXdKUEciLCJWaWV3TG93UmVzUERGIiwiVmlld01hbmFnZWRVc2VyR3JvdXBzIiwiVmlld01hbmFnZWRVc2VyTWFuYWdlcnMiLCJWaWV3TWFuYWdlZFVzZXJzRG93bmxvYWRIaXN0b3J5IiwiVmlld093bmVkIiwicHJlYXBwcm92YWwtdmlldyIsInN0YXJ0LXdvcmtmbG93IiwiYnJhbmRpbmctZGVsZXRlIiwiY2xhaW0tdmlldyIsInByZWFwcHJvdmFsLWNyZWF0ZSIsImNsYWltLWNyZWF0ZSIsInByZWFwcHJvdmFsLWRlbGV0ZSIsImNsYWltLWRlbGV0ZSIsImJyYW5kaW5nLWNyZWF0ZSIsImJyYW5kaW5nLXZpZXciLCJwcm9ncmFtLXZpZXciLCJhY2NvdW50LXZpZXciLCJ2aWV3LWVkcHMiLCJzbmFwc2hvdC12aWV3Il0sImp0aSI6IjJkYTNmZmQ0YWI2NGQ3Yjg4OWVmZDk1YjNlNzgxYTM1Iiwic2NvcGUiOlsib3BlbmlkIiwiYnVzaW5lc3N1bml0IiwicHJvZmlsZSIsInJvbGVzIl0sImFtciI6WyJwd2QiXX0.b13pmgMQADcoSt0IODQMa6PRCIDsm2B8Cy8Rgk9-dQmOwX_Oje5osHaLwaYgkFpc8LcYvE_YiZcM-kZJUVsw7fkpbRLKCTxnlEHSeAEBmcwTGNQTxz6n_hOkJkfppTBuP_XmIawnUvOmRrCmta3KrZdmFZD6g1mxfpoQ6K5_1K1ERAWOavxkeHjFVmXQhf98MCYSVHuNYcOGZcrNoNrF1Lsjpc-Q7CuTRvQJtrpyqEqONOaJ4AttIjgblKgvCRrEPFmg85jELNQTuH1KRLwu2fw5lqvOsb3pc8Td-AEr0mjqdV697X-_Mbahdvi6ZcGS0HxUfUOMXCae06fsRp6jkA</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">lmeclaimid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..*</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">byte [] samplerdataobj = ctx.getPreviousResult().getResponseData();
String lclaimid = new String(samplerdataobj);
log.info(&quot;=======&gt;&quot;+lclaimid);
String lnewclaimid= lclaimid.replaceAll(&quot;^\&quot;|\&quot;$&quot;, &quot;&quot;);
log.info(&quot;newclaimid========&gt;&quot;+lnewclaimid);
bsh.shared.lnewclaimid=lnewclaimid;
log.info(&quot;=======&gt;&quot;+bsh.shared.lnewclaimid);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/ClaimList-POST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519996895000</longProp>
        <longProp name="ThreadGroup.end_time">1519996895000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/ClaimList?statusList=cds&amp;programId=xc%20x&amp;period=xzcz&amp;startDate=zxczx&amp;endDate=zxcxzx&amp;tenantId=xcv&amp;limit=vbn</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim List" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">gateway.kube01-i.qa01.brandmuscle.net/api/cfm-claim-management/v2/claims</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ClaimList?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will give List of Claims </stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim List2-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="statusList" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">ReviewInvalid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">statusList</stringProp>
              </elementProp>
              <elementProp name="programId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__BeanShell(bsh.shared.users.get(${a}),)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">programId</stringProp>
              </elementProp>
              <elementProp name="period" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">30</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">period</stringProp>
              </elementProp>
              <elementProp name="startDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">null</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">startDate</stringProp>
              </elementProp>
              <elementProp name="endDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">null</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">endDate</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Jacksonhewitt</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
              <elementProp name="limit" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">20</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">limit</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/ClaimList</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass statusList as invalid value</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim List3-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="statusList" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Review</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">statusList</stringProp>
              </elementProp>
              <elementProp name="programId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">5a9785962a97e1115c8e7305 Invalid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">programId</stringProp>
              </elementProp>
              <elementProp name="period" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">30</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">period</stringProp>
              </elementProp>
              <elementProp name="startDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">null</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">startDate</stringProp>
              </elementProp>
              <elementProp name="endDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">null</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">endDate</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Jacksonhewitt</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
              <elementProp name="limit" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">20</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">limit</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/ClaimList</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass prograId as Invalid value</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim List4-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="statusList" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Review</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">statusList</stringProp>
              </elementProp>
              <elementProp name="programId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">5a9785962a97e1115c8e7305</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">programId</stringProp>
              </elementProp>
              <elementProp name="period" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">30Invalid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">period</stringProp>
              </elementProp>
              <elementProp name="startDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">null</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">startDate</stringProp>
              </elementProp>
              <elementProp name="endDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">null</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">endDate</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Jacksonhewitt</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
              <elementProp name="limit" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">20</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">limit</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/ClaimList</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass Period as Invalid value</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim List5-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="statusList" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Review</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">statusList</stringProp>
              </elementProp>
              <elementProp name="programId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">5a9785962a97e1115c8e7305</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">programId</stringProp>
              </elementProp>
              <elementProp name="period" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">30</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">period</stringProp>
              </elementProp>
              <elementProp name="startDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">nullInvalid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">startDate</stringProp>
              </elementProp>
              <elementProp name="endDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">null</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">endDate</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Jacksonhewitt</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
              <elementProp name="limit" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">20</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">limit</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/ClaimList</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass startdate as Invalid value</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim List6-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="statusList" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Review</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">statusList</stringProp>
              </elementProp>
              <elementProp name="programId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">5a9785962a97e1115c8e7305</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">programId</stringProp>
              </elementProp>
              <elementProp name="period" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">30</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">period</stringProp>
              </elementProp>
              <elementProp name="startDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">null</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">startDate</stringProp>
              </elementProp>
              <elementProp name="endDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">nullinvalid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">endDate</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Jacksonhewitt</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
              <elementProp name="limit" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">20</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">limit</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/ClaimList</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass end date as Invalid value</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim List7-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="statusList" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Review</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">statusList</stringProp>
              </elementProp>
              <elementProp name="programId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">5a9785962a97e1115c8e7305</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">programId</stringProp>
              </elementProp>
              <elementProp name="period" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">30</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">period</stringProp>
              </elementProp>
              <elementProp name="startDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">null</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">startDate</stringProp>
              </elementProp>
              <elementProp name="endDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">null</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">endDate</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Jacksonhewitt</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
              <elementProp name="limit" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">20</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">limit</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/ClaimList</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass limit as Invalid value</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim List8-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="statusList" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Review</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">statusList</stringProp>
              </elementProp>
              <elementProp name="programId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">5a9785962a97e1115c8e7305</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">programId</stringProp>
              </elementProp>
              <elementProp name="period" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">30</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">period</stringProp>
              </elementProp>
              <elementProp name="startDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">null</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">startDate</stringProp>
              </elementProp>
              <elementProp name="endDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">null</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">endDate</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">JacksonhewittInvalid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
              <elementProp name="limit" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">20</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">limit</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/ClaimList</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass tenantId as Invalid value</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/ClaimListCount-POST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519996895000</longProp>
        <longProp name="ThreadGroup.end_time">1519996895000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/ClaimList?statusList=cds&amp;programId=xc%20x&amp;period=xzcz&amp;startDate=zxczx&amp;endDate=zxcxzx&amp;tenantId=xcv&amp;limit=vbn</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim List Count" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">gateway.kube01-i.qa01.brandmuscle.net/api/cfm-claim-management/v2/claims</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ClaimListCount?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will give List of Claims </stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/ClaimListAdvancedSearchData--POST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519996895000</longProp>
        <longProp name="ThreadGroup.end_time">1519996895000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/ClaimList?statusList=cds&amp;programId=xc%20x&amp;period=xzcz&amp;startDate=zxczx&amp;endDate=zxcxzx&amp;tenantId=xcv&amp;limit=vbn</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimListAdvancedSearchData" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">gateway.kube01-i.qa01.brandmuscle.net/api/cfm-claim-management/v2/claims</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ClaimListAdvancedSearchData?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will give List of Claims </stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/GetClaimDetailById-GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519996946000</longProp>
        <longProp name="ThreadGroup.end_time">1519996946000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/GetClaimDetailById?claimId=yedt&amp;tenantId=3238e3yuhdj</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Detail 1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="claimId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__BeanShell(bsh.shared.lnewclaimid)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">claimId</stringProp>
              </elementProp>
              <elementProp name="isEditClaim" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">isEditClaim</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">acehardware</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/cfm-claim-management/v2/claims/GetClaimDetailById</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will give Claim Details using ClaimId</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">clnumid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..ClaimId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${clnumid_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${clnumid_1}&quot;);
String[] clnumidobj = vars.get(&quot;clnumid_ALL&quot;).split(&quot;,&quot;); 
int len = clnumidobj.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList ClaimNumId = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	ClaimNumId.add(clnumidobj[i]);
}
bsh.shared.ClaimNumId=ClaimNumId;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">prcsid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..ProcessInstanceId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${prcsid_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${prcsid_1}&quot;);
String[] prcsidobj = vars.get(&quot;prcsid_ALL&quot;).split(&quot;,&quot;); 
int len = prcsidobj.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList ProcessInstanceId = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	ProcessInstanceId.add(prcsidobj[i]);
}
bsh.shared.ProcessInstanceId=ProcessInstanceId;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">claid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..ClaimId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${claid_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${claid_1}&quot;);
String[] claimrefid = vars.get(&quot;claid_ALL&quot;).split(&quot;,&quot;); 
int len = claimrefid.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList ClaimreferId = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	ClaimreferId.add(claimrefid[i]);
}
bsh.shared.ClaimreferId=ClaimreferId;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Detail 2-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="claimId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">5a967fae2a97e02ebcc45081Invalid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">claimId</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">acehardware</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/GetClaimDetailById</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">NegativeScenario-Pass Claim Id as Invalid</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Detail 3-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="claimId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">5a967fae2a97e02ebcc45081</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">claimId</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">acehardwareInvalid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/GetClaimDetailById</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">NegativeScenario-Pass tenantId as Invalid</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/UpdateClaimOnReview-POST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519997013000</longProp>
        <longProp name="ThreadGroup.end_time">1519997013000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/UpdateClaimOnReview</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Claim on Review1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;_id&quot;: {&#xd;
    &quot;$oid&quot;: &quot;${__BeanShell(bsh.shared.lnewclaimid)}&quot;&#xd;
  },&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;${__BeanShell(bsh.shared.ClaimNumId.get(${a}),)}&quot;,&#xd;
  &quot;LMEId&quot;: &quot;${__BeanShell(bsh.shared.LMEid.get(${a}),)}&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;${__BeanShell(bsh.shared.MFAid.get(${a}),)}&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;${__BeanShell(bsh.shared.Programname.get(${a}),)}&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Digital and Social Media&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;new claim from API&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Digital and Social Media&quot;,&#xd;
    &quot;RmbPercentage&quot;: 50,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 600,&#xd;
    &quot;ErrorCode&quot;: 0&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-03-07T18:30:00Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-03-29T18:30:00Z&quot;,&#xd;
  &quot;TotalActivityCost&quot;: 100,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;50 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;50.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: 50,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&quot;,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;New Microsoft Word Document.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;test&quot;&#xd;
  ],&#xd;
  &quot;ModifiedByUserId&quot;: &quot;3512177&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;ModifiedDate&quot;: {&#xd;
    &quot;$date&quot;: 1521445094388&#xd;
  },&#xd;
  &quot;CreatedDate&quot;: {&#xd;
    &quot;$date&quot;: 1521445094388&#xd;
  },&#xd;
  &quot;UnprocessedAmount&quot;: &quot;0.0&quot;,&#xd;
  &quot;ApproverId&quot;: &quot;3512177&quot;,&#xd;
  &quot;ProcessInstanceId&quot;: &quot;${__BeanShell(bsh.shared.ProcessInstanceId.get(${a}),)}&quot;,&#xd;
  &quot;LMEName&quot;: &quot;${__BeanShell(bsh.shared.LMEName.get(${a}),)}&quot;,&#xd;
  &quot;CreatedBy&quot;: &quot;APete1&quot;,&#xd;
  &quot;ApproverName&quot;: &quot;Test1&quot;,&#xd;
  &quot;ModifiedBy&quot;: &quot;Test1&quot;,&#xd;
  &quot;Comment&quot;: &quot;testing&quot;,&#xd;
  &quot;ReviewCodes&quot;: [&#xd;
    1,&#xd;
    2&#xd;
  ],&#xd;
  &quot;ClaimStatus&quot;: null,&#xd;
  &quot;ClaimStatusName&quot;: &quot;Request&quot;,&#xd;
  &quot;ApprovedAmount&quot;: 50&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-claim-management/v2/claims/UpdateClaimOnReview?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will update a claim on Review</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="0"></stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Claim on Review2-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#xd;
{&#xd;
	//{&quot;_id&quot;: { &quot;$oid&quot;: &quot;5aa7677111257131fcf20a7a&quot;},&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;Invalid Id&quot; // Invalid Id&#xd;
  },&#xd;
  &quot;ClaimId&quot;: 299,&#xd;
  &quot;LMEId&quot;: &quot;o4KjXpWX1FiV0Jkk6TBqMw&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;3ac66b0e-76f0-43c8-b0d2-737eb276bfa5&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;test-demo-ldm&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;test&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 50,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 689,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-03-06T18:30:00Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-03-29T18:30:00Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;1689&quot;,&#xd;
  &quot;TotalActivityCost&quot;: 200,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;50 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;100.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: 100,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a995cd411256d7aa8ec5584&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;New Microsoft Word Document.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;sdsdf&quot;&#xd;
  ],&#xd;
  &quot;ModifiedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;ModifiedDate&quot;: {&#xd;
    &quot;$date&quot;: 1520920433416&#xd;
  },&#xd;
  &quot;CreatedDate&quot;: {&#xd;
    &quot;$date&quot;: 1520920433416&#xd;
  },&#xd;
  &quot;UnprocessedAmount&quot;: &quot;100&quot;,&#xd;
  &quot;ApproverId&quot;: &quot;3512176&quot;,&#xd;
  &quot;ProcessInstanceId&quot;: &quot;239893&quot;,&#xd;
  &quot;SelectedBrandingProgram&quot;: {&#xd;
    &quot;_id&quot;: {&#xd;
      &quot;$oid&quot;: &quot;5a995cd411256d7aa8ec5584&quot;&#xd;
    },&#xd;
    &quot;ClaimDecisionId&quot;: &quot;24&quot;,&#xd;
    &quot;FundDistributionHierarchy&quot;: &quot;org&quot;,&#xd;
    &quot;HierarchyLevel&quot;: &quot;6,7&quot;,&#xd;
    &quot;Documents&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;New Microsoft Word Document.docx&quot;,&#xd;
        &quot;size&quot;: 11590&#xd;
      }&#xd;
    ],&#xd;
    &quot;ProgramName&quot;: &quot;test-demo-ldm&quot;,&#xd;
    &quot;Description&quot;: &quot;dfgdsfg&quot;,&#xd;
    &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
    &quot;StartDate&quot;: &quot;2018-03-01T18:30:00Z&quot;,&#xd;
    &quot;EndDate&quot;: &quot;2018-03-29T18:30:00Z&quot;,&#xd;
    &quot;ClaimWorkflowId&quot;: 23,&#xd;
    &quot;AllowOverdraft&quot;: &quot;Yes&quot;,&#xd;
    &quot;BrandingRequired&quot;: &quot;Yes&quot;,&#xd;
    &quot;AllowECom&quot;: &quot;yes&quot;,&#xd;
    &quot;AccrualType&quot;: &quot;Flat&quot;,&#xd;
    &quot;FlatAccrualPeriod&quot;: &quot;Annual&quot;,&#xd;
    &quot;RollingAccrualPeriod&quot;: &quot;&quot;,&#xd;
    &quot;LastTransactionDate&quot;: &quot;2018-04-05T18:30:00Z&quot;,&#xd;
    &quot;ExpirationDate&quot;: &quot;2018-04-26T18:30:00Z&quot;,&#xd;
    &quot;Activities&quot;: &quot;[{\&quot;ActivityName\&quot;:\&quot;Direct Mail\&quot;,\&quot;RmbPercentage\&quot;:50.0,\&quot;Description\&quot;:\&quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.\&quot;,\&quot;CappingAmount\&quot;:589.0,\&quot;ErrorCode\&quot;:200}]&quot;,&#xd;
    &quot;FormKey&quot;: &quot;programsace&quot;,&#xd;
    &quot;ProgramStatusId&quot;: 1,&#xd;
    &quot;ModifiedByUserId&quot;: &quot;3512176&quot;,&#xd;
    &quot;CreatedByUserId&quot;: &quot;3512176&quot;,&#xd;
    &quot;ModifiedDate&quot;: {&#xd;
      &quot;$date&quot;: 1520000211921&#xd;
    },&#xd;
    &quot;CreatedDate&quot;: {&#xd;
      &quot;$date&quot;: 1520000211921&#xd;
    },&#xd;
    &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
    &quot;ProgramId&quot;: 40,&#xd;
    &quot;AvailableAmount&quot;: &quot;1589&quot;,&#xd;
    &quot;MarketingFundAccountId&quot;: &quot;3ac66b0e-76f0-43c8-b0d2-737eb276bfa5&quot;,&#xd;
    &quot;LMEName&quot;: &quot;00020 - (HQ) John W Weiss Ace Hardware&quot;,&#xd;
    &quot;AllowCapping&quot;: &quot;yes&quot;&#xd;
  },&#xd;
  &quot;LMEName&quot;: &quot;00020 - (HQ) John W Weiss Ace Hardware&quot;,&#xd;
  &quot;CreatedBy&quot;: &quot;APete1&quot;,&#xd;
  &quot;ApproverName&quot;: &quot;Lorda&quot;,&#xd;
  &quot;ModifiedBy&quot;: &quot;APete1&quot;,&#xd;
  &quot;Comment&quot;: &quot;test&quot;,&#xd;
  &quot;ReviewCodes&quot;: 35,&#xd;
  &quot;ClaimStatus&quot;: null,&#xd;
  &quot;ClaimStatusName&quot;: &quot;Approved&quot;,&#xd;
  &quot;ApprovedAmount&quot;: 200&#xd;
}} &#xd;
 &#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/UpdateClaimOnReview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Don&apos;t pass Program Id</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Claim on Review3-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#xd;
{&#xd;
	//{&quot;_id&quot;: { &quot;$oid&quot;: &quot;5aa7677111257131fcf20a7a&quot;},&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a995cd411256d7aa8ec5584&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: 299,&#xd;
  &quot;LMEId&quot;: &quot;o4KjXpWX1FiV0Jkk6TBqMw&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;3ac66b0e-76f0-43c8-b0d2-737eb276bfa5&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;test-demo-ldm&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;test&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 50,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 689,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-03-06T18:30:00Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-03-29T18:30:00Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;1689&quot;,&#xd;
  &quot;TotalActivityCost&quot;: 200,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;50 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;100.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: 100,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a995cd411256d7aa8ec5584&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;New Microsoft Word Document.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;sdsdf&quot;&#xd;
  ],&#xd;
  &quot;ModifiedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;ModifiedDate&quot;: {&#xd;
    &quot;$date&quot;: 1520920433416&#xd;
  },&#xd;
  &quot;CreatedDate&quot;: {&#xd;
    &quot;$date&quot;: 1520920433416&#xd;
  },&#xd;
  &quot;UnprocessedAmount&quot;: &quot;100&quot;,&#xd;
  &quot;ApproverId&quot;: &quot;Invalid Id&quot;, // Invalid Id&#xd;
  &quot;ProcessInstanceId&quot;: &quot;239893&quot;,&#xd;
  &quot;SelectedBrandingProgram&quot;: {&#xd;
    &quot;_id&quot;: {&#xd;
      &quot;$oid&quot;: &quot;5a995cd411256d7aa8ec5584&quot;&#xd;
    },&#xd;
    &quot;ClaimDecisionId&quot;: &quot;24&quot;,&#xd;
    &quot;FundDistributionHierarchy&quot;: &quot;org&quot;,&#xd;
    &quot;HierarchyLevel&quot;: &quot;6,7&quot;,&#xd;
    &quot;Documents&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;New Microsoft Word Document.docx&quot;,&#xd;
        &quot;size&quot;: 11590&#xd;
      }&#xd;
    ],&#xd;
    &quot;ProgramName&quot;: &quot;test-demo-ldm&quot;,&#xd;
    &quot;Description&quot;: &quot;dfgdsfg&quot;,&#xd;
    &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
    &quot;StartDate&quot;: &quot;2018-03-01T18:30:00Z&quot;,&#xd;
    &quot;EndDate&quot;: &quot;2018-03-29T18:30:00Z&quot;,&#xd;
    &quot;ClaimWorkflowId&quot;: 23,&#xd;
    &quot;AllowOverdraft&quot;: &quot;Yes&quot;,&#xd;
    &quot;BrandingRequired&quot;: &quot;Yes&quot;,&#xd;
    &quot;AllowECom&quot;: &quot;yes&quot;,&#xd;
    &quot;AccrualType&quot;: &quot;Flat&quot;,&#xd;
    &quot;FlatAccrualPeriod&quot;: &quot;Annual&quot;,&#xd;
    &quot;RollingAccrualPeriod&quot;: &quot;&quot;,&#xd;
    &quot;LastTransactionDate&quot;: &quot;2018-04-05T18:30:00Z&quot;,&#xd;
    &quot;ExpirationDate&quot;: &quot;2018-04-26T18:30:00Z&quot;,&#xd;
    &quot;Activities&quot;: &quot;[{\&quot;ActivityName\&quot;:\&quot;Direct Mail\&quot;,\&quot;RmbPercentage\&quot;:50.0,\&quot;Description\&quot;:\&quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.\&quot;,\&quot;CappingAmount\&quot;:589.0,\&quot;ErrorCode\&quot;:200}]&quot;,&#xd;
    &quot;FormKey&quot;: &quot;programsace&quot;,&#xd;
    &quot;ProgramStatusId&quot;: 1,&#xd;
    &quot;ModifiedByUserId&quot;: &quot;3512176&quot;,&#xd;
    &quot;CreatedByUserId&quot;: &quot;3512176&quot;,&#xd;
    &quot;ModifiedDate&quot;: {&#xd;
      &quot;$date&quot;: 1520000211921&#xd;
    },&#xd;
    &quot;CreatedDate&quot;: {&#xd;
      &quot;$date&quot;: 1520000211921&#xd;
    },&#xd;
    &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
    &quot;ProgramId&quot;: 40,&#xd;
    &quot;AvailableAmount&quot;: &quot;1589&quot;,&#xd;
    &quot;MarketingFundAccountId&quot;: &quot;3ac66b0e-76f0-43c8-b0d2-737eb276bfa5&quot;,&#xd;
    &quot;LMEName&quot;: &quot;00020 - (HQ) John W Weiss Ace Hardware&quot;,&#xd;
    &quot;AllowCapping&quot;: &quot;yes&quot;&#xd;
  },&#xd;
  &quot;LMEName&quot;: &quot;00020 - (HQ) John W Weiss Ace Hardware&quot;,&#xd;
  &quot;CreatedBy&quot;: &quot;APete1&quot;,&#xd;
  &quot;ApproverName&quot;: &quot;Lorda&quot;,&#xd;
  &quot;ModifiedBy&quot;: &quot;APete1&quot;,&#xd;
  &quot;Comment&quot;: &quot;test&quot;,&#xd;
  &quot;ReviewCodes&quot;: 35,&#xd;
  &quot;ClaimStatus&quot;: null,&#xd;
  &quot;ClaimStatusName&quot;: &quot;Approved&quot;,&#xd;
  &quot;ApprovedAmount&quot;: 200&#xd;
}} &#xd;
 &#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/UpdateClaimOnReview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Don&apos;t Provide Approver Id</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Claim on Review4-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#xd;
{&#xd;
	//{&quot;_id&quot;: { &quot;$oid&quot;: &quot;5aa7677111257131fcf20a7a&quot;},&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a995cd411256d7aa8ec5584&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: 299,&#xd;
  &quot;LMEId&quot;: &quot;o4KjXpWX1FiV0Jkk6TBqMw&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;3ac66b0e-76f0-43c8-b0d2-737eb276bfa5&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;test-demo-ldm&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;test&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 50,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 689,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-03-06T18:30:00Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-03-29T18:30:00Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;1689&quot;,&#xd;
  &quot;TotalActivityCost&quot;: 200,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;50 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;100.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: 100,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a995cd411256d7aa8ec5584&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;New Microsoft Word Document.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;sdsdf&quot;&#xd;
  ],&#xd;
  &quot;ModifiedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;ModifiedDate&quot;: {&#xd;
    &quot;$date&quot;: 1520920433416&#xd;
  },&#xd;
  &quot;CreatedDate&quot;: {&#xd;
    &quot;$date&quot;: 1520920433416&#xd;
  },&#xd;
  &quot;UnprocessedAmount&quot;: &quot;100&quot;,&#xd;
  &quot;ApproverId&quot;: &quot;3512176&quot;, &#xd;
  &quot;ProcessInstanceId&quot;: &quot;Invalid Id&quot;, // Invalid id&#xd;
  &quot;SelectedBrandingProgram&quot;: {&#xd;
    &quot;_id&quot;: {&#xd;
      &quot;$oid&quot;: &quot;5a995cd411256d7aa8ec5584&quot;&#xd;
    },&#xd;
    &quot;ClaimDecisionId&quot;: &quot;24&quot;,&#xd;
    &quot;FundDistributionHierarchy&quot;: &quot;org&quot;,&#xd;
    &quot;HierarchyLevel&quot;: &quot;6,7&quot;,&#xd;
    &quot;Documents&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;New Microsoft Word Document.docx&quot;,&#xd;
        &quot;size&quot;: 11590&#xd;
      }&#xd;
    ],&#xd;
    &quot;ProgramName&quot;: &quot;test-demo-ldm&quot;,&#xd;
    &quot;Description&quot;: &quot;dfgdsfg&quot;,&#xd;
    &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
    &quot;StartDate&quot;: &quot;2018-03-01T18:30:00Z&quot;,&#xd;
    &quot;EndDate&quot;: &quot;2018-03-29T18:30:00Z&quot;,&#xd;
    &quot;ClaimWorkflowId&quot;: 23,&#xd;
    &quot;AllowOverdraft&quot;: &quot;Yes&quot;,&#xd;
    &quot;BrandingRequired&quot;: &quot;Yes&quot;,&#xd;
    &quot;AllowECom&quot;: &quot;yes&quot;,&#xd;
    &quot;AccrualType&quot;: &quot;Flat&quot;,&#xd;
    &quot;FlatAccrualPeriod&quot;: &quot;Annual&quot;,&#xd;
    &quot;RollingAccrualPeriod&quot;: &quot;&quot;,&#xd;
    &quot;LastTransactionDate&quot;: &quot;2018-04-05T18:30:00Z&quot;,&#xd;
    &quot;ExpirationDate&quot;: &quot;2018-04-26T18:30:00Z&quot;,&#xd;
    &quot;Activities&quot;: &quot;[{\&quot;ActivityName\&quot;:\&quot;Direct Mail\&quot;,\&quot;RmbPercentage\&quot;:50.0,\&quot;Description\&quot;:\&quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.\&quot;,\&quot;CappingAmount\&quot;:589.0,\&quot;ErrorCode\&quot;:200}]&quot;,&#xd;
    &quot;FormKey&quot;: &quot;programsace&quot;,&#xd;
    &quot;ProgramStatusId&quot;: 1,&#xd;
    &quot;ModifiedByUserId&quot;: &quot;3512176&quot;,&#xd;
    &quot;CreatedByUserId&quot;: &quot;3512176&quot;,&#xd;
    &quot;ModifiedDate&quot;: {&#xd;
      &quot;$date&quot;: 1520000211921&#xd;
    },&#xd;
    &quot;CreatedDate&quot;: {&#xd;
      &quot;$date&quot;: 1520000211921&#xd;
    },&#xd;
    &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
    &quot;ProgramId&quot;: 40,&#xd;
    &quot;AvailableAmount&quot;: &quot;1589&quot;,&#xd;
    &quot;MarketingFundAccountId&quot;: &quot;3ac66b0e-76f0-43c8-b0d2-737eb276bfa5&quot;,&#xd;
    &quot;LMEName&quot;: &quot;00020 - (HQ) John W Weiss Ace Hardware&quot;,&#xd;
    &quot;AllowCapping&quot;: &quot;yes&quot;&#xd;
  },&#xd;
  &quot;LMEName&quot;: &quot;00020 - (HQ) John W Weiss Ace Hardware&quot;,&#xd;
  &quot;CreatedBy&quot;: &quot;APete1&quot;,&#xd;
  &quot;ApproverName&quot;: &quot;Lorda&quot;,&#xd;
  &quot;ModifiedBy&quot;: &quot;APete1&quot;,&#xd;
  &quot;Comment&quot;: &quot;test&quot;,&#xd;
  &quot;ReviewCodes&quot;: 35,&#xd;
  &quot;ClaimStatus&quot;: null,&#xd;
  &quot;ClaimStatusName&quot;: &quot;Approved&quot;,&#xd;
  &quot;ApprovedAmount&quot;: 200&#xd;
}} &#xd;
 &#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/UpdateClaimOnReview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario- invalid Process Instance Id</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Claim on Review5-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#xd;
{&#xd;
	//{&quot;_id&quot;: { &quot;$oid&quot;: &quot;5aa7677111257131fcf20a7a&quot;},&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a995cd411256d7aa8ec5584&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: 299,&#xd;
  &quot;LMEId&quot;: &quot;o4KjXpWX1FiV0Jkk6TBqMw&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;3ac66b0e-76f0-43c8-b0d2-737eb276bfa5&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;test-demo-ldm&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;test&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 50,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 689,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-03-06T18:30:00Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-03-29T18:30:00Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;1689&quot;,&#xd;
  &quot;TotalActivityCost&quot;: 200,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;50 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;100.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: 100,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a995cd411256d7aa8ec5584&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;New Microsoft Word Document.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;sdsdf&quot;&#xd;
  ],&#xd;
  &quot;ModifiedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;ModifiedDate&quot;: {&#xd;
    &quot;$date&quot;: 1520920433416&#xd;
  },&#xd;
  &quot;CreatedDate&quot;: {&#xd;
    &quot;$date&quot;: 1520920433416&#xd;
  },&#xd;
  &quot;UnprocessedAmount&quot;: &quot;100&quot;,&#xd;
  &quot;ApproverId&quot;: &quot;3512176&quot;, &#xd;
  &quot;ProcessInstanceId&quot;: &quot;239893&quot;, &#xd;
  &quot;SelectedBrandingProgram&quot;: {&#xd;
    &quot;_id&quot;: {&#xd;
      &quot;$oid&quot;: &quot;5a995cd411256d7aa8ec5584&quot;&#xd;
    },&#xd;
    &quot;ClaimDecisionId&quot;: &quot;24&quot;,&#xd;
    &quot;FundDistributionHierarchy&quot;: &quot;org&quot;,&#xd;
    &quot;HierarchyLevel&quot;: &quot;6,7&quot;,&#xd;
    &quot;Documents&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;New Microsoft Word Document.docx&quot;,&#xd;
        &quot;size&quot;: 11590&#xd;
      }&#xd;
    ],&#xd;
    &quot;ProgramName&quot;: &quot;test-demo-ldm&quot;,&#xd;
    &quot;Description&quot;: &quot;dfgdsfg&quot;,&#xd;
    &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
    &quot;StartDate&quot;: &quot;2018-03-01T18:30:00Z&quot;,&#xd;
    &quot;EndDate&quot;: &quot;2018-03-29T18:30:00Z&quot;,&#xd;
    &quot;ClaimWorkflowId&quot;: 23,&#xd;
    &quot;AllowOverdraft&quot;: &quot;Yes&quot;,&#xd;
    &quot;BrandingRequired&quot;: &quot;Yes&quot;,&#xd;
    &quot;AllowECom&quot;: &quot;yes&quot;,&#xd;
    &quot;AccrualType&quot;: &quot;Flat&quot;,&#xd;
    &quot;FlatAccrualPeriod&quot;: &quot;Annual&quot;,&#xd;
    &quot;RollingAccrualPeriod&quot;: &quot;&quot;,&#xd;
    &quot;LastTransactionDate&quot;: &quot;2018-04-05T18:30:00Z&quot;,&#xd;
    &quot;ExpirationDate&quot;: &quot;2018-04-26T18:30:00Z&quot;,&#xd;
    &quot;Activities&quot;: &quot;[{\&quot;ActivityName\&quot;:\&quot;Direct Mail\&quot;,\&quot;RmbPercentage\&quot;:50.0,\&quot;Description\&quot;:\&quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.\&quot;,\&quot;CappingAmount\&quot;:589.0,\&quot;ErrorCode\&quot;:200}]&quot;,&#xd;
    &quot;FormKey&quot;: &quot;programsace&quot;,&#xd;
    &quot;ProgramStatusId&quot;: 1,&#xd;
    &quot;ModifiedByUserId&quot;: &quot;3512176&quot;,&#xd;
    &quot;CreatedByUserId&quot;: &quot;3512176&quot;,&#xd;
    &quot;ModifiedDate&quot;: {&#xd;
      &quot;$date&quot;: 1520000211921&#xd;
    },&#xd;
    &quot;CreatedDate&quot;: {&#xd;
      &quot;$date&quot;: 1520000211921&#xd;
    },&#xd;
    &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
    &quot;ProgramId&quot;: 40,&#xd;
    &quot;AvailableAmount&quot;: &quot;1589&quot;,&#xd;
    &quot;MarketingFundAccountId&quot;: &quot;3ac66b0e-76f0-43c8-b0d2-737eb276bfa5&quot;,&#xd;
    &quot;LMEName&quot;: &quot;00020 - (HQ) John W Weiss Ace Hardware&quot;,&#xd;
    &quot;AllowCapping&quot;: &quot;yes&quot;&#xd;
  },&#xd;
  &quot;LMEName&quot;: &quot;00020 - (HQ) John W Weiss Ace Hardware&quot;,&#xd;
  &quot;CreatedBy&quot;: &quot;APete1&quot;,&#xd;
  &quot;ApproverName&quot;: &quot;Lorda&quot;,&#xd;
  &quot;ModifiedBy&quot;: &quot;APete1&quot;,&#xd;
  &quot;Comment&quot;: &quot;test&quot;,&#xd;
  &quot;ReviewCodes&quot;: &quot;&quot;, // review codes not selecting&#xd;
  &quot;ClaimStatus&quot;: null,&#xd;
  &quot;ClaimStatusName&quot;: &quot;Approved&quot;,&#xd;
  &quot;ApprovedAmount&quot;: 200&#xd;
}} &#xd;
 &#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/UpdateClaimOnReview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario- Don&apos;t select Review Codes</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Claim on Review6-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#xd;
{&#xd;
	//{&quot;_id&quot;: { &quot;$oid&quot;: &quot;5aa7677111257131fcf20a7a&quot;},&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a995cd411256d7aa8ec5584&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: 299,&#xd;
  &quot;LMEId&quot;: &quot;o4KjXpWX1FiV0Jkk6TBqMw&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;3ac66b0e-76f0-43c8-b0d2-737eb276bfa5&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;test-demo-ldm&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;test&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 50,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 689,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-03-06T18:30:00Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-03-29T18:30:00Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;1689&quot;,&#xd;
  &quot;TotalActivityCost&quot;: 200,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;50 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;100.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: 100,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a995cd411256d7aa8ec5584&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;New Microsoft Word Document.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;sdsdf&quot;&#xd;
  ],&#xd;
  &quot;ModifiedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;ModifiedDate&quot;: {&#xd;
    &quot;$date&quot;: 1520920433416&#xd;
  },&#xd;
  &quot;CreatedDate&quot;: {&#xd;
    &quot;$date&quot;: 1520920433416&#xd;
  },&#xd;
  &quot;UnprocessedAmount&quot;: &quot;100&quot;,&#xd;
  &quot;ApproverId&quot;: &quot;3512176&quot;, &#xd;
  &quot;ProcessInstanceId&quot;: &quot;239893&quot;, &#xd;
  &quot;SelectedBrandingProgram&quot;: {&#xd;
    &quot;_id&quot;: {&#xd;
      &quot;$oid&quot;: &quot;5a995cd411256d7aa8ec5584&quot;&#xd;
    },&#xd;
    &quot;ClaimDecisionId&quot;: &quot;24&quot;,&#xd;
    &quot;FundDistributionHierarchy&quot;: &quot;org&quot;,&#xd;
    &quot;HierarchyLevel&quot;: &quot;6,7&quot;,&#xd;
    &quot;Documents&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;New Microsoft Word Document.docx&quot;,&#xd;
        &quot;size&quot;: 11590&#xd;
      }&#xd;
    ],&#xd;
    &quot;ProgramName&quot;: &quot;test-demo-ldm&quot;,&#xd;
    &quot;Description&quot;: &quot;dfgdsfg&quot;,&#xd;
    &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
    &quot;StartDate&quot;: &quot;2018-03-01T18:30:00Z&quot;,&#xd;
    &quot;EndDate&quot;: &quot;2018-03-29T18:30:00Z&quot;,&#xd;
    &quot;ClaimWorkflowId&quot;: 23,&#xd;
    &quot;AllowOverdraft&quot;: &quot;Yes&quot;,&#xd;
    &quot;BrandingRequired&quot;: &quot;Yes&quot;,&#xd;
    &quot;AllowECom&quot;: &quot;yes&quot;,&#xd;
    &quot;AccrualType&quot;: &quot;Flat&quot;,&#xd;
    &quot;FlatAccrualPeriod&quot;: &quot;Annual&quot;,&#xd;
    &quot;RollingAccrualPeriod&quot;: &quot;&quot;,&#xd;
    &quot;LastTransactionDate&quot;: &quot;2018-04-05T18:30:00Z&quot;,&#xd;
    &quot;ExpirationDate&quot;: &quot;2018-04-26T18:30:00Z&quot;,&#xd;
    &quot;Activities&quot;: &quot;[{\&quot;ActivityName\&quot;:\&quot;Direct Mail\&quot;,\&quot;RmbPercentage\&quot;:50.0,\&quot;Description\&quot;:\&quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.\&quot;,\&quot;CappingAmount\&quot;:589.0,\&quot;ErrorCode\&quot;:200}]&quot;,&#xd;
    &quot;FormKey&quot;: &quot;programsace&quot;,&#xd;
    &quot;ProgramStatusId&quot;: 1,&#xd;
    &quot;ModifiedByUserId&quot;: &quot;3512176&quot;,&#xd;
    &quot;CreatedByUserId&quot;: &quot;3512176&quot;,&#xd;
    &quot;ModifiedDate&quot;: {&#xd;
      &quot;$date&quot;: 1520000211921&#xd;
    },&#xd;
    &quot;CreatedDate&quot;: {&#xd;
      &quot;$date&quot;: 1520000211921&#xd;
    },&#xd;
    &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
    &quot;ProgramId&quot;: 40,&#xd;
    &quot;AvailableAmount&quot;: &quot;1589&quot;,&#xd;
    &quot;MarketingFundAccountId&quot;: &quot;3ac66b0e-76f0-43c8-b0d2-737eb276bfa5&quot;,&#xd;
    &quot;LMEName&quot;: &quot;00020 - (HQ) John W Weiss Ace Hardware&quot;,&#xd;
    &quot;AllowCapping&quot;: &quot;yes&quot;&#xd;
  },&#xd;
  &quot;LMEName&quot;: &quot;00020 - (HQ) John W Weiss Ace Hardware&quot;,&#xd;
  &quot;CreatedBy&quot;: &quot;APete1&quot;,&#xd;
  &quot;ApproverName&quot;: &quot;Lorda&quot;,&#xd;
  &quot;ModifiedBy&quot;: &quot;APete1&quot;,&#xd;
  &quot;Comment&quot;: &quot;test&quot;,&#xd;
  &quot;ReviewCodes&quot;: 35, &#xd;
  &quot;ClaimStatus&quot;: null,&#xd;
  &quot;ClaimStatusName&quot;: &quot;&quot;, // Don&apos;t select Approved/Disapproved/Review&#xd;
  &quot;ApprovedAmount&quot;: 200&#xd;
}} &#xd;
 &#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/UpdateClaimOnReview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario- Don&apos;t select ClaimStatusName</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/GetPreapprovalDetails--POST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519997013000</longProp>
        <longProp name="ThreadGroup.end_time">1519997013000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetPreapprovalDetails" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;_id&quot;: {&#xd;
    &quot;$oid&quot;: &quot;${__BeanShell(bsh.shared.lnewclaimid)}&quot;&#xd;
  },&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;${__BeanShell(bsh.shared.ClaimNumId.get(${a}),)}&quot;,&#xd;
  &quot;LMEId&quot;: &quot;${__BeanShell(bsh.shared.LMEid.get(${a}),)}&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;${__BeanShell(bsh.shared.MFAid.get(${a}),)}&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;${__BeanShell(bsh.shared.Programname.get(${a}),)}&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Digital and Social Media&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;new claim from API&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Digital and Social Media&quot;,&#xd;
    &quot;RmbPercentage&quot;: 50,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 600,&#xd;
    &quot;ErrorCode&quot;: 0&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-03-07T18:30:00Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-03-29T18:30:00Z&quot;,&#xd;
  &quot;TotalActivityCost&quot;: 100,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;50 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;50.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: 50,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&quot;,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;New Microsoft Word Document.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;test&quot;&#xd;
  ],&#xd;
  &quot;ModifiedByUserId&quot;: &quot;3512177&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;ModifiedDate&quot;: {&#xd;
    &quot;$date&quot;: 1521445094388&#xd;
  },&#xd;
  &quot;CreatedDate&quot;: {&#xd;
    &quot;$date&quot;: 1521445094388&#xd;
  },&#xd;
  &quot;UnprocessedAmount&quot;: &quot;0.0&quot;,&#xd;
  &quot;ApproverId&quot;: &quot;3512177&quot;,&#xd;
  &quot;ProcessInstanceId&quot;: &quot;${__BeanShell(bsh.shared.ProcessInstanceId.get(${a}),)}&quot;,&#xd;
  &quot;LMEName&quot;: &quot;${__BeanShell(bsh.shared.LMEName.get(${a}),)}&quot;,&#xd;
  &quot;CreatedBy&quot;: &quot;APete1&quot;,&#xd;
  &quot;ApproverName&quot;: &quot;Test1&quot;,&#xd;
  &quot;ModifiedBy&quot;: &quot;Test1&quot;,&#xd;
  &quot;Comment&quot;: &quot;testing&quot;,&#xd;
  &quot;ReviewCodes&quot;: [&#xd;
    1,&#xd;
    2&#xd;
  ],&#xd;
  &quot;ClaimStatus&quot;: null,&#xd;
  &quot;ClaimStatusName&quot;: &quot;Request&quot;,&#xd;
  &quot;ApprovedAmount&quot;: 50&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-claim-management/v2/claims/GetPreapprovalDetails?PreapprovalId=check&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="0"></stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/UpdateClaim-POST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519996979000</longProp>
        <longProp name="ThreadGroup.end_time">1519996979000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/UpdateClaim</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Claim1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&quot;&#xd;
  },&#xd;
   &quot;ClaimId&quot;: &quot;${__BeanShell(bsh.shared.ClaimreferId.get(${a}),)}&quot;,&#xd;
   &quot;LMEId&quot;: &quot;${__BeanShell(bsh.shared.LMEid.get(${a}),)}&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;${__BeanShell(bsh.shared.MFAid.get(${a}),)}&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;${__BeanShell(bsh.shared.Programname.get(${a}),)}&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Digital and Social Media&quot;,&#xd;
   &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Digital and Social Media&quot;,&#xd;
    &quot;RmbPercentage&quot;: 75,&#xd;
    &quot;Description&quot;: &quot;1. Image of the Creative (Screenshot of the ad from the system or mobile).&lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;ErrorCode&quot;: 200,&#xd;
    &quot;ActivityType&quot;: &quot;&quot;,&#xd;
     &quot;ClaimedAmount&quot;: 65&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-07-09T22:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-07-12T22:30:00.000Z&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;300&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;75 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;225.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;20&quot;,&#xd;
  &quot;_id&quot;: &quot;${__BeanShell(bsh.shared.lnewclaimid)}&quot;,&#xd;
 &#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&quot;,&#xd;
  &quot;ClaimStatusName&quot;: &quot;Resubmitted&quot;,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;editing or updating claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CoOpGuidelines_LCP_2018_Q1_R6.pdf&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;Claim-INV&quot;&#xd;
  ],&#xd;
  &quot;ModifiedByUserId&quot;: &quot;3512177&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;3512172&quot;,&#xd;
  &quot;ModifiedDate&quot;: {&#xd;
    &quot;$date&quot;: 1531087344881&#xd;
  },&#xd;
  &quot;CreatedDate&quot;: {&#xd;
    &quot;$date&quot;: 1531087198769&#xd;
  },&#xd;
  &quot;UnprocessedAmount&quot;: &quot;10&quot;,&#xd;
  &quot;ReviewHistory&quot;: [&#xd;
    {&#xd;
      &quot;Comment&quot;: &quot;Claim-COMMENT&quot;,&#xd;
      &quot;ModifiedDate&quot;: &quot;2018-07-08T21:59:58.8321559Z&quot;,&#xd;
      &quot;ModifiedByUserId&quot;: &quot;3512177&quot;,&#xd;
      &quot;ReviewCode&quot;: null&#xd;
    },&#xd;
    {&#xd;
      &quot;Comment&quot;: &quot;Resubmitted please approve it&quot;,&#xd;
      &quot;ModifiedDate&quot;: &quot;2018-07-08T22:02:24.8817133Z&quot;,&#xd;
      &quot;ModifiedByUserId&quot;: &quot;3512177&quot;,&#xd;
      &quot;ReviewCode&quot;: [&#xd;
        &quot;1 - CMN Bucket - Request Missing Document - Copy of paid invoice was not uploaded to the claim.  This claim will not be reviewed unless appropriate document is uploaded. Please upload invoice.&quot;&#xd;
      ]&#xd;
    }&#xd;
  ],&#xd;
  &quot;ProcessInstanceId&quot;: &quot;${__BeanShell(bsh.shared.ProcessInstanceId.get(${a}),)}&quot;,&#xd;
  &quot;ApproverGroupId&quot;: &quot;6324&quot;,&#xd;
  &quot;ReviewedDate&quot;: {&#xd;
    &quot;$date&quot;: 1531087344881&#xd;
  },&#xd;
  &quot;ReviewCodes&quot;: [&#xd;
    &quot;1 - CMN Bucket - Request Missing Document - Copy of paid invoice was not uploaded to the claim.  This claim will not be reviewed unless appropriate document is uploaded. Please upload invoice.&quot;&#xd;
  ],&#xd;
  &quot;ApproverId&quot;: &quot;3512177&quot;,&#xd;
  &quot;ProgramStartDate&quot;: &quot;2018-03-31T18:30:00Z&quot;,&#xd;
  &quot;ProgramEndDate&quot;: &quot;2018-12-30T18:30:00Z&quot;,&#xd;
  &quot;AllowClaimOverdrawn&quot;: &quot;No&quot;,&#xd;
  &quot;SelectedBrandingProgram&quot;: {&#xd;
    &quot;_id&quot;: {&#xd;
      &quot;$oid&quot;: &quot;${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&quot;&#xd;
    },&#xd;
    &quot;ClaimDecisionId&quot;: &quot;24&quot;,&#xd;
    &quot;Documents&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Test.jpg&quot;,&#xd;
        &quot;size&quot;: 238994&#xd;
      }&#xd;
    ],&#xd;
    &quot;ProgramName&quot;: &quot;${__BeanShell(bsh.shared.Programname.get(${a}),)}&quot;,&#xd;
    &quot;Description&quot;: &quot;Description&quot;,&#xd;
    &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
    &quot;StartDate&quot;: &quot;2018-03-31T18:30:00Z&quot;,&#xd;
    &quot;EndDate&quot;: &quot;2018-12-30T18:30:00Z&quot;,&#xd;
    &quot;AllowClaimOverdrawn&quot;: &quot;No&quot;,&#xd;
    &quot;ClaimWorkflowId&quot;: 23,&#xd;
    &quot;FundDistributionHierarchy&quot;: &quot;org&quot;,&#xd;
    &quot;BrandingRequired&quot;: &quot;Yes&quot;,&#xd;
    &quot;AllowECom&quot;: &quot;yes&quot;,&#xd;
    &quot;HierarchyLevel&quot;: &quot;6,7&quot;,&#xd;
    &quot;AccrualType&quot;: &quot;Flat&quot;,&#xd;
    &quot;FlatAccrualPeriod&quot;: &quot;Annual&quot;,&#xd;
    &quot;RollingAccrualPeriod&quot;: &quot;&quot;,&#xd;
    &quot;LastTransactionDate&quot;: &quot;2019-01-14T18:30:00Z&quot;,&#xd;
    &quot;ExpirationDate&quot;: &quot;2019-01-30T18:30:00Z&quot;,&#xd;
    &quot;Activities&quot;: &quot;[{\&quot;ActivityName\&quot;:\&quot;Direct Mail\&quot;,\&quot;RmbPercentage\&quot;:75.0,\&quot;Description\&quot;:\&quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.\&quot;,\&quot;CappingAmount\&quot;:13742.00,\&quot;ErrorCode\&quot;:200,\&quot;ActivityType\&quot;:\&quot;\&quot;,\&quot;ClaimedAmount\&quot;:165.0},{\&quot;ActivityName\&quot;:\&quot;Fleet Graphics\&quot;,\&quot;RmbPercentage\&quot;:75.0,\&quot;Description\&quot;:\&quot;1. Image of the creative.&lt;/n&gt; 2. Invoice.\&quot;,\&quot;CappingAmount\&quot;:13742.00,\&quot;ErrorCode\&quot;:200,\&quot;ActivityType\&quot;:\&quot;\&quot;,\&quot;ClaimedAmount\&quot;:165.0},{\&quot;ActivityName\&quot;:\&quot;ROP\&quot;,\&quot;RmbPercentage\&quot;:75.0,\&quot;Description\&quot;:\&quot;1. Image of the creative.&lt;/n&gt; 2. Invoice.&lt;/n&gt; 3. One (1) original full-page tear sheet. (A tear heet is a page from the publication that serves as verification that the advertisement was published).\&quot;,\&quot;CappingAmount\&quot;:13742.00,\&quot;ErrorCode\&quot;:200,\&quot;ActivityType\&quot;:\&quot;\&quot;,\&quot;ClaimedAmount\&quot;:165.0},{\&quot;ActivityName\&quot;:\&quot;Digital and Social Media\&quot;,\&quot;RmbPercentage\&quot;:75.0,\&quot;Description\&quot;:\&quot;1. Image of the Creative (Screenshot of the ad from the system or mobile).&lt;/n&gt; 2. Invoice.\&quot;,\&quot;CappingAmount\&quot;:13742.00,\&quot;ErrorCode\&quot;:200,\&quot;ActivityType\&quot;:\&quot;\&quot;,\&quot;ClaimedAmount\&quot;:165.0},{\&quot;ActivityName\&quot;:\&quot;Out of Home\&quot;,\&quot;RmbPercentage\&quot;:75.0,\&quot;Description\&quot;:\&quot;1. Image of the Billboard.&lt;/n&gt; 2. Invoice.\&quot;,\&quot;CappingAmount\&quot;:13742.00,\&quot;ErrorCode\&quot;:200,\&quot;ActivityType\&quot;:\&quot;\&quot;,\&quot;ClaimedAmount\&quot;:165.0},{\&quot;ActivityName\&quot;:\&quot;Sponsorship\&quot;,\&quot;RmbPercentage\&quot;:75.0,\&quot;Description\&quot;:\&quot;\&quot;,\&quot;CappingAmount\&quot;:13742.00,\&quot;ErrorCode\&quot;:200,\&quot;ActivityType\&quot;:\&quot;\&quot;,\&quot;ClaimedAmount\&quot;:165.0},{\&quot;ActivityName\&quot;:\&quot;Pre Print\&quot;,\&quot;RmbPercentage\&quot;:75.0,\&quot;Description\&quot;:\&quot;\&quot;,\&quot;CappingAmount\&quot;:2616.40,\&quot;ErrorCode\&quot;:200,\&quot;ActivityType\&quot;:\&quot;\&quot;,\&quot;ClaimedAmount\&quot;:165.0},{\&quot;ActivityName\&quot;:\&quot;TV\&quot;,\&quot;RmbPercentage\&quot;:75.0,\&quot;Description\&quot;:\&quot;1. Invoice.&lt;/n&gt; 2. Notarized script with approved ANA/RAB or ANA TVB certification and net cost of spots.\&quot;,\&quot;CappingAmount\&quot;:13742.00,\&quot;ErrorCode\&quot;:200,\&quot;ActivityType\&quot;:\&quot;\&quot;,\&quot;ClaimedAmount\&quot;:165.0},{\&quot;ActivityName\&quot;:\&quot;Receipt Advertising\&quot;,\&quot;RmbPercentage\&quot;:75.0,\&quot;Description\&quot;:\&quot;\&quot;,\&quot;CappingAmount\&quot;:13742.00,\&quot;ErrorCode\&quot;:200,\&quot;ActivityType\&quot;:\&quot;\&quot;,\&quot;ClaimedAmount\&quot;:165.0},{\&quot;ActivityName\&quot;:\&quot;Blue CMN Bucket\&quot;,\&quot;RmbPercentage\&quot;:75.0,\&quot;Description\&quot;:\&quot;\&quot;,\&quot;CappingAmount\&quot;:13742.00,\&quot;ErrorCode\&quot;:200,\&quot;ActivityType\&quot;:\&quot;\&quot;,\&quot;ClaimedAmount\&quot;:165.0},{\&quot;ActivityName\&quot;:\&quot;Radio\&quot;,\&quot;RmbPercentage\&quot;:75.0,\&quot;Description\&quot;:\&quot;1. Invoice.&lt;/n&gt; 2. Notarized script with approved ANA/RAB or ANA TVB certification and net cost of spots.\&quot;,\&quot;CappingAmount\&quot;:13742.00,\&quot;ErrorCode\&quot;:200,\&quot;ActivityType\&quot;:\&quot;\&quot;,\&quot;ClaimedAmount\&quot;:165.0},{\&quot;ActivityName\&quot;:\&quot;Other\&quot;,\&quot;RmbPercentage\&quot;:75.0,\&quot;Description\&quot;:\&quot;Image of the creative\&quot;,\&quot;CappingAmount\&quot;:13742.00,\&quot;ErrorCode\&quot;:200,\&quot;ActivityType\&quot;:\&quot;\&quot;,\&quot;ClaimedAmount\&quot;:165.0},{\&quot;ActivityName\&quot;:\&quot;Messaging\&quot;,\&quot;RmbPercentage\&quot;:75.0,\&quot;Description\&quot;:\&quot;\&quot;,\&quot;CappingAmount\&quot;:13742.00,\&quot;ErrorCode\&quot;:200,\&quot;ActivityType\&quot;:\&quot;\&quot;,\&quot;ClaimedAmount\&quot;:165.0}]&quot;,&#xd;
    &quot;FormKey&quot;: &quot;programsace&quot;,&#xd;
    &quot;ProgramStatusName&quot;: &quot;Active&quot;,&#xd;
    &quot;ModifiedByUserId&quot;: &quot;3512177&quot;,&#xd;
    &quot;CreatedByUserId&quot;: &quot;3512177&quot;,&#xd;
    &quot;ModifiedDate&quot;: {&#xd;
      &quot;$date&quot;: 1530179397218&#xd;
    },&#xd;
    &quot;CreatedDate&quot;: {&#xd;
      &quot;$date&quot;: 1530179397218&#xd;
    },&#xd;
    &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
    &quot;ProgramId&quot;: &quot;Active&quot;,&#xd;
    &quot;MarketingFundAccountId&quot;: &quot;${__BeanShell(bsh.shared.MFAid.get(${a}),)}&quot;,&#xd;
    &quot;LMEName&quot;: &quot;00020 - (HQ) John W Weiss Ace Hardware&quot;,&#xd;
    &quot;AllowCapping&quot;: &quot;yes&quot;&#xd;
  },&#xd;
  &quot;CreatedBy&quot;: &quot;Al Pete&quot;,&#xd;
  &quot;ApproverName&quot;: &quot;TestUser TestUser&quot;,&#xd;
  &quot;ModifiedBy&quot;: &quot;TestUser TestUser&quot;,&#xd;
  &quot;ActionRequired&quot;: false,&#xd;
  &quot;LMEName&quot;: &quot;00020 - (HQ) John W Weiss Ace Hardware&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-claim-management/v2/claims/UpdateClaim?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario- This will Edit/Update a Claim  ${__BeanShell(bsh.shared.ClaimreferId.get(${a}),)}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager_LME" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.tokenlme)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="0"></stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Claim2-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">// Update claim body&#xd;
{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a9785962a97e1115c8e7305&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;claimid value here&quot;,&#xd;
  &quot;LMEId&quot;: &quot;07204&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;57452145-8154-4a0d-b103-5fbb3d8bc44f&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;, // editing from USD to EUR&#xd;
  &quot;ProgramName&quot;: &quot;PY-Prog1-March1&quot;,&#xd;
  &quot;LMEName&quot;: &quot;Meanley &amp; Son Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 20,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 50,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-02-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-06T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;400&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;20 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;40.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;10&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a9785962a97e1115c8e7305&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;invoice 123&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/UpdateClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario- Edit Program currency</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Claim3-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">// Update claim body&#xd;
{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a9785962a97e1115c8e7305&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;claimid value here&quot;,&#xd;
  &quot;LMEId&quot;: &quot;07204&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;57452145-8154-4a0d-b103-5fbb3d8bc44f&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;, // editing from USD to EUR&#xd;
  &quot;ProgramName&quot;: &quot;&quot;,&#xd;
  &quot;LMEName&quot;: &quot;Meanley &amp; Son Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 20,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 50,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-02-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-06T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;400&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;20 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;40.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;10&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a9785962a97e1115c8e7305&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;invoice 123&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/UpdateClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario- Deselect/Remove mandatory values like Program name</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Claim4-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">// Update claim body&#xd;
{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a9785962a97e1115c8e7305&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;Invalid claimid value here&quot;,&#xd;
  &quot;LMEId&quot;: &quot;07204&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;57452145-8154-4a0d-b103-5fbb3d8bc44f&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;, // editing from USD to EUR&#xd;
  &quot;ProgramName&quot;: &quot;&quot;,&#xd;
  &quot;LMEName&quot;: &quot;Meanley &amp; Son Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 20,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 50,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-02-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-06T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;0&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;0&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;20 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;0&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;0&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a9785962a97e1115c8e7305&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;invoice 123&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/UpdateClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario- Pass Wrong ClaimId</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/PayClaims-POST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519997072000</longProp>
        <longProp name="ThreadGroup.end_time">1519997072000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Pay Claims" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-claim-management/v2/claims/PayClaims?tenantId=acehardware&amp;previousStatus=</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/SaveApprover-POST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519997072000</longProp>
        <longProp name="ThreadGroup.end_time">1519997072000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/SaveApprover?autoApprove=true</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim_Approver Details1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;_id&quot;: &quot;${__BeanShell(bsh.shared.lnewclaimid)}&quot;,&#xd;
  &quot;ProcessInstanceId&quot;: &quot;${__BeanShell(bsh.shared.ProcessInstanceId.get(${a}),)}&quot;,&#xd;
  &quot;ApproverId&quot;: &quot;3512177&quot;,&#xd;
  &quot;ApprovedAmount&quot;: 10.0&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">api/cfm-claim-management/v2/claims/SaveApprover?autoApprove=true&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will save approver id and details</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="0"></stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Approver Details2-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#xd;
claimEntity :{{&#xd;
  &quot;_id&quot;: &quot;Invalid ClaimId&quot;,&#xd;
  &quot;ProcessInstanceId&quot;: &quot;239817&quot;,&#xd;
  &quot;ispreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;ApproverId&quot;: &quot;3512176&quot;,&#xd;
  &quot;PreApprovalId&quot;: &quot;&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;ebac3cef-2e25-451c-81bc-bee1b0448623&quot;,&#xd;
  &quot;ApprovedAmount&quot;: 10.0,&#xd;
  &quot;Comment&quot;: &quot;test&quot;&#xd;
}},autoApprove :(yes/no)</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/SaveApprover</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass Invalid Claim Id</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Approver Details-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">// Approve claims&#xd;
claimEntity :{{&#xd;
  &quot;_id&quot;: &quot;5aa62f6011257131fcf20a76&quot;,&#xd;
  &quot;ProcessInstanceId&quot;: &quot;Invalid&quot;,&#xd;
  &quot;ispreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;ApproverId&quot;: &quot;3512176&quot;,&#xd;
  &quot;PreApprovalId&quot;: &quot;&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;ebac3cef-2e25-451c-81bc-bee1b0448623&quot;,&#xd;
  &quot;ApprovedAmount&quot;: 10.0,&#xd;
  &quot;Comment&quot;: &quot;test&quot;&#xd;
}},autoApprove :(yes/no)</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/SaveApprover</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass Invalid Process Instance Id</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Approver Details4-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#xd;
claimEntity :{{&#xd;
  &quot;_id&quot;: &quot;5aa62f6011257131fcf20a76&quot;,&#xd;
  &quot;ProcessInstanceId&quot;: &quot;239817&quot;,&#xd;
  &quot;ispreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;ApproverId&quot;: &quot;Invalid 3512176&quot;,&#xd;
  &quot;PreApprovalId&quot;: &quot;&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;ebac3cef-2e25-451c-81bc-bee1b0448623&quot;,&#xd;
  &quot;ApprovedAmount&quot;: 10.0,&#xd;
  &quot;Comment&quot;: &quot;test&quot;&#xd;
}},autoApprove :(yes/no)</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/SaveApprover</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass Invalid Approver Id</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Approver Details5-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#xd;
claimEntity :{{&#xd;
  &quot;_id&quot;: &quot;5aa62f6011257131fcf20a76&quot;,&#xd;
  &quot;ProcessInstanceId&quot;: &quot;239817&quot;,&#xd;
  &quot;ispreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;ApproverId&quot;: &quot;3512176&quot;,&#xd;
  &quot;PreApprovalId&quot;: &quot;&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;Invalid MFA Id&quot;,&#xd;
  &quot;ApprovedAmount&quot;: 10.0,&#xd;
  &quot;Comment&quot;: &quot;test&quot;&#xd;
}},autoApprove :(yes/no)</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/SaveApprover</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass Invalid Marketing Fund account Id</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Approver Details6-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">//  approve claims&#xd;
claimEntity :{{&#xd;
  &quot;_id&quot;: &quot;5aa62f6011257131fcf20a76&quot;,&#xd;
  &quot;ProcessInstanceId&quot;: &quot;239817&quot;,&#xd;
  &quot;ispreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;ApproverId&quot;: &quot;3512176&quot;,&#xd;
  &quot;PreApprovalId&quot;: &quot;&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;ebac3cef-2e25-451c-81bc-bee1b0448623&quot;,&#xd;
  &quot;ApprovedAmount&quot;: &quot;&quot;,&#xd;
  &quot;Comment&quot;: &quot;test&quot;&#xd;
}},autoApprove :(yes/no)</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/SaveApprover</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Don&apos;t Provide Approved Amount</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/ReviewActions-GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519997124000</longProp>
        <longProp name="ThreadGroup.end_time">1519997124000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/ReviewActions?tenantId=sddds</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Review Actions1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">acehardware</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-claim-management/v2/claims/ReviewActions</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will give Claim Review Actions for a TenantId</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Review Actions2-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">JacksonhewittInvalid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/ReviewActions</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass Invalid TenantId</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/GetActivityOverviewData-GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519997219000</longProp>
        <longProp name="ThreadGroup.end_time">1519997219000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/GetActivityOverviewData?isPreApprovalAllowed=no&amp;isBrandingAllowed=Yes&amp;isClaimAllowed=Yes&amp;tenantId=Jacksonhewitt</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetActivityOverviewData" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="isPreApprovalAllowed" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">no</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">isPreApprovalAllowed</stringProp>
              </elementProp>
              <elementProp name="isBrandingAllowed" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">isBrandingAllowed</stringProp>
              </elementProp>
              <elementProp name="isClaimAllowed" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">isClaimAllowed</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">acehardware</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-claim-management/v2/claims/GetActivityOverviewData</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Activity over view2-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="isPreApprovalAllowed" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">noInvalid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">isPreApprovalAllowed</stringProp>
              </elementProp>
              <elementProp name="isBrandingAllowed" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">isBrandingAllowed</stringProp>
              </elementProp>
              <elementProp name="isClaimAllowed" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">isClaimAllowed</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Jacksonhewitt</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/GetActivityOverviewData</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass Invalid parameter in isPreApprovalAllowed field</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Activity over view3-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="isPreApprovalAllowed" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">no</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">isPreApprovalAllowed</stringProp>
              </elementProp>
              <elementProp name="isBrandingAllowed" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">YesInvalid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">isBrandingAllowed</stringProp>
              </elementProp>
              <elementProp name="isClaimAllowed" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">isClaimAllowed</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Jacksonhewitt</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/GetActivityOverviewData</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass Invalid parameter in isBrandingAllowed field</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Activity over view4-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="isPreApprovalAllowed" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">no</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">isPreApprovalAllowed</stringProp>
              </elementProp>
              <elementProp name="isBrandingAllowed" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">isBrandingAllowed</stringProp>
              </elementProp>
              <elementProp name="isClaimAllowed" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Yesnvalid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">isClaimAllowed</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Jacksonhewitt</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/GetActivityOverviewData</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass Invalid parameter in isClaimAllowed field</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Activity over view5-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="isPreApprovalAllowed" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">no</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">isPreApprovalAllowed</stringProp>
              </elementProp>
              <elementProp name="isBrandingAllowed" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Yes</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">isBrandingAllowed</stringProp>
              </elementProp>
              <elementProp name="isClaimAllowed" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">YesInvalid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">isClaimAllowed</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">JacksonhewittInvalid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/GetActivityOverviewData</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass Invalid parameter in tenantId field</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/ClaimIds-GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519997224000</longProp>
        <longProp name="ThreadGroup.end_time">1519997224000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/ClaimIds?programId=ert&amp;tenantId=eret&amp;activityName=dfdgrd</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Claim Ids1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-claim-management/v2/claims/ClaimIds?programId=${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&amp;tenantId=acehardware&amp;activityName=Digital and Social Media</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This  will fetch all the Claim Ids</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Claim Ids2-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="programId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">5a9785962a97e1115c8e7305Invalid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">programId</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Jacksonhewitt</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
              <elementProp name="activityName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Direct Mail</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">activityName</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/ClaimIds</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass Invaild ProgramId</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Claim Ids3-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="programId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__BeanShell(bsh.shared.users.get(${a}),)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">programId</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">JacksonhewittInvalid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
              <elementProp name="activityName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Direct Mail</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">activityName</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/ClaimIds</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass Invaild TenantId</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Claim Ids4-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="programId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__BeanShell(bsh.shared.users.get(${a}),)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">programId</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Jacksonhewitt</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
              <elementProp name="activityName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Direct Mail</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">activityName</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/ClaimIds</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass Invaild activityName</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Disbursement API" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>true</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/ClaimsForDashboard-GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519996954000</longProp>
        <longProp name="ThreadGroup.end_time">1519996954000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claims for Dashboard1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">gateway.kube01-i.qa01.brandmuscle.net/api/cfm-claim-management/v2/claims</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ClaimsForDashboard?tenantId=acehardware&amp;limit=100&amp;searchText=10793&amp;sortBy=Store&amp;sortOrder=1</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will create Claim</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/SendClaimNotification-GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519996954000</longProp>
        <longProp name="ThreadGroup.end_time">1519996954000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/SaveAutoClaim</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SendBrandingNotification" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="claimId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__BeanShell(bsh.shared.lnewclaimid)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">claimId</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">acehardware</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-claim-management/v2/claims/SendClaimNotification</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will create Claim</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager_LME" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.tokenlme)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="Disbursement API" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>true</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/GetClaimsforDisbursement" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/disbursements/GetClaimsforDisbursement?tenantId=acehardware</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Claims for Disbursement1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-claim-management/v2/disbursements/GetClaimsforDisbursement?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/DisbursementList-GET" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/disbursements/DisbursementList?period=12&amp;startDate=12&amp;endDate=12&amp;tenantId=12&amp;limit=12</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DisbursementList1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-claim-management/v2/disbursements/DisbursementList?period=30&amp;startDate=null&amp;endDate=null&amp;tenantId=acehardware&amp;limit=-1</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/save-POST" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/disbursements/save?tenantId=acehardware</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateDisbursement1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;Claims&quot;: [&#xd;
    {&#xd;
      &quot;_id&quot;: &quot;${__BeanShell(bsh.shared.lnewclaimid)}&quot;,&#xd;
      &quot;PaidAmount&quot;: 20&#xd;
    }&#xd;
  ],&#xd;
  &quot;TotalApprovedAmount&quot;: 20,&#xd;
  &quot;TotalRequestedAmount&quot;: 20,&#xd;
  &quot;TotalPaidAmount&quot;: 20,&#xd;
  &quot;TotalClaims&quot;: 1,&#xd;
  &quot;DisbursementStatusName&quot;: &quot;Approved&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-claim-management/v2/disbursements/save?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">lnewclaimid</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">disbid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..DisbursementId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${disbid_ALL}&quot;);
log.info(&quot;=======********&gt;&quot;+bsh.shared.lnewclaimid);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${disbid_1}&quot;);
String[] disburseid = vars.get(&quot;disbid_ALL&quot;).split(&quot;,&quot;); 
int len = disburseid.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList DisbursementId = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	DisbursementId.add(disburseid[i]);
}
bsh.shared.DisbursementId=DisbursementId;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/RunDisbursement/{id}-POST" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/disbursements/RunDisbursement/disb-123</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RunDisbursement1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/disbursements/RunDisbursement/${__BeanShell(bsh.shared.DisbursementId.get(${a}),)}?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/GetCreditMemoDetails-POST" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/disbursements/GetCreditMemoDetails?disbursementId=disb-123&amp;tenantId=acehardware</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreditMemo" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-claim-management/v2/disbursements/GetCreditMemoDetails?disbursementId=${__BeanShell(bsh.shared.DisbursementId.get(${a}),)}&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/UpdateDisbursementOnReview-POST" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/disbursements/UpdateDisbursementOnReview</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UpdateDisbursement1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;DisbursementId&quot;: &quot;${__BeanShell(bsh.shared.DisbursementId.get(${a}),)}&quot;,&#xd;
  &quot;DisbursementReferenceId&quot;: null,&#xd;
  &quot;DisbursementTypeId&quot;: 1,&#xd;
  &quot;DisbursementTypeName&quot;: &quot;CreditMemo&quot;,&#xd;
  &quot;DisbursementStatusName&quot;: &quot;Approved&quot;,&#xd;
  &quot;DisbursementComments&quot;: &quot;API-Updating the Disbursement by changing Description&quot;,&#xd;
  &quot;TotalClaims&quot;: 1,&#xd;
  &quot;TotalRequestedAmount&quot;: 20,&#xd;
  &quot;TotalApprovedAmount&quot;: 20,&#xd;
  &quot;CreatedDate&quot;: &quot;2018-05-10T04:59:30.544Z&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;3512177&quot;,&#xd;
  &quot;CreatedBy&quot;: &quot;Test1&quot;,&#xd;
  &quot;ModifiedDate&quot;: &quot;2018-05-10T04:59:30.544Z&quot;,&#xd;
  &quot;ModifiedByUserId&quot;: &quot;3512177&quot;,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;ClaimID&quot;: &quot;${__BeanShell(bsh.shared.lnewclaimid)}&quot;,&#xd;
  &quot;ClaimStatusName&quot;: &quot;Approved&quot;,&#xd;
  &quot;StartDocId&quot;: null,&#xd;
  &quot;EndDocId&quot;: null,&#xd;
  &quot;StartEventId&quot;: null,&#xd;
  &quot;DisbursementType&quot;: &quot;CreditMemo&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-claim-management/v2/disbursements/UpdateDisbursementOnReview?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/SaveApprover-POST" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/disbursements/SaveApprover?disbursementId=disb-123&amp;groupId=123&amp;processInstanceId=123</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DisbSaveApprover1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-claim-management/v2/disbursements/SaveApprover?disbursementId=${__BeanShell(bsh.shared.DisbursementId.get(${a}),)}&amp;groupId=123&amp;processInstanceId=${__BeanShell(bsh.shared.ProcessInstanceId.get(${a}),)}&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/api/ClaimManagement/v1/disbursements/SaveApprover?disbursementId=12&amp;groupId=12&amp;processInstanceId=12&amp;tenantId=acehardware</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/Comments/{id}-GET" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/disbursements/Comments/dsib-123</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DisbComments1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-claim-management/v2/disbursements/Comments/${__BeanShell(bsh.shared.DisbursementId.get(${a}),)}?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/UpdateDisbursementOnSubmit-POST" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/disbursements/UpdateDisbursementOnSubmit</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DisbUpdateOnSUbmit1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;DisbursementId&quot;: &quot;${__BeanShell(bsh.shared.DisbursementId.get(${a}),)}&quot;,&#xd;
  &quot;LMEId&quot;: &quot;${__BeanShell(bsh.shared.LMEid.get(${a}),)}&quot;,&#xd;
  &quot;DisbursementReferenceId&quot;: null,&#xd;
  &quot;DisbursementStatusName&quot;: null,&#xd;
  &quot;DisbursementTypeId&quot;: null,&#xd;
  &quot;DisbursementTypeName&quot;: null,&#xd;
  &quot;TotalClaims&quot;: null,&#xd;
  &quot;ClaimId&quot;: null,&#xd;
  &quot;TotalApprovedAmount&quot;: null,&#xd;
  &quot;TotalRequestedAmount&quot;: null,&#xd;
  &quot;DisbursementTime&quot;: null,&#xd;
  &quot;CreatedByUserId&quot;: null,&#xd;
  &quot;CreatedBy&quot;: null,&#xd;
  &quot;CreatedDate&quot;: null,&#xd;
  &quot;PrelimTime&quot;: null,&#xd;
  &quot;StartDocId&quot;: null,&#xd;
  &quot;EndDocId&quot;: null,&#xd;
  &quot;QcBy&quot;: null,&#xd;
  &quot;QcTime&quot;: null,&#xd;
  &quot;StartEventId&quot;: &quot;DisbursementWorkflow_acehardware&quot;,&#xd;
  &quot;ProcessInstanceId&quot;: null,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;WorkFlowFileName&quot;: null,&#xd;
  &quot;BorderColorPallete&quot;: null,&#xd;
  &quot;TextColorPallete&quot;: null,&#xd;
  &quot;ApproverId&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-claim-management/v2/disbursements/UpdateDisbursementOnSubmit?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/DisbursementEditData" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/disbursements/DisbursementEditData?id=disb-123&amp;tenantId=acehardware</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Disb Edit1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-claim-management/v2/disbursements/DisbursementEditData?id=${__BeanShell(bsh.shared.DisbursementId.get(${a}),)}&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/GetDeclinedCreditMemoData" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/disbursements/GetDeclinedCreditMemoData?disbursementId=disb-123&amp;tenantId=acehardware</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Declined Credit  memo Data1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-claim-management/v2/disbursements/GetDeclinedCreditMemoData?disbursementId=${__BeanShell(bsh.shared.DisbursementId.get(${a}),)}&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/AutoApproveDisbursement--GET" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/disbursements/GetDeclinedCreditMemoData?disbursementId=disb-123&amp;tenantId=acehardware</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AutoApproveDisbursement" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-claim-management/v2/disbursements/AutoApproveDisbursement?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/DisbursementsForDashboard-GET" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/disbursements/GetDeclinedCreditMemoData?disbursementId=disb-123&amp;tenantId=acehardware</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DisbursementsForDashboard1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-claim-management/v2/disbursements/GetDeclinedCreditMemoData?disbursementId=${__BeanShell(bsh.shared.DisbursementId.get(${a}),)}&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/{id}-DELETE" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519997174000</longProp>
        <longProp name="ThreadGroup.end_time">1519997174000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/xvvsf</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Claim1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-claim-management/v2/claims/${__BeanShell(bsh.shared.lnewclaimid)}?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will delete a Claim</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Claim2-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/${__BeanShell(bsh.shared.ClaimId.get(${c}),)}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Try deleting a claim which is already Deleted</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Claim2-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/${__BeanShell(bsh.shared.ClaimId.get(${c}),)}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Try deleteing a claim by providing wrong Claim id</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="PreApproval API" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>true</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="PreApproval API" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>true</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/branding/Documents----this method is not been used" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/branding/Documents?brandingRequestId=12</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Branding Documents1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/branding/Documents?brandingRequestId=${__BeanShell(bsh.shared.BPAid)}&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">5b34ba182a97e02520371153  ${__BeanShell(bsh.shared.BPAid)}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/ClaimExistsPreApproval-GET---new method------this  method is not been used" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519996954000</longProp>
        <longProp name="ThreadGroup.end_time">1519996954000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClaimExistsPreApproval1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb02</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://azweb02u: /api/ClaimManagement/v1/claims/ClaimExistsPreApproval?preApprovalId=12&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will create Claim</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">lmeclaimid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..*</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">byte [] samplerdataobj = ctx.getPreviousResult().getResponseData();
String lclaimid = new String(samplerdataobj);
log.info(&quot;=======&gt;&quot;+lclaimid);
String lnewclaimid= lclaimid.replaceAll(&quot;^\&quot;|\&quot;$&quot;, &quot;&quot;);
log.info(&quot;newclaimid========&gt;&quot;+lnewclaimid);
bsh.shared.lnewclaimid=lnewclaimid;
log.info(&quot;=======&gt;&quot;+bsh.shared.lnewclaimid);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/SaveAutoClaim-GET---new method---not developed yet" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519996954000</longProp>
        <longProp name="ThreadGroup.end_time">1519996954000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/SaveAutoClaim</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SaveAutoClaim1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://azweb02u: /api/ClaimManagement/v1/claims/ClaimExistsPreApproval?preApprovalId=12&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will create Claim</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">lmeclaimid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..*</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">byte [] samplerdataobj = ctx.getPreviousResult().getResponseData();
String lclaimid = new String(samplerdataobj);
log.info(&quot;=======&gt;&quot;+lclaimid);
String lnewclaimid= lclaimid.replaceAll(&quot;^\&quot;|\&quot;$&quot;, &quot;&quot;);
log.info(&quot;newclaimid========&gt;&quot;+lnewclaimid);
bsh.shared.lnewclaimid=lnewclaimid;
log.info(&quot;=======&gt;&quot;+bsh.shared.lnewclaimid);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/Comments/{id}-GET-not used" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519997145000</longProp>
        <longProp name="ThreadGroup.end_time">1519997145000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/Comments/cds</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Caims Comment1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/Comments/${__BeanShell(bsh.shared.lnewclaimid)}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will give claim Comments</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Caims Comment2-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">axweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/Comments/${__BeanShell(bsh.shared.ClaimId.get(${c}),)}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass Invalid Id</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/branding/Comments-GET-not used" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/branding/Comments?brandingRequestId=123</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Branding Comments1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/branding/Comments?brandingRequestId=${__BeanShell(bsh.shared.BPAid)}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/preapprovals/SavePreApproval-Funding PA" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/preapprovals/SavePreApproval</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Pre-Approval Creation1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/preapprovals/SavePreApproval</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/preapprovals/UpdatePreApproval-Funding PA" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/preapprovals/UpdatePreApproval</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Pre-approval1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://azweb02u: /api/ClaimManagement/v1/preapprovals/UpdatePreApproval</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/preapprovals/GetPreApprovalDetailsById-Funding PA" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get PA Details by ID1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/preapprovals/GetPreApprovalDetailsById?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/preapprovals/GetPreApprovalDetailsById?tenantId=acehardware</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/preapprovals/GetPreApprovalsByPreApprovalId-Funding PA" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/preapprovals/GetPreApprovalsByPreApprovalId?tenantId=acehardware</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get PA by Preapproval ID1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/preapprovals/GetPreApprovalsByPreApprovalId?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/preapprovals/SaveApprover-Funding PA" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/preapprovals/SaveApprover?autoApprove=true</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="save approver Details1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/preapprovals/SaveApprover?autoApprove=true</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/preapprovals/Comments-Funding PA" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/preapprovals/Comments?preApprovalId=123</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Pre-approval Comments1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/preapprovals/Comments?preApprovalId=123</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/preapprovals/PreApprovalList-Funding PA" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/preapprovals/PreApprovalList?period=123&amp;startDate=122q&amp;endDate=12&amp;tenantId=12&amp;limit=12</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Pre-approval List1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/preapprovals/PreApprovalList?period=123&amp;startDate=122q&amp;endDate=12&amp;tenantId=12&amp;limit=12</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/preapprovals/SubmitPreApprovalReview-Funding PA" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/preapprovals/SubmitPreApprovalReview</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="submit Pre-approval Review" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://azweb02u: /api/ClaimManagement/v1/preapprovals/SubmitPreApprovalReview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/preapprovals/PreApprovalListStatus-Funding PA" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/preapprovals/PreApprovalListStatus</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Pre-approval List status1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/preapprovals/PreApprovalListStatus</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/preapprovals/GetPreapprovalDetails-Funding PA" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/preapprovals/GetPreapprovalDetails?tenantId=acehardware</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Pre-Approval Details1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/preapprovals/GetPreapprovalDetails?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/GetBalanceWithoutPreapproval-GET-Funding PA" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519997380000</longProp>
        <longProp name="ThreadGroup.end_time">1519997380000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/GetBalanceWithoutPreapproval?programId=df&amp;lmeId=fv&amp;tenantId=fvd</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Balance without PreApproval1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="programId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__BeanShell(bsh.shared.numProgramid.get(${a}),)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">programId</stringProp>
              </elementProp>
              <elementProp name="lmeId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__BeanShell(bsh.shared.LMEid.get(${a}),)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lmeId</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">acehardware</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb02u</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/GetBalanceWithoutPreapproval</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will Get Balance Without Pre-approval</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Balance without PreApproval2-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="programId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">5a9785962a97e1115c8e7305Invalid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">programId</stringProp>
              </elementProp>
              <elementProp name="lmeId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">18004</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lmeId</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Jacksonhewitt</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/GetBalanceWithoutPreapproval</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative scenario-Pass Invalid ProgramId</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Balance without PreApproval3-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="programId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">5a9785962a97e1115c8e7305</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">programId</stringProp>
              </elementProp>
              <elementProp name="lmeId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">18004nvalid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lmeId</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Jacksonhewitt</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/GetBalanceWithoutPreapproval</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative scenario-Pass Invalid lmeId</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Balance without PreApproval4-" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="programId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">5a9785962a97e1115c8e7305</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">programId</stringProp>
              </elementProp>
              <elementProp name="lmeId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">18004</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lmeId</stringProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">JacksonhewittInvalid</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/GetBalanceWithoutPreapproval</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative scenario-Pass Invalid tenantId</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/DupeCheck/{id}-GET---This is not been used" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519996954000</longProp>
        <longProp name="ThreadGroup.end_time">1519996954000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim dupe Check1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb02u</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/DupeCheck/132397724140732?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will create Claim</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">lmeclaimid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..*</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">byte [] samplerdataobj = ctx.getPreviousResult().getResponseData();
String lclaimid = new String(samplerdataobj);
log.info(&quot;=======&gt;&quot;+lclaimid);
String lnewclaimid= lclaimid.replaceAll(&quot;^\&quot;|\&quot;$&quot;, &quot;&quot;);
log.info(&quot;newclaimid========&gt;&quot;+lnewclaimid);
bsh.shared.lnewclaimid=lnewclaimid;
log.info(&quot;=======&gt;&quot;+bsh.shared.lnewclaimid);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/SaveClaimsForCapturePayment-GET---this can be called from payment API" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519996954000</longProp>
        <longProp name="ThreadGroup.end_time">1519996954000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/SaveAutoClaim</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SaveClaimsForCapturePayment1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb02u</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/SaveClaimsForCapturePayment?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will create Claim</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">lmeclaimid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..*</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">byte [] samplerdataobj = ctx.getPreviousResult().getResponseData();
String lclaimid = new String(samplerdataobj);
log.info(&quot;=======&gt;&quot;+lclaimid);
String lnewclaimid= lclaimid.replaceAll(&quot;^\&quot;|\&quot;$&quot;, &quot;&quot;);
log.info(&quot;newclaimid========&gt;&quot;+lnewclaimid);
bsh.shared.lnewclaimid=lnewclaimid;
log.info(&quot;=======&gt;&quot;+bsh.shared.lnewclaimid);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/ReleaseClaims-GET---this can be called from payment API" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519996954000</longProp>
        <longProp name="ThreadGroup.end_time">1519996954000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/SaveAutoClaim</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ReleaseClaims1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb02u</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/ReleaseClaims?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will create Claim</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">lmeclaimid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..*</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">byte [] samplerdataobj = ctx.getPreviousResult().getResponseData();
String lclaimid = new String(samplerdataobj);
log.info(&quot;=======&gt;&quot;+lclaimid);
String lnewclaimid= lclaimid.replaceAll(&quot;^\&quot;|\&quot;$&quot;, &quot;&quot;);
log.info(&quot;newclaimid========&gt;&quot;+lnewclaimid);
bsh.shared.lnewclaimid=lnewclaimid;
log.info(&quot;=======&gt;&quot;+bsh.shared.lnewclaimid);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/branding/Comments-GET---this method not been used" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519996954000</longProp>
        <longProp name="ThreadGroup.end_time">1519996954000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/SaveAutoClaim</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="branding Comments1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb02u</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/branding/Comments?brandingRequestId=12&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will create Claim</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">lmeclaimid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..*</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">byte [] samplerdataobj = ctx.getPreviousResult().getResponseData();
String lclaimid = new String(samplerdataobj);
log.info(&quot;=======&gt;&quot;+lclaimid);
String lnewclaimid= lclaimid.replaceAll(&quot;^\&quot;|\&quot;$&quot;, &quot;&quot;);
log.info(&quot;newclaimid========&gt;&quot;+lnewclaimid);
bsh.shared.lnewclaimid=lnewclaimid;
log.info(&quot;=======&gt;&quot;+bsh.shared.lnewclaimid);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Programs/{id}-DELETE------This method is not been used using hard delete program method which will delete from db also" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11071/api/ChannelBuilder/v1/Programs/{id}</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1518071369000</longProp>
        <longProp name="ThreadGroup.end_time">1518071369000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete a Program 1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">11071</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ChannelBuilder/v1/Programs/${__BeanShell(bsh.shared.numProgramid.get(${a}),)}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">This will delete a program by passing Program Id</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>true</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>true</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
      <hashTree/>
      <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor-Validating Json Response" enabled="true">
        <boolProp name="resetInterpreter">false</boolProp>
        <stringProp name="parameters"></stringProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="script">
import org.json.JSONException;
import org.json.JSONObject;

try
{
    JSONObject obj = new JSONObject(prev.getResponseData());
    log.info(&quot;************valid json&quot;); 
}
catch(Exception e)
{
    log.info(&quot;==========&gt;&gt;&gt;&gt;&gt;Not a valid json&quot;);
    prev.setSuccessful(false);
   
}</stringProp>
        <stringProp name="TestPlan.comments"> prev.setResponseMessage(ex.getMessage());</stringProp>
      </BeanShellPostProcessor>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Branding/UpdateBrandingRequest" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateBrandingRequest" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/UpdateBrandingRequest?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
