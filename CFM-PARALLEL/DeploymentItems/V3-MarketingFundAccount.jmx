<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="MarketingFundAccount" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Token-Admin" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.ChromeDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig" testname="jp@gc - Chrome Driver Config" enabled="true">
          <stringProp name="WebDriverConfig.proxy_type">SYSTEM</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host"></stringProp>
          <intProp name="WebDriverConfig.http_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">true</boolProp>
          <stringProp name="WebDriverConfig.https_host"></stringProp>
          <intProp name="WebDriverConfig.https_port">8080</intProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">8080</intProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">8080</intProp>
          <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
          <boolProp name="WebDriverConfig.maximize_browser">true</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">false</boolProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <stringProp name="ChromeDriverConfig.chromedriver_path">D:\CFM-RunTimeFiles\chromedriver.exe</stringProp>
          <boolProp name="ChromeDriverConfig.android_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.headless_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.insecurecerts_enabled">false</boolProp>
        </com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="jp@gc - WebDriver Sampler" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium);
var support_ui = JavaImporter(org.openqa.selenium.support.ui.WebDriverWait);
var wait = new support_ui.WebDriverWait(WDS.browser, 5000);
var props = org.apache.jmeter.util.JMeterUtils.getJMeterProperties()
var select=JavaImporter(org.openqa.selenium.support.ui.Select);

WDS.sampleResult.sampleStart()
java.lang.Thread.sleep(7000)
WDS.browser.get(&apos;https://acehardware.v5qa.brandmuscle.net/Login/Login.aspx&apos;)
var titlep=WDS.browser.getTitle()
WDS.log.info(&quot;titlep====&gt;&quot;+WDS.browser.getTitle());

var username=WDS.browser.findElement(pkg.By.id(&apos;UserName&apos;));
username.sendKeys(&apos;UAT_Admin&apos;);
var password=WDS.browser.findElement(pkg.By.id(&apos;Password&apos;));
password.sendKeys(&apos;welcome&apos;);
var lgnbtn=WDS.browser.findElement(pkg.By.id(&apos;LoginButton&apos;));
lgnbtn.click();
java.lang.Thread.sleep(7000)

var element = WDS.browser.findElement(org.openqa.selenium.By.name(&apos;ctl00$MainContent$ddlBusinessUnit&apos;))
var select = new org.openqa.selenium.support.ui.Select(element)
select.selectByVisibleText(&apos;ACE Hardware&apos;)

var element = WDS.browser.findElement(org.openqa.selenium.By.xpath(&apos;//span[text()=&quot;Manage Co-op&quot;]&apos;))
element.click();
java.lang.Thread.sleep(25000)

var tokenvalue = WDS.browser.executeScript(&quot;return window.sessionStorage.getItem(&apos;token&apos;);&quot;) 
WDS.log.info(&quot;token====&gt;&quot;+tokenvalue);
props.put(&quot;TOKEN&quot;,tokenvalue);
WDS.sampleResult.sampleEnd()
</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">var props = org.apache.jmeter.util.JMeterUtils.getJMeterProperties();
var it = props.get(&quot;TOKEN&quot;);
log.info(&quot;BSFTOKEN==&gt;&quot;+it);
bsh.shared.token=it;
log.info(&quot;shared variable&quot;+bsh.shared.token);</stringProp>
        </BeanShellPostProcessor>
        <hashTree/>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="49586">200</stringProp>
          </collectionProp>
          <stringProp name="Assertion.custom_message"></stringProp>
          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
          <boolProp name="Assertion.assume_success">true</boolProp>
          <intProp name="Assertion.test_type">2</intProp>
        </ResponseAssertion>
        <hashTree/>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="2524">OK</stringProp>
          </collectionProp>
          <stringProp name="Assertion.custom_message"></stringProp>
          <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">2</intProp>
        </ResponseAssertion>
        <hashTree/>
      </hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header ManagerTest1" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">Bearer ${__BeanShell(bsh.shared.token)}</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">gateway.kube01-i.qa01.brandmuscle.net/api/cfm-account/v2</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
        <stringProp name="CounterConfig.start">0</stringProp>
        <stringProp name="CounterConfig.end"></stringProp>
        <stringProp name="CounterConfig.incr">1</stringProp>
        <stringProp name="CounterConfig.name">a</stringProp>
        <stringProp name="CounterConfig.format"></stringProp>
        <boolProp name="CounterConfig.per_user">true</boolProp>
      </CounterConfig>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="load" elementType="Argument">
            <stringProp name="Argument.name">load</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.desc">This variable is for load</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="UserId" elementType="Argument">
            <stringProp name="Argument.name">UserId</stringProp>
            <stringProp name="Argument.value">351277</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Test User Id Admin</stringProp>
          </elementProp>
          <elementProp name="load1" elementType="Argument">
            <stringProp name="Argument.name">load1</stringProp>
            <stringProp name="Argument.value">50</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="StartDate" elementType="Argument">
            <stringProp name="Argument.name">StartDate</stringProp>
            <stringProp name="Argument.value">2019-01-25</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">start date of program</stringProp>
          </elementProp>
          <elementProp name="EndDate" elementType="Argument">
            <stringProp name="Argument.name">EndDate</stringProp>
            <stringProp name="Argument.value">2019-06-13</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">end date of program</stringProp>
          </elementProp>
          <elementProp name="ClaimDate" elementType="Argument">
            <stringProp name="Argument.name">ClaimDate</stringProp>
            <stringProp name="Argument.value">2019-07-20</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">last transaction date of program</stringProp>
          </elementProp>
          <elementProp name="ExpiryDate" elementType="Argument">
            <stringProp name="Argument.name">ExpiryDate</stringProp>
            <stringProp name="Argument.value">2019-08-27</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Expiry date of program</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Programs-POST" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11071/api/ChannelBuilder/v1/Programs?tenantId=tenant1</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1517563758000</longProp>
        <longProp name="ThreadGroup.end_time">1517563758000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create New Program1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ClaimDecisionId&quot;: &quot;24&quot;,&#xd;
  &quot;FundDistributionHierarchy&quot;: &quot;org&quot;,&#xd;
  &quot;HierarchyLevel&quot;: &quot;6,7&quot;,&#xd;
  &quot;Documents&quot;: [],&#xd;
  &quot;ProgramName&quot;: &quot;API-${__javaScript(new Date().getTime();)}&quot;,&#xd;
  &quot;Description&quot;: &quot;Creating a Program&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;StartDate&quot;: &quot;2018-04-25T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2019-06-13T18:30:00.000Z&quot;,&#xd;
  &quot;ClaimWorkflowId&quot;: 23,&#xd;
  &quot;AllowOverdraft&quot;: &quot;Yes&quot;,&#xd;
  &quot;BrandingRequired&quot;: &quot;Yes&quot;,&#xd;
  &quot;AllowECom&quot;: &quot;yes&quot;,&#xd;
  &quot;AccrualType&quot;: &quot;Flat&quot;,&#xd;
  &quot;FlatAccrualPeriod&quot;: &quot;Annual&quot;,&#xd;
  &quot;RollingAccrualPeriod&quot;: &quot;&quot;,&#xd;
  &quot;LastTransactionDate&quot;: &quot;2019-07-20T18:30:00.000Z&quot;,&#xd;
  &quot;ExpirationDate&quot;: &quot;2019-08-27T18:30:00.000Z&quot;,&#xd;
  &quot;Activities&quot;: [&#xd;
    {&#xd;
      &quot;DirectMailName&quot;: &quot;Direct Mail&quot;,&#xd;
      &quot;DirectMailDescription&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
      &quot;FleetgraphicsDescription&quot;: &quot;1. Image of the creative.&lt;/n&gt; 2. Invoice.&quot;,&#xd;
      &quot;FleetgraphicsName&quot;: &quot;Fleet graphics&quot;,&#xd;
      &quot;ROPName&quot;: &quot;ROP&quot;,&#xd;
      &quot;ROPDescription&quot;: &quot;1. Image of the creative.&lt;/n&gt; 2. Invoice.&lt;/n&gt; 3. One (1) original full-page tear sheet. (A tear heet is a page from the publication that serves as verification that the advertisement was published).&quot;,&#xd;
      &quot;DigitalandSocialMediaName&quot;: &quot;Digital and Social Media&quot;,&#xd;
      &quot;DigitalandSocialMediaDescription&quot;: &quot;1. Image of the Creative (Screenshot of the ad from the system or mobile).&lt;/n&gt; 2. Invoice.&quot;,&#xd;
      &quot;OutofHomeName&quot;: &quot;Out of Home&quot;,&#xd;
      &quot;OutofHomeDescription&quot;: &quot;1. Image of the Billboard.&lt;/n&gt; 2. Invoice.&quot;,&#xd;
      &quot;SponsorshipName&quot;: &quot;Sponsorship&quot;,&#xd;
      &quot;PrePrintName&quot;: &quot;Pre Print&quot;,&#xd;
      &quot;TVName&quot;: &quot;TV&quot;,&#xd;
      &quot;TVDescription&quot;: &quot;1. Invoice.&lt;/n&gt; 2. Notarized script with approved ANA/RAB or ANA TVB certification and net cost of spots.&quot;,&#xd;
      &quot;ReceiptAdvertisingName&quot;: &quot;Receipt Advertising&quot;,&#xd;
      &quot;BlueCMNBucketName&quot;: &quot;Blue CMN Bucket&quot;,&#xd;
      &quot;RadioName&quot;: &quot;Radio&quot;,&#xd;
      &quot;RadioDescription&quot;: &quot;1. Invoice.&lt;/n&gt; 2. Notarized script with approved ANA/RAB or ANA TVB certification and net cost of spots.&quot;,&#xd;
      &quot;ReimbursementType&quot;: &quot;Fixed&quot;,&#xd;
      &quot;FixedReimbursement&quot;: 10,&#xd;
      &quot;AllowCapping&quot;: &quot;yes&quot;,&#xd;
      &quot;DirectMail&quot;: false,&#xd;
      &quot;Fleetgraphics&quot;: false,&#xd;
      &quot;ROP&quot;: false,&#xd;
      &quot;DigitalandSocialMedia&quot;: true,&#xd;
      &quot;OutofHome&quot;: false,&#xd;
      &quot;Sponsorship&quot;: false,&#xd;
      &quot;SponsorshipDescription&quot;: &quot;&quot;,&#xd;
      &quot;PrePrint&quot;: false,&#xd;
      &quot;PrePrintDescription&quot;: &quot;&quot;,&#xd;
      &quot;TV&quot;: true,&#xd;
      &quot;ReceiptAdvertising&quot;: false,&#xd;
      &quot;ReceiptAdvertisingDescription&quot;: &quot;&quot;,&#xd;
      &quot;BlueCMNBucket&quot;: false,&#xd;
      &quot;BlueCMNBucketDescription&quot;: &quot;&quot;,&#xd;
      &quot;Radio&quot;: false,&#xd;
      &quot;ActivitiesTableTextField&quot;: &quot;&quot;,&#xd;
      &quot;DirectMailRP&quot;: null,&#xd;
      &quot;DirectMailCapRP&quot;: null,&#xd;
      &quot;FleetgraphicsRP&quot;: null,&#xd;
      &quot;FleetgraphicsCapRP&quot;: null,&#xd;
      &quot;ROPRP&quot;: null,&#xd;
      &quot;ROPCapRP&quot;: null,&#xd;
      &quot;DigitalandSocialMediaRP&quot;: null,&#xd;
      &quot;DigitalandSocialMediaCapRP&quot;: 55,&#xd;
      &quot;OutofHomeRP&quot;: null,&#xd;
      &quot;OutofHomeCapRP&quot;: null,&#xd;
      &quot;SponsorshipRP&quot;: null,&#xd;
      &quot;SponsorshipCapRP&quot;: null,&#xd;
      &quot;PrePrintRP&quot;: null,&#xd;
      &quot;PrePrintCapRP&quot;: null,&#xd;
      &quot;TVRP&quot;: null,&#xd;
      &quot;TVCapRP&quot;: 25,&#xd;
      &quot;ReceiptAdvertisingRP&quot;: null,&#xd;
      &quot;ReceiptAdvertisingCapRP&quot;: null,&#xd;
      &quot;BlueCMNBucketRP&quot;: null,&#xd;
      &quot;BlueCMNBucketCapRP&quot;: null,&#xd;
      &quot;RadioRP&quot;: null,&#xd;
      &quot;RadioCapRP&quot;: null&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;programsace&quot;,&#xd;
  &quot;ProgramStatusId&quot;: 3&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/ChannelBuilder/v1/Programs?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will create a program</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1170183121">&quot;Program Created successfully.&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Programs/GetProgramsForDashboard-GET" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11071/api/ChannelBuilder/v1/Programs/GetProgramsForDashboard?tenantId=acehardware</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522829120000</longProp>
        <longProp name="ThreadGroup.end_time">1522829120000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DashboardPrograms" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/Programs/GetProgramsForDashboard?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-this will fetch Programs for Dashboard</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="34333898">&quot;_id&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="35548181">&quot;ProgramName&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">programid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..$oid</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${programid_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${programid_1}&quot;);
String[] prgid = vars.get(&quot;programid_ALL&quot;).split(&quot;,&quot;); 
int len = prgid.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList numProgramid = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	numProgramid.add(prgid[i]);
}
bsh.shared.numProgramid=numProgramid;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">pname</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..ProgramName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${pname_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${pname_1}&quot;);
String[] prgname = vars.get(&quot;pname_ALL&quot;).split(&quot;,&quot;); 
int len = prgname.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList Programname = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	Programname.add(prgname[i]);
}
bsh.shared.Programname=Programname;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">userid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..CreatedByUserId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${userid_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${userid_1}&quot;);
String[] usridobj = vars.get(&quot;userid_ALL&quot;).split(&quot;,&quot;); 
int len = usridobj.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList UserId = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	UserId.add(usridobj[i]);
}

var UserId=&quot;3512177&quot;;
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${bsh.shared.UserId}&quot;);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/GetMarketingFundAccounts-POST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/GetMarketingFundAccounts?tenantId=acehardware</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetMarketingFundAccounts1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
{&quot;StoreNo&quot;: &quot;00020&quot;,&quot;ProgramId&quot;: &quot;${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&quot;}&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/GetMarketingFundAccounts?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">marketingFundAccountId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..MarketingFundAccountId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${marketingFundAccountId_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${marketingFundAccountId_1}&quot;);
String[] mfaobj = vars.get(&quot;marketingFundAccountId_ALL&quot;).split(&quot;,&quot;); 
int len = mfaobj.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList MFAid = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	MFAid.add(mfaobj[i]);
}
bsh.shared.MFAid=MFAid;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">lmeid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..LMEId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${lmeid_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${lmeid_1}&quot;);
String[] lmeidobj = vars.get(&quot;lmeid_ALL&quot;).split(&quot;,&quot;); 
int len = lmeidobj.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList LMEid = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	LMEid.add(lmeidobj[i]);
}
bsh.shared.LMEid=LMEid;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Transaction/Transaction-POST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1517832774000</longProp>
        <longProp name="ThreadGroup.end_time">1517832774000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AllocateAccrual" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
{&#xd;
  &quot;MarketingFundAccountTransactionId&quot;: 0,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;${__BeanShell(bsh.shared.MFAid.get(${a}),)}&quot;,&#xd;
  &quot;MarketingFundAccountTransactionType&quot;: &quot;PositiveAccrual&quot;,&#xd;
  &quot;TransactionAmount&quot;: 40000,&#xd;
  &quot;TransactionPeriod&quot;: &quot;04/2018&quot;,&#xd;
  &quot;Comments&quot;: &quot;400 dollars accrued&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;3512177&quot;,&#xd;
  &quot;CreatedDate&quot;: &quot;2018-05-04T06:10:05.438Z&quot;,&#xd;
  &quot;ModifiedByUserId&quot;: &quot;3512177&quot;,&#xd;
  &quot;ModifiedDate&quot;: &quot;2018-05-04T06:10:05.438Z&quot;,&#xd;
  &quot;MarketingFundAccountTransactionSourceName&quot;: &quot;System&quot;&#xd;
}&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ChannelBuilder/v1/Transaction/Transaction?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/ProgramSnapshot-GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/ProgramSnapshot?programId=12&amp;lmeList=122&amp;tenantId=acehardware</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetProgramSnapshot1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/ProgramSnapshot?programId=${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&amp;lmeList=${__BeanShell(bsh.shared.LMEid.get(${a}),)}&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/ProgramMappedLmeAndAvailableAmount-GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/ProgramMappedLmeAndAvailableAmount?programId=12&amp;tenantId=acehardware&amp;transactionProcessType=claim</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get list of LME" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/ProgramMappedLmeAndAvailableAmount?programId=${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&amp;tenantId=acehardware&amp;transactionProcessType=Claim</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/ExpiringAmount-GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/ExpiringAmount?programId=123&amp;lmeList=12&amp;accrualPeriod=12&amp;tenantId=acehardware</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetExpiringAmount1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/ExpiringAmount?programId=${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&amp;lmeList=${__BeanShell(bsh.shared.LMEid.get(${a}),)}&amp;accrualPeriod=04/2018&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/GetMarketingFundAccountsDetails_Bulk--GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetMarketingFundAccountsDetails_Bulk" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/GetMarketingFundAccountsDetails_Bulk?tenantId=acehardware&amp;programName=</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/GetEstimateBalance--GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetEstimateBalance1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/GetEstimateBalance?programId=${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&amp;overdrawnProgramId=${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&amp;lmeId=${__BeanShell(bsh.shared.LMEid.get(${a}),)}&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">/api/MarketingFundAccount/v1/MarketingFundAccount/GetEstimateBalance?programId=${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&amp;lmeId=${__BeanShell(bsh.shared.LMEid.get(${a}),)}&amp;tenantId=acehardware</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/AddUpdateMarketingFundAccount--PSOT" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Api to Allocate Accruals" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/AddUpdateMarketingFundAccount?tenantId=acehardware&amp;conditionalOperater=&amp;StoreIds=</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/GetEstimateBalanceForAccrual-GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/GetEstimateBalanceForAccrual?programId=12&amp;lmeId=12&amp;tenantId=acehardware</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetEstimateBalanceForAccrual1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/GetEstimateBalanceForAccrual?programId=${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&amp;lmeId=${__BeanShell(bsh.shared.LMEid.get(${a}),)}&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/GetLMEForProgram-GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/GetLMEForProgram?lmeList=12&amp;programId=123</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetLMEForProgram1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/GetLMEForProgram?lmeList=${__BeanShell(bsh.shared.LMEid.get(${a}),)}&amp;programId=${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/Transaction-POST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/Transaction</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AllocateAccruals1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
{&#xd;
  &quot;MarketingFundAccountTransactionId&quot;: 0,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;${__BeanShell(bsh.shared.MFAid.get(${a}),)}&quot;,&#xd;
  &quot;MarketingFundAccountTransactionType&quot;: &quot;PositiveAccrual&quot;,&#xd;
  &quot;TransactionAmount&quot;: 400,&#xd;
  &quot;TransactionPeriod&quot;: &quot;04/2018&quot;,&#xd;
  &quot;Comments&quot;: &quot;400 dollars accrued&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;${__BeanShell(bsh.shared.UserId.get(${a}),)}&quot;,&#xd;
  &quot;CreatedDate&quot;: &quot;2018-05-04T06:10:05.438Z&quot;,&#xd;
  &quot;ModifiedByUserId&quot;: &quot;${__BeanShell(bsh.shared.UserId.get(${a}),)}&quot;,&#xd;
  &quot;ModifiedDate&quot;: &quot;2018-05-04T06:10:05.438Z&quot;,&#xd;
  &quot;MarketingFundAccountTransactionSourceName&quot;: &quot;System&quot;&#xd;
}&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/Transaction?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/Transfer-POST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/Transfer</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TransferAccruals1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;MarketingFundAccountId&quot;: &quot;${__BeanShell(bsh.shared.MFAid.get(${a}),)}&quot;,&#xd;
    &quot;TransactionAmount&quot;: 500,&#xd;
    &quot;MarketingFundAccountTransactionType&quot;: &quot;NegativeTransfer&quot;,&#xd;
    &quot;TransactionPeriod&quot;: &quot;&quot;,&#xd;
    &quot;Comments&quot;: &quot;Transferring&quot;,&#xd;
    &quot;CreatedByUserId&quot;: &quot;${__BeanShell(bsh.shared.UserId.get(${a}),)}&quot;,&#xd;
    &quot;ModifiedByUserId&quot;: &quot;${__BeanShell(bsh.shared.UserId.get(${a}),)}&quot;,&#xd;
    &quot;MarketingFundAccountTransactionSourceName&quot;: &quot;System&quot;&#xd;
  },&#xd;
  {&#xd;
    &quot;MarketingFundAccountId&quot;: &quot;${__BeanShell(bsh.shared.MFAidtransfer.get(${a}),)}&quot;,&#xd;
    &quot;TransactionAmount&quot;: 500,&#xd;
    &quot;MarketingFundAccountTransactionType&quot;: &quot;PositiveTransfer&quot;,&#xd;
    &quot;TransactionPeriod&quot;: &quot;05/2018&quot;,&#xd;
    &quot;Comments&quot;: &quot;Transferring&quot;,&#xd;
    &quot;CreatedByUserId&quot;: &quot;${__BeanShell(bsh.shared.UserId.get(${a}),)}&quot;,&#xd;
    &quot;ModifiedByUserId&quot;: &quot;${__BeanShell(bsh.shared.UserId.get(${a}),)}&quot;,&#xd;
    &quot;MarketingFundAccountTransactionSourceName&quot;: &quot;System&quot;&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/Transfer?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/GetTransactionPeriod-GET-GET---Programs_Post method need to work for this" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/GetTransactionPeriod?AccId=123&amp;startDate=12&amp;accrualType=12&amp;expirationDate=12&amp;accrualPeriod=12&amp;transactionProcessType=claim</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetTransactionPeriod1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ChannelBuilder/v1/Transaction/GetTransactionPeriod?AccId=${__BeanShell(bsh.shared.MFAid.get(${a}),)}&amp;startDate=${StartDate}&amp;accrualType=Flat&amp;ExpirationDate=${ExpiryDate}&amp;accrualPeriod=0&amp;transactionProcessType=Claim&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">yyyy-mm-dd</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/AccrualUploadSample-GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/AccrualUploadSample</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AccrualUploadSample1+" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="C:\Users\prasanna.lakshmi\Downloads\AccrualUploadSample (1).xlsx" elementType="HTTPFileArg">
                <stringProp name="File.path">C:\Users\prasanna.lakshmi\Downloads\AccrualUploadSample (1).xlsx</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype"></stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/MarketingFundAccount/AccrualUploadSample?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/TransactionList-GET-bug raised" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/TransactionList?programId=123&amp;TransactionTypeId=3&amp;tenantId=acehardware</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TransactionList1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/TransactionList?programId=${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&amp;TransactionTypeId=3&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">${__BeanShell(bsh.shared.numProgramid.get(${a}),)}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/saveAndProcessClaim-POST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519996954000</longProp>
        <longProp name="ThreadGroup.end_time">1519996954000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;${__BeanShell(bsh.shared.LMEid.get(${a}),)}&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;${__BeanShell(bsh.shared.MFAid.get(${a}),)}&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;${__BeanShell(bsh.shared.Programname.get(${a}),)}&quot;,&#xd;
  &quot;LMEName&quot;: &quot;(HQ) John W Weiss Ace Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Digital and Social Media&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;new claim from API&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Digital and Social Media&quot;,&#xd;
    &quot;RmbPercentage&quot;: 10,&#xd;
    &quot;Description&quot;: &quot;1. Image of the Creative (Screenshot of the ad from the system or mobile).&lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 55,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-03-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-13T18:30:00.000Z&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200000000&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;10 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;20000&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;20&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&quot;,&#xd;
  &quot;ClaimStatusName&quot;: &quot;Approved&quot;,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;Newinvoice 123&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/saveAndProcessClaim?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will create Claim</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">lmeclaimid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..*</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">byte [] samplerdataobj = ctx.getPreviousResult().getResponseData();
String lclaimid = new String(samplerdataobj);
log.info(&quot;=======&gt;&quot;+lclaimid);
String lnewclaimid= lclaimid.replaceAll(&quot;^\&quot;|\&quot;$&quot;, &quot;&quot;);
log.info(&quot;newclaimid========&gt;&quot;+lnewclaimid);
bsh.shared.lnewclaimid=lnewclaimid;
log.info(&quot;=======&gt;&quot;+bsh.shared.lnewclaimid);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 2-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a9785962a97e1115c8e7305Invalid&quot; // invalid value&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;07204&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;57452145-8154-4a0d-b103-5fbb3d8bc44f&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;PY-Prog1-March1&quot;,&#xd;
  &quot;LMEName&quot;: &quot;Meanley &amp; Son Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 20,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 50,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-02-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-06T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;400&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;20 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;40.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;10&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a9785962a97e1115c8e7305&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;invoice 123&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Create a Claim for a program which has not been accrued (No Avialable amount)</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 3-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a9785962a97e1115c8e7305Invalid&quot; // invalid value&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;07204&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;57452145-8154-4a0d-b103-5fbb3d8bc44f&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;PY-Prog1-March1&quot;,&#xd;
  &quot;LMEName&quot;: &quot;Meanley &amp; Son Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 20,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 50,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-02-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-06T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;400&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;20 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;40.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;10&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a9785962a97e1115c8e7305&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;invoice 123&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Don&apos;t pass or Pass Invalid value for Mandatory fields like Program Id</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 4-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a9785962a97e1115c8e7305&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;07204&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;57452145-8154-4a0d-b103-5fbb3d8bc44f&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;PY-Prog1-March1&quot;,&#xd;
  &quot;LMEName&quot;: &quot;Meanley &amp; Son Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 20,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 50,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-06-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-06T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;400&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;20 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;40.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;10&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a9785962a97e1115c8e7305&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;invoice 123&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass End date is less than start date</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 5-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a9785962a97e1115c8e7305&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;07204&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;57452145-8154-4a0d-b103-5fbb3d8bc44f&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;PY-Prog1-March1&quot;,&#xd;
  &quot;LMEName&quot;: &quot;Meanley &amp; Son Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 20,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 50,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-06-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-06T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;400&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;20 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;40.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a9785962a97e1115c8e7305&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;invoice 123&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Don&apos;t pass Requested Amount value</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 6-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a9785962a97e1115c8e7305&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;07204&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;57452145-8154-4a0d-b103-5fbb3d8bc44f&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;PY-Prog1-March1&quot;,&#xd;
  &quot;LMEName&quot;: &quot;Meanley &amp; Son Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 20,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 50,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-06-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-06T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;400&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;20 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;40.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a9785962a97e1115c8e7305&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;&quot; // no file upload&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;invoice 123&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Don&apos;t Attach any supporting document</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 7-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a9785962a97e1115c8e7305&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;07204&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;57452145-8154-4a0d-b103-5fbb3d8bc44f&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;PY-Prog1-March1&quot;,&#xd;
  &quot;LMEName&quot;: &quot;Meanley &amp; Son Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 20,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 50,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-06-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-06T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;400&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;20 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;40.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a9785962a97e1115c8e7305&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;&quot; // No invoice &#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Don&apos;t pass Invoice value</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/GetBalanceForProgram-GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/GetBalanceForProgram?userId=35&amp;programIdList=12&amp;tenantId=acehardware</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetBalanceForProgram1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/GetBalanceForProgram?userId=3512176&amp;programIdList=${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/CappingAmount-GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/CappingAmount?programId=12&amp;lmeId=12&amp;tenantId=acehardware&amp;claimIds=12</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetCappingAmount1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/CappingAmount?programId=${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&amp;lmeId=${__BeanShell(bsh.shared.LMEid.get(${a}),)}&amp;tenantId=acehardware&amp;claimIds=${__BeanShell(bsh.shared.lnewclaimid)}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/GetMarketingFundAccountDetails-GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/GetMarketingFundAccountDetails?tenantId=acehardware</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetMarketingFundAccountDetails1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/GetMarketingFundAccountDetails?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/GetProgramIdAndLMEIds-POST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/GetProgramIdAndLMEIds</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetProgramIdAndLMEId1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;lmeIds&quot;: &quot;${__BeanShell(bsh.shared.LMEid.get(${a}),)}&quot;,&#xd;
  &quot;tenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;programIds&quot;: &quot;${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/GetProgramIdAndLMEIds?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/GetLMEIdAndLMEName-POST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/GetLMEIdAndLMEName</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetLMEIdAndLMEName1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;lmeIds&quot;: &quot;${__BeanShell(bsh.shared.LMEid.get(${a}),)}&quot;,&#xd;
  &quot;tenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;programIds&quot;: &quot;${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/GetLMEIdAndLMEName?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/GetLMEMappedPrograms-POST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/GetLMEMappedPrograms</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetLMEMappedPrograms1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;lmeIds&quot;: &quot;${__BeanShell(bsh.shared.LMEid.get(${a}),)}&quot;,&#xd;
  &quot;tenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;programIds&quot;: &quot;${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/GetLMEMappedPrograms?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/GetClaimBalance--POST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetClaimBalance" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/GetClaimBalance?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/GetParentLmeId--GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetParentLmeId" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/GetParentLmeId?tenantId=acehardware&amp;lmeId=</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/GetLmeForEDPS--GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetEligibleAmountForPayment1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/GetLmeForEDPS?tenantId=acehardware&amp;lmeId=</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/GetEligibleAmountForPayment-GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/GetEligibleAmountForPayment?userId=123&amp;programIdList=123&amp;tenantId=acehardware</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetEligibleAmountForPayment1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/GetEligibleAmountForPayment?userId=${__BeanShell(bsh.shared.UserId.get(${a}),)}&amp;programIdList=${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/GetDisplayNameForLME-GET--------method not there in swagger" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/GetDisplayNameForLME?lme=123</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDisplayNameForLME1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/MarketingFundAccount/GetDisplayNameForLME?lme=${__BeanShell(bsh.shared.LMEid.get(${a}),)}?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/Programs/{id}-DELETE-----Not Working" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11071/api/ChannelBuilder/v1/Programs/{id}</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1518071369000</longProp>
        <longProp name="ThreadGroup.end_time">1518071369000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete a Program 1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">11071</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ChannelBuilder/v1/Programs/${__BeanShell(bsh.shared.numProgramid.get(${a}),)}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">This will delete a program by passing Program Id</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>true</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Repeat-/Programs-POST--for rolling expiry amount" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11071/api/ChannelBuilder/v1/Programs?tenantId=tenant1</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1517563758000</longProp>
        <longProp name="ThreadGroup.end_time">1517563758000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Repeat Create New Program1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ClaimDecisionId&quot;: &quot;24&quot;,&#xd;
  &quot;FundDistributionHierarchy&quot;: &quot;org&quot;,&#xd;
  &quot;HierarchyLevel&quot;: &quot;6,7&quot;,&#xd;
  &quot;Documents&quot;: [],&#xd;
  &quot;ProgramName&quot;: &quot;API-${__javaScript(new Date().getTime();)}&quot;,&#xd;
  &quot;Description&quot;: &quot;Creating a Program&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;StartDate&quot;: &quot;${StartDate}&quot;,&#xd;
  &quot;EndDate&quot;: &quot;${EndDate}&quot;,&#xd;
  &quot;ClaimWorkflowId&quot;: 23,&#xd;
  &quot;AllowOverdraft&quot;: &quot;Yes&quot;,&#xd;
  &quot;BrandingRequired&quot;: &quot;Yes&quot;,&#xd;
  &quot;AllowECom&quot;: &quot;yes&quot;,&#xd;
  &quot;AccrualType&quot;: &quot;Flat&quot;,&#xd;
  &quot;FlatAccrualPeriod&quot;: &quot;&quot;,&#xd;
  &quot;RollingAccrualPeriod&quot;: &quot;9 months&quot;,&#xd;
  &quot;LastTransactionDate&quot;: &quot;${ClaimDate}&quot;,&#xd;
  &quot;ExpirationDate&quot;: &quot;${ExpiryDate}&quot;,&#xd;
  &quot;Activities&quot;: [&#xd;
    {&#xd;
      &quot;DirectMailName&quot;: &quot;Direct Mail&quot;,&#xd;
      &quot;DirectMailDescription&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
      &quot;FleetgraphicsDescription&quot;: &quot;1. Image of the creative.&lt;/n&gt; 2. Invoice.&quot;,&#xd;
      &quot;FleetgraphicsName&quot;: &quot;Fleet graphics&quot;,&#xd;
      &quot;ROPName&quot;: &quot;ROP&quot;,&#xd;
      &quot;ROPDescription&quot;: &quot;1. Image of the creative.&lt;/n&gt; 2. Invoice.&lt;/n&gt; 3. One (1) original full-page tear sheet. (A tear heet is a page from the publication that serves as verification that the advertisement was published).&quot;,&#xd;
      &quot;DigitalandSocialMediaName&quot;: &quot;Digital and Social Media&quot;,&#xd;
      &quot;DigitalandSocialMediaDescription&quot;: &quot;1. Image of the Creative (Screenshot of the ad from the system or mobile).&lt;/n&gt; 2. Invoice.&quot;,&#xd;
      &quot;OutofHomeName&quot;: &quot;Out of Home&quot;,&#xd;
      &quot;OutofHomeDescription&quot;: &quot;1. Image of the Billboard.&lt;/n&gt; 2. Invoice.&quot;,&#xd;
      &quot;SponsorshipName&quot;: &quot;Sponsorship&quot;,&#xd;
      &quot;PrePrintName&quot;: &quot;Pre Print&quot;,&#xd;
      &quot;TVName&quot;: &quot;TV&quot;,&#xd;
      &quot;TVDescription&quot;: &quot;1. Invoice.&lt;/n&gt; 2. Notarized script with approved ANA/RAB or ANA TVB certification and net cost of spots.&quot;,&#xd;
      &quot;ReceiptAdvertisingName&quot;: &quot;Receipt Advertising&quot;,&#xd;
      &quot;BlueCMNBucketName&quot;: &quot;Blue CMN Bucket&quot;,&#xd;
      &quot;RadioName&quot;: &quot;Radio&quot;,&#xd;
      &quot;RadioDescription&quot;: &quot;1. Invoice.&lt;/n&gt; 2. Notarized script with approved ANA/RAB or ANA TVB certification and net cost of spots.&quot;,&#xd;
      &quot;ReimbursementType&quot;: &quot;Fixed&quot;,&#xd;
      &quot;FixedReimbursement&quot;: 10,&#xd;
      &quot;AllowCapping&quot;: &quot;yes&quot;,&#xd;
      &quot;DirectMail&quot;: false,&#xd;
      &quot;Fleetgraphics&quot;: false,&#xd;
      &quot;ROP&quot;: false,&#xd;
      &quot;DigitalandSocialMedia&quot;: true,&#xd;
      &quot;OutofHome&quot;: false,&#xd;
      &quot;Sponsorship&quot;: false,&#xd;
      &quot;SponsorshipDescription&quot;: &quot;&quot;,&#xd;
      &quot;PrePrint&quot;: false,&#xd;
      &quot;PrePrintDescription&quot;: &quot;&quot;,&#xd;
      &quot;TV&quot;: true,&#xd;
      &quot;ReceiptAdvertising&quot;: false,&#xd;
      &quot;ReceiptAdvertisingDescription&quot;: &quot;&quot;,&#xd;
      &quot;BlueCMNBucket&quot;: false,&#xd;
      &quot;BlueCMNBucketDescription&quot;: &quot;&quot;,&#xd;
      &quot;Radio&quot;: false,&#xd;
      &quot;ActivitiesTableTextField&quot;: &quot;&quot;,&#xd;
      &quot;DirectMailRP&quot;: null,&#xd;
      &quot;DirectMailCapRP&quot;: null,&#xd;
      &quot;FleetgraphicsRP&quot;: null,&#xd;
      &quot;FleetgraphicsCapRP&quot;: null,&#xd;
      &quot;ROPRP&quot;: null,&#xd;
      &quot;ROPCapRP&quot;: null,&#xd;
      &quot;DigitalandSocialMediaRP&quot;: null,&#xd;
      &quot;DigitalandSocialMediaCapRP&quot;: 55,&#xd;
      &quot;OutofHomeRP&quot;: null,&#xd;
      &quot;OutofHomeCapRP&quot;: null,&#xd;
      &quot;SponsorshipRP&quot;: null,&#xd;
      &quot;SponsorshipCapRP&quot;: null,&#xd;
      &quot;PrePrintRP&quot;: null,&#xd;
      &quot;PrePrintCapRP&quot;: null,&#xd;
      &quot;TVRP&quot;: null,&#xd;
      &quot;TVCapRP&quot;: 25,&#xd;
      &quot;ReceiptAdvertisingRP&quot;: null,&#xd;
      &quot;ReceiptAdvertisingCapRP&quot;: null,&#xd;
      &quot;BlueCMNBucketRP&quot;: null,&#xd;
      &quot;BlueCMNBucketCapRP&quot;: null,&#xd;
      &quot;RadioRP&quot;: null,&#xd;
      &quot;RadioCapRP&quot;: null&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;programsace&quot;,&#xd;
  &quot;ProgramStatusId&quot;: 3&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">11071</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ChannelBuilder/v1/Programs?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will create a program</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1170183121">&quot;Program Created successfully.&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Repeat-/Programs/GetProgramsForDashboard" enabled="true">
        <stringProp name="TestPlan.comments">http://azweb02u:11071/api/ChannelBuilder/v1/Programs/GetProgramsForDashboard?tenantId=acehardware</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522829120000</longProp>
        <longProp name="ThreadGroup.end_time">1522829120000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Repeat-DashboardPrograms" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ChannelBuilder/v1/Programs/GetProgramsForDashboard?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-this will fetch Programs for Dashboard</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="34333898">&quot;_id&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="35548181">&quot;ProgramName&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">programid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..$oid</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${programid_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${programid_1}&quot;);
String[] prgid = vars.get(&quot;programid_ALL&quot;).split(&quot;,&quot;); 
int len = prgid.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList numProgramidrolling = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	numProgramidrolling.add(prgid[i]);
}
bsh.shared.numProgramidrolling=numProgramidrolling;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">pname</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..ProgramName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${pname_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${pname_1}&quot;);
String[] prgname = vars.get(&quot;pname_ALL&quot;).split(&quot;,&quot;); 
int len = prgname.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList Programname = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	Programname.add(prgname[i]);
}
bsh.shared.Programname=Programname;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">userid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..CreatedByUserId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${userid_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${userid_1}&quot;);
String[] usridobj = vars.get(&quot;userid_ALL&quot;).split(&quot;,&quot;); 
int len = usridobj.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList UserId = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	UserId.add(usridobj[i]);
}

var UserId=&quot;3512177&quot;;
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${bsh.shared.UserId}&quot;);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Repeat-GET Marketing Fund Accounts-Reference" enabled="true">
        <stringProp name="TestPlan.comments">This will fetch all the Marketing Fund Account Id&apos;s for a Program</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1520422596000</longProp>
        <longProp name="ThreadGroup.end_time">1520422596000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Repeat-POST_MarketingFundAccount/GetMarketingFundAccounts" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
{&quot;StoreNo&quot;: &quot;00020&quot;,&quot;ProgramId&quot;: &quot;${__BeanShell(bsh.shared.numProgramidrolling.get(${a}),)}&quot;}&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/MarketingFundAccount/GetMarketingFundAccounts?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">marketingFundAccountId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..MarketingFundAccountId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${marketingFundAccountId_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${marketingFundAccountId_1}&quot;);
String[] mfaobjr = vars.get(&quot;marketingFundAccountId_ALL&quot;).split(&quot;,&quot;); 
int len = mfaobjr.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList MFAidrolling = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	MFAidrolling.add(mfaobjr[i]);
}
bsh.shared.MFAidrolling=MFAidrolling;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">lmeid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..LMEId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${lmeid_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${lmeid_1}&quot;);
String[] lmeidobj = vars.get(&quot;lmeid_ALL&quot;).split(&quot;,&quot;); 
int len = lmeidobj.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList LMEid = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	LMEid.add(lmeidobj[i]);
}
bsh.shared.LMEid=LMEid;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Repeat-/Transaction/Transaction-POST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1517832774000</longProp>
        <longProp name="ThreadGroup.end_time">1517832774000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Repeat-AllocateAccrual" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
{&#xd;
  &quot;MarketingFundAccountTransactionId&quot;: 0,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;${__BeanShell(bsh.shared.MFAidrolling.get(${a}),)}&quot;,&#xd;
  &quot;MarketingFundAccountTransactionType&quot;: &quot;PositiveAccrual&quot;,&#xd;
  &quot;TransactionAmount&quot;: 400,&#xd;
  &quot;TransactionPeriod&quot;: &quot;07/2018&quot;,&#xd;
  &quot;Comments&quot;: &quot;400 dollars accrued&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;${UserId}&quot;,&#xd;
  &quot;CreatedDate&quot;: &quot;2018-05-04T06:10:05.438Z&quot;,&#xd;
  &quot;ModifiedByUserId&quot;: &quot;${UserId}&quot;,&#xd;
  &quot;ModifiedDate&quot;: &quot;2018-05-04T06:10:05.438Z&quot;,&#xd;
  &quot;MarketingFundAccountTransactionSourceName&quot;: &quot;System&quot;&#xd;
}&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ChannelBuilder/v1/Transaction/Transaction?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/GetExpiringAmountForRolling--GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetExpiringAmountForRolling" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/GetExpiringAmountForRolling?programId=5caddcf92d0fe400014d69b4&amp;startDate=${StartDate}&amp;endDate=${EndDate}&amp;RollingAccrualPeriod=9 months&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-this will fetch Programs for Dashboard    </stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/TransferedList-GET--------new data" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/GetEligibleAmountForPayment?userId=123&amp;programIdList=123&amp;tenantId=acehardware</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TransferedList1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/TransferedList?programId=${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&amp;TransactionTypeId=6,7&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/HardDeleteProgram-DELETE" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/GetEligibleAmountForPayment?userId=123&amp;programIdList=123&amp;tenantId=acehardware</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HardDeleteProgram1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
&quot;ProgramIds&quot;: &quot;123,456&quot;	&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/HardDeleteProgram?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/CreateMarketingFundAccount-POST-this will be called from programs/save method" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">5</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/CreateMarketingFundAccount?tenantId=acehardware</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateMFA" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;ProgramId&quot; : &quot;${ProgramId}&quot;,&#xd;
    &quot;ClaimDecisionId&quot; : &quot;24&quot;,&#xd;
    &quot;FundDistributionHierarchy&quot; : &quot;org&quot;,&#xd;
    &quot;hierarchyLevel&quot; : &quot;6,7&quot;,&#xd;
    &quot;Documents&quot; : [ &#xd;
        {&#xd;
            &quot;name&quot; : &quot;${name}&quot;,&#xd;
            &quot;size&quot; : 11590&#xd;
        }&#xd;
    ],&#xd;
    &quot;ProgramName&quot; : &quot;${ProgramName}&quot;,&#xd;
    &quot;Description&quot; : &quot;${Description}&quot;,&#xd;
    &quot;ProgramCurrency&quot; : &quot;USD&quot;,&#xd;
    &quot;StartDate&quot; : &quot;${StartDate}&quot;,&#xd;
    &quot;EndDate&quot; : &quot;${EndDate}&quot;,&#xd;
    &quot;ClaimWorkflowId&quot; : 23,&#xd;
    &quot;AllowClaimOverdrawn&quot; : &quot;${AllowClaimOverdrawn}&quot;,&#xd;
    &quot;BrandingRequired&quot; : &quot;${BrandingRequired}&quot;,&#xd;
    &quot;AllowECom&quot; : &quot;${AllowECom}&quot;,&#xd;
    &quot;AccrualType&quot; : &quot;Flat&quot;,&#xd;
    &quot;FlatAccrualPeriod&quot; : &quot;Annual&quot;,&#xd;
    &quot;RollingAccrualPeriod&quot; : &quot;&quot;,&#xd;
    &quot;LastTransactionDate&quot; : &quot;${LastTransactionDate}&quot;,&#xd;
    &quot;ExpirationDate&quot; : &quot;${ExpirationDate}&quot;,&#xd;
    &quot;Activities&quot; : [ &#xd;
        {&#xd;
            &quot;DirectMailName&quot; : &quot;Direct Mail&quot;,&#xd;
            &quot;DirectMailDescription&quot; : &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
            &quot;FleetgraphicsDescription&quot; : &quot;1. Image of the creative.&lt;/n&gt; 2. Invoice.&quot;,&#xd;
            &quot;FleetgraphicsName&quot; : &quot;Fleet Graphics&quot;,&#xd;
            &quot;ROPName&quot; : &quot;ROP&quot;,&#xd;
            &quot;ROPDescription&quot; : &quot;1. Image of the creative.&lt;/n&gt; 2. Invoice.&lt;/n&gt; 3. One (1) original full-page tear sheet. (A tear heet is a page from the publication that serves as verification that the advertisement was published).&quot;,&#xd;
            &quot;DigitalandSocialMediaName&quot; : &quot;Digital and Social Media&quot;,&#xd;
            &quot;DigitalandSocialMediaDescription&quot; : &quot;1. Image of the Creative (Screenshot of the ad from the system or mobile).&lt;/n&gt; 2. Invoice.&quot;,&#xd;
            &quot;OutofHomeName&quot; : &quot;Out of Home&quot;,&#xd;
            &quot;OutofHomeDescription&quot; : &quot;1. Image of the Billboard.&lt;/n&gt; 2. Invoice.&quot;,&#xd;
            &quot;SponsorshipName&quot; : &quot;Sponsorship&quot;,&#xd;
            &quot;PrePrintName&quot; : &quot;Pre Print&quot;,&#xd;
            &quot;TVName&quot; : &quot;TV&quot;,&#xd;
            &quot;TVDescription&quot; : &quot;1. Invoice.&lt;/n&gt; 2. Notarized script with approved ANA/RAB or ANA TVB certification and net cost of spots.&quot;,&#xd;
            &quot;ReceiptAdvertisingName&quot; : &quot;Receipt Advertising&quot;,&#xd;
            &quot;BlueCMNBucketName&quot; : &quot;Blue CMN Bucket&quot;,&#xd;
            &quot;RadioName&quot; : &quot;Radio&quot;,&#xd;
            &quot;RadioDescription&quot; : &quot;1. Invoice.&lt;/n&gt; 2. Notarized script with approved ANA/RAB or ANA TVB certification and net cost of spots.&quot;,&#xd;
            &quot;JDPowerTourName&quot; : &quot;JD Power Tour&quot;,&#xd;
            &quot;JDPowerTourDescription&quot; : &quot;1. Copy of paid Invoice&quot;,&#xd;
            &quot;OtherName&quot; : &quot;Other&quot;,&#xd;
            &quot;OtherDescription&quot; : &quot;Image of the creative&quot;,&#xd;
            &quot;ReimbursementType&quot; : &quot;${ReimbursementType}&quot;,&#xd;
            &quot;FixedReimbursement&quot; : &quot;${FixedReimbursement}&quot;,&#xd;
            &quot;AllowCapping&quot; : &quot;${AllowCapping}&quot;,&#xd;
            &quot;DirectMail&quot; : &quot;${DirectMail}&quot;,&#xd;
            &quot;Fleetgraphics&quot; : &quot;${Fleetgraphics}&quot;,&#xd;
            &quot;ROP&quot; : &quot;${ROP}&quot;,&#xd;
            &quot;DigitalandSocialMedia&quot; : &quot;${DigitalandSocialMedia}&quot;,&#xd;
            &quot;OutofHome&quot; : &quot;${OutofHome}&quot;,&#xd;
            &quot;Sponsorship&quot; : &quot;${Sponsorship}&quot;,&#xd;
            &quot;SponsorshipDescription&quot; : &quot;&quot;,&#xd;
            &quot;PrePrint&quot; : false,&#xd;
            &quot;PrePrintDescription&quot; : &quot;&quot;,&#xd;
            &quot;TV&quot; : false,&#xd;
            &quot;ReceiptAdvertising&quot; : false,&#xd;
            &quot;ReceiptAdvertisingDescription&quot; : &quot;&quot;,&#xd;
            &quot;BlueCMNBucket&quot; : false,&#xd;
            &quot;BlueCMNBucketDescription&quot; : &quot;&quot;,&#xd;
            &quot;Radio&quot; : false,&#xd;
            &quot;JDPowerTour&quot; : false,&#xd;
            &quot;Other&quot; : false,&#xd;
            &quot;ActivitiesTableTextField&quot; : &quot;&quot;,&#xd;
            &quot;DirectMailRP&quot; : &quot;${DirectMailRP}&quot;,&#xd;
            &quot;DirectMailCapRP&quot; : &quot;${DirectMailCapRP}&quot;,&#xd;
            &quot;FleetgraphicsRP&quot; : null,&#xd;
            &quot;FleetgraphicsCapRP&quot; : null,&#xd;
            &quot;ROPRP&quot; : null,&#xd;
            &quot;ROPCapRP&quot; : null,&#xd;
            &quot;DigitalandSocialMediaRP&quot; : null,&#xd;
            &quot;DigitalandSocialMediaCapRP&quot; : null,&#xd;
            &quot;OutofHomeRP&quot; : null,&#xd;
            &quot;OutofHomeCapRP&quot; : null,&#xd;
            &quot;SponsorshipRP&quot; : null,&#xd;
            &quot;SponsorshipCapRP&quot; : null,&#xd;
            &quot;PrePrintRP&quot; : null,&#xd;
            &quot;PrePrintCapRP&quot; : null,&#xd;
            &quot;TVRP&quot; : null,&#xd;
            &quot;TVCapRP&quot; : null,&#xd;
            &quot;ReceiptAdvertisingRP&quot; : null,&#xd;
            &quot;ReceiptAdvertisingCapRP&quot; : null,&#xd;
            &quot;BlueCMNBucketRP&quot; : null,&#xd;
            &quot;BlueCMNBucketCapRP&quot; : null,&#xd;
            &quot;RadioRP&quot; : null,&#xd;
            &quot;RadioCapRP&quot; : null,&#xd;
            &quot;JDPowerTourRP&quot; : null,&#xd;
            &quot;JDPowerTourCapRP&quot; : null,&#xd;
            &quot;OtherRP&quot; : null,&#xd;
            &quot;OtherCapRP&quot; : null&#xd;
        }&#xd;
    ],&#xd;
    &quot;FormKey&quot; : &quot;programsace&quot;,&#xd;
    &quot;ProgramStatusId&quot; : &quot;${ProgramStatusId}&quot;,&#xd;
    &quot;ModifiedByUserId&quot; : &quot;${ModifiedByUserId}&quot;,&#xd;
    &quot;CreatedByUserId&quot; : &quot;${CreatedByUserId}&quot;,&#xd;
    &quot;TenantId&quot; : &quot;acehardware&quot;&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/MarketingFundAccount/CreateMarketingFundAccount?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">123456.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">ProgramId,name,ProgramName,Description,StartDate,EndDate,AllowClaimOverdrawn,BrandingRequired,AllowECom,LastTransactionDate,ExpirationDate,ReimbursementType,FixedReimbursement,AllowCapping,DirectMail,Fleetgraphics,ROP,DigitalandSocialMedia,OutofHome,Sponsorship,DirectMailRP,DirectMailCapRP,ProgramStatusId,ModifiedByUserId,CreatedByUserId</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://azweb01u:11070/app/ChannelBuilder/v1/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://azweb01u:11070</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="token" elementType="Header">
                <stringProp name="Header.name">token</stringProp>
                <stringProp name="Header.value">eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCIsImtpZCI6IkNfRV9uQ2ZyV2lzS011RnByNG1aR2ZveXpkMCJ9..JaUT5gBq7e8TjH4_zTdX74vSFVzm8lG6E4QrRoPZzXnxkGCFXxa6i_Z_s9tzARPFPkjpl0JpOKkLr6kTpO9kFsklGEkjYBakpK7Uw-L5Mv3yHz_DgIBT5HsLhQoWJIGjIE0HuW0r17l1UwJkcGLJdYzRau-GFZlMVS7W8JtUdDCGCaSQ0Gvis3xbsHmlhuoWcrNEokj_QRywjnisSFTtjd7IWJ6P0y2OjGy1U0DoCB9i5OxSjdb53B9BNVKkSt368BGg6QGy9rBlpcuHeevmgFHFB_n6oHO6mffq1PAQ9e8J6Xj_NOFYg2v4nc6SJSZamhBiNRF8wIGurVRGDMetHA</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/InsertClaimTransactions-POST-Exception" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/InsertClaimTransactions?approvedAmount=20&amp;conditionalOperator=123</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InsertClaimTransactions1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/MarketingFundAccount/InsertClaimTransactions?approvedAmount=20&amp;conditionalOperator=1</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/claims/saveAndProcessClaim-POST-This method is called from ClaimManagement API and tested from ClaimManagement.jmx file" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1519996954000</longProp>
        <longProp name="ThreadGroup.end_time">1519996954000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;596&quot;,&#xd;
  &quot;LMEId&quot;: &quot;${__BeanShell(bsh.shared.LMEid.get(${a}),)}&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;${__BeanShell(bsh.shared.MFAid.get(${a}),)}&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;${__BeanShell(bsh.shared.Programname.get(${a}),)}&quot;,&#xd;
  &quot;LMEName&quot;: &quot;(HQ) John W Weiss Ace Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;DigitalandSocialMedia&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;DigitalandSocialMedia&quot;,&#xd;
    &quot;RmbPercentage&quot;: 10,&#xd;
    &quot;Description&quot;: &quot;1. Image of the Creative (Screenshot of the ad from the system or mobile).&lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 55,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-03-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-13T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;20000&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200000000&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;10 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;20000&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;20&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_${__BeanShell(bsh.shared.numProgramid.get(${a}),)}&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 5,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;Newinvoice 123&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb02u</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Positive Scenario-This will create Claim</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">lmeclaimid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..*</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">byte [] samplerdataobj = ctx.getPreviousResult().getResponseData();
String lclaimid = new String(samplerdataobj);
log.info(&quot;=======&gt;&quot;+lclaimid);
String lnewclaimid= lclaimid.replaceAll(&quot;^\&quot;|\&quot;$&quot;, &quot;&quot;);
log.info(&quot;newclaimid========&gt;&quot;+lnewclaimid);
bsh.shared.lnewclaimid=lnewclaimid;
log.info(&quot;=======&gt;&quot;+bsh.shared.lnewclaimid);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 2-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a9785962a97e1115c8e7305Invalid&quot; // invalid value&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;07204&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;57452145-8154-4a0d-b103-5fbb3d8bc44f&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;PY-Prog1-March1&quot;,&#xd;
  &quot;LMEName&quot;: &quot;Meanley &amp; Son Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 20,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 50,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-02-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-06T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;400&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;20 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;40.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;10&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a9785962a97e1115c8e7305&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;invoice 123&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Create a Claim for a program which has not been accrued (No Avialable amount)</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 3-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a9785962a97e1115c8e7305Invalid&quot; // invalid value&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;07204&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;57452145-8154-4a0d-b103-5fbb3d8bc44f&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;PY-Prog1-March1&quot;,&#xd;
  &quot;LMEName&quot;: &quot;Meanley &amp; Son Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 20,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 50,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-02-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-06T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;400&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;20 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;40.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;10&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a9785962a97e1115c8e7305&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;invoice 123&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Don&apos;t pass or Pass Invalid value for Mandatory fields like Program Id</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 4-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a9785962a97e1115c8e7305&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;07204&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;57452145-8154-4a0d-b103-5fbb3d8bc44f&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;PY-Prog1-March1&quot;,&#xd;
  &quot;LMEName&quot;: &quot;Meanley &amp; Son Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 20,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 50,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-06-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-06T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;400&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;20 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;40.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;10&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a9785962a97e1115c8e7305&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;invoice 123&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Pass End date is less than start date</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 5-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a9785962a97e1115c8e7305&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;07204&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;57452145-8154-4a0d-b103-5fbb3d8bc44f&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;PY-Prog1-March1&quot;,&#xd;
  &quot;LMEName&quot;: &quot;Meanley &amp; Son Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 20,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 50,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-06-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-06T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;400&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;20 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;40.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a9785962a97e1115c8e7305&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;invoice 123&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Don&apos;t pass Requested Amount value</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 6-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a9785962a97e1115c8e7305&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;07204&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;57452145-8154-4a0d-b103-5fbb3d8bc44f&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;PY-Prog1-March1&quot;,&#xd;
  &quot;LMEName&quot;: &quot;Meanley &amp; Son Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 20,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 50,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-06-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-06T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;400&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;20 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;40.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a9785962a97e1115c8e7305&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;&quot; // no file upload&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;invoice 123&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Don&apos;t Attach any supporting document</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Claim Creation 7-" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;ProgramId&quot;: {&#xd;
    &quot;$oid&quot;: &quot;5a9785962a97e1115c8e7305&quot;&#xd;
  },&#xd;
  &quot;ClaimId&quot;: &quot;&quot;,&#xd;
  &quot;LMEId&quot;: &quot;07204&quot;,&#xd;
  &quot;MarketingFundAccountId&quot;: &quot;57452145-8154-4a0d-b103-5fbb3d8bc44f&quot;,&#xd;
  &quot;ProgramCurrency&quot;: &quot;USD&quot;,&#xd;
  &quot;ProgramName&quot;: &quot;PY-Prog1-March1&quot;,&#xd;
  &quot;LMEName&quot;: &quot;Meanley &amp; Son Hardware&quot;,&#xd;
  &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
  &quot;ClaimReference&quot;: &quot;&quot;,&#xd;
  &quot;Activities&quot;: {&#xd;
    &quot;ActivityName&quot;: &quot;Direct Mail&quot;,&#xd;
    &quot;RmbPercentage&quot;: 20,&#xd;
    &quot;Description&quot;: &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
    &quot;CappingAmount&quot;: 50,&#xd;
    &quot;ErrorCode&quot;: 200&#xd;
  },&#xd;
  &quot;StartDate&quot;: &quot;2018-06-28T18:30:00.000Z&quot;,&#xd;
  &quot;EndDate&quot;: &quot;2018-04-06T18:30:00.000Z&quot;,&#xd;
  &quot;AvailableAmount&quot;: &quot;400&quot;,&#xd;
  &quot;TotalActivityCost&quot;: &quot;200&quot;,&#xd;
  &quot;ReimbursementPercentage&quot;: &quot;20 %&quot;,&#xd;
  &quot;EligibleAmount&quot;: &quot;40.00&quot;,&#xd;
  &quot;RequestedAmount&quot;: &quot;&quot;,&#xd;
  &quot;StartEventId&quot;: &quot;ActivityBasedClaimWorkflow_5a9785962a97e1115c8e7305&quot;,&#xd;
  &quot;ClaimStatusId&quot;: 1,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;Comment&quot;: &quot;Creating a Claim&quot;,&#xd;
  &quot;MFATransactionSource&quot;: &quot;System&quot;,&#xd;
  &quot;IsPreapproval&quot;: &quot;no&quot;,&#xd;
  &quot;Documents&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;FileName&quot;: &quot;CFM copy.docx&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;FormKey&quot;: &quot;cwpacehw&quot;,&#xd;
  &quot;Invoice&quot;: [&#xd;
    &quot;&quot; // No invoice &#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">azweb01d</stringProp>
          <stringProp name="HTTPSampler.port">11073</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/ClaimManagement/v1/claims/saveAndProcessClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Negative Scenario-Don&apos;t pass Invoice value</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/save-POST-This method is called from ClaimManagement API and tested from ClaimManagement.jmx file" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/disbursements/save?tenantId=acehardware</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">increasenum</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateDisbursement1+" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;DisbursementId&quot;: &quot;00000000-0000-0000-0000-000000000000&quot;,&#xd;
  &quot;DisbursementReferenceId&quot;: 308,&#xd;
  &quot;DisbursementTypeId&quot;: 1,&#xd;
  &quot;DisbursementTypeName&quot;: &quot;CreditMemo&quot;,&#xd;
  &quot;DisbursementStatusId&quot;: 4,&#xd;
  &quot;DisbursementStatusName&quot;: &quot;Approved&quot;,&#xd;
  &quot;DisbursementComments&quot;: &quot;API-Creating Disbursement using Corporate who have disbursement Approval permission&quot;,&#xd;
  &quot;TotalClaims&quot;: 2,&#xd;
  &quot;TotalRequestedAmount&quot;: 100,&#xd;
  &quot;TotalApprovedAmount&quot;: 100,&#xd;
  &quot;CreatedDate&quot;: &quot;2018-05-10T04:59:30.544Z&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;3512177&quot;,&#xd;
  &quot;CreatedBy&quot;: &quot;Test User&quot;,&#xd;
  &quot;ModifiedDate&quot;: &quot;2018-05-10T04:59:30.544Z&quot;,&#xd;
  &quot;ModifiedByUserId&quot;: &quot;3512177&quot;,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;ClaimID&quot;: &quot;${__BeanShell(bsh.shared.lnewclaimid)}&quot;,&#xd;
  &quot;ClaimStatus&quot;: 5,&#xd;
  &quot;StartDocId&quot;: null,&#xd;
  &quot;EndDocId&quot;: null,&#xd;
  &quot;StartEventId&quot;: null,&#xd;
  &quot;DisbursementType&quot;: &quot;CreditMemo&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/disbursements/save?tenantId=acehardware</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2524">OK</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">disbid</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..DisbursementId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">log.info(&quot;Request Id in Thread --&gt;&gt;&gt;&gt;&gt; &quot; + &quot;${disbid_ALL}&quot;);
log.info(&quot;Request Id in Thread --&gt;&gt;&gt;@@@&gt;&gt; &quot; + &quot;${disbid_1}&quot;);
String[] disburseid = vars.get(&quot;disbid_ALL&quot;).split(&quot;,&quot;); 
int len = disburseid.length;
log.info(&quot;----&gt;&gt;&gt;&gt;&gt; &quot; + len);
ArrayList DisbursementId = new ArrayList();
for(int i=0;i&lt;len;i++)
{
	DisbursementId.add(disburseid[i]);
}
bsh.shared.DisbursementId=DisbursementId;</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/InsertPaidClaims--POST" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InsertPaidClaims" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/InsertPaidClaims??tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/DisbursementsForDashboard--GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DisbursementList1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/disbursements/DisbursementsForDashboard?tenantId=acehardware&amp;&amp;limit=&amp;searchText=&amp;sortBy=&amp;sortOrder=</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/CustomFundExpiring--GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CustomFundExpiring" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/CustomFundExpiring?programId=&amp;ExpiryPercentage=tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/SaveAutoApproveDisbursement--GET" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SaveAutoApproveDisbursement" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/disbursements/SaveAutoApproveDisbursement?tenantId=acehardware&amp;userID=</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/DisbursementList-GET-This method is called from ClaimManagement API and tested from ClaimManagement.jmx file" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/disbursements/DisbursementList?period=12&amp;startDate=12&amp;endDate=12&amp;tenantId=12&amp;limit=12</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DisbursementList1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/disbursements/DisbursementList?period=30&amp;startDate=null&amp;endDate=null&amp;tenantId=acehardware&amp;limit=2</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/RunDisbursement/{id}-POST-This method is called from ClaimManagement API and tested from ClaimManagement.jmx file" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/disbursements/RunDisbursement/disb-123</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RunDisbursement1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/disbursements/RunDisbursement/${__BeanShell(bsh.shared.DisbursementId.get(${a}),)}?claimIdList=${__BeanShell(bsh.shared.lnewclaimid)}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/UpdateDisbursementOnReview-POST-This method is called from ClaimManagement API and tested from ClaimManagement.jmx file" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/disbursements/UpdateDisbursementOnReview</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UpdateDisbursement1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;DisbursementId&quot;: &quot;${__BeanShell(bsh.shared.DisbursementId.get(${a}),)}&quot;,&#xd;
  &quot;DisbursementReferenceId&quot;: 290,&#xd;
  &quot;DisbursementTypeId&quot;: 1,&#xd;
  &quot;DisbursementTypeName&quot;: &quot;CreditMemo&quot;,&#xd;
  &quot;DisbursementStatusId&quot;: 4,&#xd;
  &quot;DisbursementStatusName&quot;: &quot;Approved&quot;,&#xd;
  &quot;DisbursementComments&quot;: &quot;API-Updating the Disbursement by changing Description&quot;,&#xd;
  &quot;TotalClaims&quot;: 2,&#xd;
  &quot;TotalRequestedAmount&quot;: 100,&#xd;
  &quot;TotalApprovedAmount&quot;: 100,&#xd;
  &quot;CreatedDate&quot;: &quot;2018-05-10T04:59:30.544Z&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;${__BeanShell(bsh.shared.UserId.get(${a}),)}&quot;,&#xd;
  &quot;CreatedBy&quot;: &quot;Lorda&quot;,&#xd;
  &quot;ModifiedDate&quot;: &quot;2018-05-10T04:59:30.544Z&quot;,&#xd;
  &quot;ModifiedByUserId&quot;: &quot;${__BeanShell(bsh.shared.UserId.get(${a}),)}&quot;,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;ClaimID&quot;: &quot;${__BeanShell(bsh.shared.lnewclaimid)}&quot;,&#xd;
  &quot;ClaimStatus&quot;: 5,&#xd;
  &quot;StartDocId&quot;: null,&#xd;
  &quot;EndDocId&quot;: null,&#xd;
  &quot;StartEventId&quot;: null,&#xd;
  &quot;DisbursementType&quot;: &quot;CreditMemo&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/disbursements/UpdateDisbursementOnReview</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/GetDisbursementById-GET-This method is called from ClaimManagement API and tested from ClaimManagement.jmx file" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/disbursements/GetDisbursementById?id=12&amp;tenantId=acehardware</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetDisbursementById1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/disbursements/GetDisbursementById?id=${__BeanShell(bsh.shared.DisbursementId.get(${a}),)}&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/SaveApprover-POST-This method is called from ClaimManagement API and tested from ClaimManagement.jmx file" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/disbursements/SaveApprover?disbursementId=disb-123&amp;groupId=123&amp;processInstanceId=123</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DisbSaveApprover1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/disbursements/SaveApprover?disbursementId=${__BeanShell(bsh.shared.DisbursementId.get(${a}),)}&amp;groupId=123&amp;processInstanceId=</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/Comments/{id}-GET-This method is called from ClaimManagement API and tested from ClaimManagement.jmx file" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/disbursements/Comments/dsib-123</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DisbComments1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/disbursements/Comments/${__BeanShell(bsh.shared.DisbursementId.get(${a}),)}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/UpdateDisbursementOnSubmit-POST-This method is called from ClaimManagement API and tested from ClaimManagement.jmx file" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/disbursements/UpdateDisbursementOnSubmit</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${load}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DisbUpdate1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;DisbursementId&quot;: &quot;${__BeanShell(bsh.shared.DisbursementId.get(${a}),)}&quot;,&#xd;
  &quot;DisbursementReferenceId&quot;: 290,&#xd;
  &quot;DisbursementTypeId&quot;: 1,&#xd;
  &quot;DisbursementTypeName&quot;: &quot;CreditMemo&quot;,&#xd;
  &quot;DisbursementStatusId&quot;: 4,&#xd;
  &quot;DisbursementStatusName&quot;: &quot;Approved&quot;,&#xd;
  &quot;DisbursementComments&quot;: &quot;API-Updating the Disbursement by changing Description&quot;,&#xd;
  &quot;TotalClaims&quot;: 2,&#xd;
  &quot;TotalRequestedAmount&quot;: 100,&#xd;
  &quot;TotalApprovedAmount&quot;: 100,&#xd;
  &quot;CreatedDate&quot;: &quot;2018-05-10T04:59:30.544Z&quot;,&#xd;
  &quot;CreatedByUserId&quot;: &quot;${__BeanShell(bsh.shared.UserId.get(${a}),)}&quot;,&#xd;
  &quot;CreatedBy&quot;: &quot;Lorda&quot;,&#xd;
  &quot;ModifiedDate&quot;: &quot;2018-05-10T04:59:30.544Z&quot;,&#xd;
  &quot;ModifiedByUserId&quot;: &quot;${__BeanShell(bsh.shared.UserId.get(${a}),)}&quot;,&#xd;
  &quot;TenantId&quot;: &quot;acehardware&quot;,&#xd;
  &quot;ClaimID&quot;: &quot;${__BeanShell(bsh.shared.lnewclaimid)}&quot;,&#xd;
  &quot;ClaimStatus&quot;: 5,&#xd;
  &quot;StartDocId&quot;: null,&#xd;
  &quot;EndDocId&quot;: null,&#xd;
  &quot;StartEventId&quot;: null,&#xd;
  &quot;DisbursementType&quot;: &quot;CreditMemo&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/disbursements/UpdateDisbursementOnSubmit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/disbursements/GetCreditMemoDetails-POST-This is called from ClaimManagement api" enabled="false">
        <stringProp name="TestPlan.comments">http://azweb02u:11073/api/ClaimManagement/v1/disbursements/GetCreditMemoDetails?disbursementId=disb-123&amp;tenantId=acehardware</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreditMemo" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/disbursements/GetCreditMemoDetails?disbursementId=${__BeanShell(bsh.shared.DisbursementId.get(${a}),)}&amp;tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/CreateMarketingFundAccount-POST-this will be called from programs/save method" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/CreateMarketingFundAccount?tenantId=acehardware</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateMFA" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/MarketingFundAccount/CreateMarketingFundAccount?tenantId=acehardware</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/GetEstimateBalanceForPreapprovals-GET-FundingPA" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/GetEstimateBalanceForPreapprovals?preapprovalXml=qw</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetEstimateBalanceForPreapprovals1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/MarketingFundAccount/GetEstimateBalanceForPreapprovals?preapprovalXml=qw</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/GetEstimateBalanceForClaimWithPreapproval-GET-FundingPA" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/GetEstimateBalanceForClaimWithPreapproval?preApprovalId=12&amp;marketingFundAccountId=12&amp;claimIds=12</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetEstimateBalanceForClaimWithPreapproval1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/MarketingFundAccount/GetEstimateBalanceForClaimWithPreapproval?preApprovalId=12&amp;marketingFundAccountId=12&amp;claimIds=12</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/AllTransferAccural-GET-this is not used" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/AllTransferAccural</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AllTransferAccural1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/MarketingFundAccount/AllTransferAccural</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/PreApprovalFreezeFunds-POST-FundingPA" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/PreApprovalFreezeFunds</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PreApprovalFreezeFunds1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Bodydata</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/MarketingFundAccount/PreApprovalFreezeFunds</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/PreApprovalUnfreezeFunds-POST-FundingPA" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/PreApprovalUnfreezeFunds</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PreApprovalUnfreezeFunds1+" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/MarketingFundAccount/PreApprovalUnfreezeFunds</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/SaveAutoClaimTransactionDetails-POST-not implemented as of now" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/SaveAutoClaimTransactionDetails</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SaveAutoClaimTransactionDetails1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">bodydata</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/MarketingFundAccount/SaveAutoClaimTransactionDetails</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/ClearUnprocessedClaim-POST-Exception" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/ClearUnprocessedClaim</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ClearUnprocessedClaim1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;claimId&quot;: &quot;${__BeanShell(bsh.shared.lnewclaimid)}&quot;}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/MarketingFundAccount/ClearUnprocessedClaim</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/BulkInsertClaimTransactions-POST-not used for ACE" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/BulkInsertClaimTransactions</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BulkInsertClaimTransactions1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">bodydata</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/MarketingFundAccount/BulkInsertClaimTransactions</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/ReleaseClaimsFromTransaction-POST-this is called from payment API" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/ReleaseClaimsFromTransaction</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ReleaseClaimsFromTransaction1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">bodydata</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/MarketingFundAccount/v1/MarketingFundAccount/ReleaseClaimsFromTransaction</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/MarketingFundAccount/UpdateMarketingFundAccount-POST-LDM is not integrated" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1524465799000</longProp>
        <longProp name="ThreadGroup.end_time">1524465799000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">http://azweb02u:11076/api/MarketingFundAccount/v1/MarketingFundAccount/UpdateMarketingFundAccount?accrualAmount=20</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UpdateMarketingFundAccount1+" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;_id&quot; :&#xd;
&#xd;
{ &quot;$oid&quot;: &quot;5af961762a97e135c81f15a9&quot; }&#xd;
,&#xd;
	&quot;ClaimDecisionId&quot; : &quot;24&quot;,&#xd;
	&quot;FundDistributionHierarchy&quot; : &quot;org&quot;,&#xd;
	&quot;HierarchyLevel&quot; : &quot;6,7&quot;,&#xd;
	&quot;Documents&quot; : [ ],&#xd;
	&quot;ProgramName&quot; : &quot;API-1.526301401781E12&quot;,&#xd;
	&quot;Description&quot; : &quot;Creating a Program&quot;,&#xd;
	&quot;ProgramCurrency&quot; : &quot;USD&quot;,&#xd;
	&quot;StartDate&quot; : &quot;2018-04-25T18:30:00Z&quot;,&#xd;
	&quot;EndDate&quot; : &quot;2019-06-13T18:30:00Z&quot;,&#xd;
	&quot;ClaimWorkflowId&quot; : 23,&#xd;
	&quot;AllowOverdraft&quot; : &quot;Yes&quot;,&#xd;
	&quot;BrandingRequired&quot; : &quot;Yes&quot;,&#xd;
	&quot;AllowECom&quot; : &quot;yes&quot;,&#xd;
	&quot;AccrualType&quot; : &quot;Flat&quot;,&#xd;
	&quot;FlatAccrualPeriod&quot; : &quot;Annual&quot;,&#xd;
	&quot;RollingAccrualPeriod&quot; : &quot;&quot;,&#xd;
	&quot;LastTransactionDate&quot; : &quot;2019-07-20T18:30:00Z&quot;,&#xd;
	&quot;ExpirationDate&quot; : &quot;2019-08-27T18:30:00Z&quot;,&#xd;
	&quot;Activities&quot; : [&#xd;
		{&#xd;
			&quot;DirectMailName&quot; : &quot;Direct Mail&quot;,&#xd;
			&quot;DirectMailDescription&quot; : &quot;1. Image of the creative. &lt;/n&gt; 2. Invoice.&quot;,&#xd;
			&quot;FleetgraphicsDescription&quot; : &quot;1. Image of the creative.&lt;/n&gt; 2. Invoice.&quot;,&#xd;
			&quot;FleetgraphicsName&quot; : &quot;Fleet graphics&quot;,&#xd;
			&quot;ROPName&quot; : &quot;ROP&quot;,&#xd;
			&quot;ROPDescription&quot; : &quot;1. Image of the creative.&lt;/n&gt; 2. Invoice.&lt;/n&gt; 3. One (1) original full-page tear sheet. (A tear heet is a page from the publication that serves as verification that the advertisement was published).&quot;,&#xd;
			&quot;DigitalandSocialMediaName&quot; : &quot;Digital and Social Media&quot;,&#xd;
			&quot;DigitalandSocialMediaDescription&quot; : &quot;1. Image of the Creative (Screenshot of the ad from the system or mobile).&lt;/n&gt; 2. Invoice.&quot;,&#xd;
			&quot;OutofHomeName&quot; : &quot;Out of Home&quot;,&#xd;
			&quot;OutofHomeDescription&quot; : &quot;1. Image of the Billboard.&lt;/n&gt; 2. Invoice.&quot;,&#xd;
			&quot;SponsorshipName&quot; : &quot;Sponsorship&quot;,&#xd;
			&quot;PrePrintName&quot; : &quot;Pre Print&quot;,&#xd;
			&quot;TVName&quot; : &quot;TV&quot;,&#xd;
			&quot;TVDescription&quot; : &quot;1. Invoice.&lt;/n&gt; 2. Notarized script with approved ANA/RAB or ANA TVB certification and net cost of spots.&quot;,&#xd;
			&quot;ReceiptAdvertisingName&quot; : &quot;Receipt Advertising&quot;,&#xd;
			&quot;BlueCMNBucketName&quot; : &quot;Blue CMN Bucket&quot;,&#xd;
			&quot;RadioName&quot; : &quot;Radio&quot;,&#xd;
			&quot;RadioDescription&quot; : &quot;1. Invoice.&lt;/n&gt; 2. Notarized script with approved ANA/RAB or ANA TVB certification and net cost of spots.&quot;,&#xd;
			&quot;ReimbursementType&quot; : &quot;Fixed&quot;,&#xd;
			&quot;FixedReimbursement&quot; : 10,&#xd;
			&quot;AllowCapping&quot; : &quot;yes&quot;,&#xd;
			&quot;DirectMail&quot; : false,&#xd;
			&quot;Fleetgraphics&quot; : false,&#xd;
			&quot;ROP&quot; : false,&#xd;
			&quot;DigitalandSocialMedia&quot; : true,&#xd;
			&quot;OutofHome&quot; : false,&#xd;
			&quot;Sponsorship&quot; : false,&#xd;
			&quot;SponsorshipDescription&quot; : &quot;&quot;,&#xd;
			&quot;PrePrint&quot; : false,&#xd;
			&quot;PrePrintDescription&quot; : &quot;&quot;,&#xd;
			&quot;TV&quot; : true,&#xd;
			&quot;ReceiptAdvertising&quot; : false,&#xd;
			&quot;ReceiptAdvertisingDescription&quot; : &quot;&quot;,&#xd;
			&quot;BlueCMNBucket&quot; : false,&#xd;
			&quot;BlueCMNBucketDescription&quot; : &quot;&quot;,&#xd;
			&quot;Radio&quot; : false,&#xd;
			&quot;ActivitiesTableTextField&quot; : &quot;&quot;,&#xd;
			&quot;DirectMailRP&quot; : null,&#xd;
			&quot;DirectMailCapRP&quot; : null,&#xd;
			&quot;FleetgraphicsRP&quot; : null,&#xd;
			&quot;FleetgraphicsCapRP&quot; : null,&#xd;
			&quot;ROPRP&quot; : null,&#xd;
			&quot;ROPCapRP&quot; : null,&#xd;
			&quot;DigitalandSocialMediaRP&quot; : null,&#xd;
			&quot;DigitalandSocialMediaCapRP&quot; : 55,&#xd;
			&quot;OutofHomeRP&quot; : null,&#xd;
			&quot;OutofHomeCapRP&quot; : null,&#xd;
			&quot;SponsorshipRP&quot; : null,&#xd;
			&quot;SponsorshipCapRP&quot; : null,&#xd;
			&quot;PrePrintRP&quot; : null,&#xd;
			&quot;PrePrintCapRP&quot; : null,&#xd;
			&quot;TVRP&quot; : null,&#xd;
			&quot;TVCapRP&quot; : 25,&#xd;
			&quot;ReceiptAdvertisingRP&quot; : null,&#xd;
			&quot;ReceiptAdvertisingCapRP&quot; : null,&#xd;
			&quot;BlueCMNBucketRP&quot; : null,&#xd;
			&quot;BlueCMNBucketCapRP&quot; : null,&#xd;
			&quot;RadioRP&quot; : null,&#xd;
			&quot;RadioCapRP&quot; : null&#xd;
		}&#xd;
	],&#xd;
	&quot;FormKey&quot; : &quot;programsace&quot;,&#xd;
	&quot;ProgramStatusId&quot; : 5,&#xd;
	&quot;ModifiedByUserId&quot; : &quot;3512176&quot;,&#xd;
	&quot;CreatedByUserId&quot; : &quot;3512176&quot;,&#xd;
	&quot;ModifiedDate&quot; : &quot;2018-05-14T18:08:41.903+05:30&quot;,&#xd;
	&quot;CreatedDate&quot; : &quot;2018-05-14T18:06:42.255+05:30&quot;,&#xd;
	&quot;TenantId&quot; : &quot;acehardware&quot;,&#xd;
	&quot;ProgramId&quot; : 424&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/cfm-account/v2/MarketingFundAccount/UpdateMarketingFundAccount?accrualAmount=100</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
      <hashTree/>
      <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor-Validating Json Response" enabled="true">
        <boolProp name="resetInterpreter">false</boolProp>
        <stringProp name="parameters"></stringProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="script">
import org.json.JSONException;
import org.json.JSONObject;

try
{
    JSONObject obj = new JSONObject(prev.getResponseData());
    log.info(&quot;************valid json&quot;); 
}
catch(Exception e)
{
    log.info(&quot;==========&gt;&gt;&gt;&gt;&gt;Not a valid json&quot;);
    prev.setSuccessful(false);
   
}</stringProp>
        <stringProp name="TestPlan.comments"> prev.setResponseMessage(ex.getMessage());</stringProp>
      </BeanShellPostProcessor>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
